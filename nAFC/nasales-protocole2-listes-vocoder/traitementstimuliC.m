[s,err] = stat("processed/ipi-1bands-fc-4.wav"); if (err == 0), disp("processed/ipi-1bands-fc-4.wav done"); else disp("processed/ipi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-1bands-fc-4.wav"); end
[s,err] = stat("processed/ipi-1bands-fc-16.wav"); if (err == 0), disp("processed/ipi-1bands-fc-16.wav done"); else disp("processed/ipi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-1bands-fc-16.wav"); end
[s,err] = stat("processed/ipi-1bands-fc-128.wav"); if (err == 0), disp("processed/ipi-1bands-fc-128.wav done"); else disp("processed/ipi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-1bands-fc-128.wav"); end
[s,err] = stat("processed/ipi-2bands-fc-4.wav"); if (err == 0), disp("processed/ipi-2bands-fc-4.wav done"); else disp("processed/ipi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-2bands-fc-4.wav"); end
[s,err] = stat("processed/ipi-2bands-fc-16.wav"); if (err == 0), disp("processed/ipi-2bands-fc-16.wav done"); else disp("processed/ipi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-2bands-fc-16.wav"); end
[s,err] = stat("processed/ipi-2bands-fc-128.wav"); if (err == 0), disp("processed/ipi-2bands-fc-128.wav done"); else disp("processed/ipi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-2bands-fc-128.wav"); end
[s,err] = stat("processed/ipi-4bands-fc-4.wav"); if (err == 0), disp("processed/ipi-4bands-fc-4.wav done"); else disp("processed/ipi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-4bands-fc-4.wav"); end
[s,err] = stat("processed/ipi-4bands-fc-16.wav"); if (err == 0), disp("processed/ipi-4bands-fc-16.wav done"); else disp("processed/ipi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-4bands-fc-16.wav"); end
[s,err] = stat("processed/ipi-4bands-fc-128.wav"); if (err == 0), disp("processed/ipi-4bands-fc-128.wav done"); else disp("processed/ipi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-4bands-fc-128.wav"); end
[s,err] = stat("processed/ipi-6bands-fc-4.wav"); if (err == 0), disp("processed/ipi-6bands-fc-4.wav done"); else disp("processed/ipi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-6bands-fc-4.wav"); end
[s,err] = stat("processed/ipi-6bands-fc-16.wav"); if (err == 0), disp("processed/ipi-6bands-fc-16.wav done"); else disp("processed/ipi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-6bands-fc-16.wav"); end
[s,err] = stat("processed/ipi-6bands-fc-128.wav"); if (err == 0), disp("processed/ipi-6bands-fc-128.wav done"); else disp("processed/ipi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-6bands-fc-128.wav"); end
[s,err] = stat("processed/ipi-8bands-fc-4.wav"); if (err == 0), disp("processed/ipi-8bands-fc-4.wav done"); else disp("processed/ipi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-8bands-fc-4.wav"); end
[s,err] = stat("processed/ipi-8bands-fc-16.wav"); if (err == 0), disp("processed/ipi-8bands-fc-16.wav done"); else disp("processed/ipi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-8bands-fc-16.wav"); end
[s,err] = stat("processed/ipi-8bands-fc-128.wav"); if (err == 0), disp("processed/ipi-8bands-fc-128.wav done"); else disp("processed/ipi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-8bands-fc-128.wav"); end
[s,err] = stat("processed/ipi-12bands-fc-4.wav"); if (err == 0), disp("processed/ipi-12bands-fc-4.wav done"); else disp("processed/ipi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-12bands-fc-4.wav"); end
[s,err] = stat("processed/ipi-12bands-fc-16.wav"); if (err == 0), disp("processed/ipi-12bands-fc-16.wav done"); else disp("processed/ipi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-12bands-fc-16.wav"); end
[s,err] = stat("processed/ipi-12bands-fc-128.wav"); if (err == 0), disp("processed/ipi-12bands-fc-128.wav done"); else disp("processed/ipi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-12bands-fc-128.wav"); end
[s,err] = stat("processed/ipi-16bands-fc-4.wav"); if (err == 0), disp("processed/ipi-16bands-fc-4.wav done"); else disp("processed/ipi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-16bands-fc-4.wav"); end
[s,err] = stat("processed/ipi-16bands-fc-16.wav"); if (err == 0), disp("processed/ipi-16bands-fc-16.wav done"); else disp("processed/ipi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-16bands-fc-16.wav"); end
[s,err] = stat("processed/ipi-16bands-fc-128.wav"); if (err == 0), disp("processed/ipi-16bands-fc-128.wav done"); else disp("processed/ipi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ipi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ipi-16bands-fc-128.wav"); end
[s,err] = stat("processed/apa-1bands-fc-4.wav"); if (err == 0), disp("processed/apa-1bands-fc-4.wav done"); else disp("processed/apa-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-1bands-fc-4.wav"); end
[s,err] = stat("processed/apa-1bands-fc-16.wav"); if (err == 0), disp("processed/apa-1bands-fc-16.wav done"); else disp("processed/apa-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-1bands-fc-16.wav"); end
[s,err] = stat("processed/apa-1bands-fc-128.wav"); if (err == 0), disp("processed/apa-1bands-fc-128.wav done"); else disp("processed/apa-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-1bands-fc-128.wav"); end
[s,err] = stat("processed/apa-2bands-fc-4.wav"); if (err == 0), disp("processed/apa-2bands-fc-4.wav done"); else disp("processed/apa-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-2bands-fc-4.wav"); end
[s,err] = stat("processed/apa-2bands-fc-16.wav"); if (err == 0), disp("processed/apa-2bands-fc-16.wav done"); else disp("processed/apa-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-2bands-fc-16.wav"); end
[s,err] = stat("processed/apa-2bands-fc-128.wav"); if (err == 0), disp("processed/apa-2bands-fc-128.wav done"); else disp("processed/apa-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-2bands-fc-128.wav"); end
[s,err] = stat("processed/apa-4bands-fc-4.wav"); if (err == 0), disp("processed/apa-4bands-fc-4.wav done"); else disp("processed/apa-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-4bands-fc-4.wav"); end
[s,err] = stat("processed/apa-4bands-fc-16.wav"); if (err == 0), disp("processed/apa-4bands-fc-16.wav done"); else disp("processed/apa-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-4bands-fc-16.wav"); end
[s,err] = stat("processed/apa-4bands-fc-128.wav"); if (err == 0), disp("processed/apa-4bands-fc-128.wav done"); else disp("processed/apa-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-4bands-fc-128.wav"); end
[s,err] = stat("processed/apa-6bands-fc-4.wav"); if (err == 0), disp("processed/apa-6bands-fc-4.wav done"); else disp("processed/apa-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-6bands-fc-4.wav"); end
[s,err] = stat("processed/apa-6bands-fc-16.wav"); if (err == 0), disp("processed/apa-6bands-fc-16.wav done"); else disp("processed/apa-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-6bands-fc-16.wav"); end
[s,err] = stat("processed/apa-6bands-fc-128.wav"); if (err == 0), disp("processed/apa-6bands-fc-128.wav done"); else disp("processed/apa-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-6bands-fc-128.wav"); end
[s,err] = stat("processed/apa-8bands-fc-4.wav"); if (err == 0), disp("processed/apa-8bands-fc-4.wav done"); else disp("processed/apa-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-8bands-fc-4.wav"); end
[s,err] = stat("processed/apa-8bands-fc-16.wav"); if (err == 0), disp("processed/apa-8bands-fc-16.wav done"); else disp("processed/apa-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-8bands-fc-16.wav"); end
[s,err] = stat("processed/apa-8bands-fc-128.wav"); if (err == 0), disp("processed/apa-8bands-fc-128.wav done"); else disp("processed/apa-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-8bands-fc-128.wav"); end
[s,err] = stat("processed/apa-12bands-fc-4.wav"); if (err == 0), disp("processed/apa-12bands-fc-4.wav done"); else disp("processed/apa-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-12bands-fc-4.wav"); end
[s,err] = stat("processed/apa-12bands-fc-16.wav"); if (err == 0), disp("processed/apa-12bands-fc-16.wav done"); else disp("processed/apa-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-12bands-fc-16.wav"); end
[s,err] = stat("processed/apa-12bands-fc-128.wav"); if (err == 0), disp("processed/apa-12bands-fc-128.wav done"); else disp("processed/apa-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-12bands-fc-128.wav"); end
[s,err] = stat("processed/apa-16bands-fc-4.wav"); if (err == 0), disp("processed/apa-16bands-fc-4.wav done"); else disp("processed/apa-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-16bands-fc-4.wav"); end
[s,err] = stat("processed/apa-16bands-fc-16.wav"); if (err == 0), disp("processed/apa-16bands-fc-16.wav done"); else disp("processed/apa-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-16bands-fc-16.wav"); end
[s,err] = stat("processed/apa-16bands-fc-128.wav"); if (err == 0), disp("processed/apa-16bands-fc-128.wav done"); else disp("processed/apa-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/apa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/apa-16bands-fc-128.wav"); end
[s,err] = stat("processed/oupou-1bands-fc-4.wav"); if (err == 0), disp("processed/oupou-1bands-fc-4.wav done"); else disp("processed/oupou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-1bands-fc-4.wav"); end
[s,err] = stat("processed/oupou-1bands-fc-16.wav"); if (err == 0), disp("processed/oupou-1bands-fc-16.wav done"); else disp("processed/oupou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-1bands-fc-16.wav"); end
[s,err] = stat("processed/oupou-1bands-fc-128.wav"); if (err == 0), disp("processed/oupou-1bands-fc-128.wav done"); else disp("processed/oupou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-1bands-fc-128.wav"); end
[s,err] = stat("processed/oupou-2bands-fc-4.wav"); if (err == 0), disp("processed/oupou-2bands-fc-4.wav done"); else disp("processed/oupou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-2bands-fc-4.wav"); end
[s,err] = stat("processed/oupou-2bands-fc-16.wav"); if (err == 0), disp("processed/oupou-2bands-fc-16.wav done"); else disp("processed/oupou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-2bands-fc-16.wav"); end
[s,err] = stat("processed/oupou-2bands-fc-128.wav"); if (err == 0), disp("processed/oupou-2bands-fc-128.wav done"); else disp("processed/oupou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-2bands-fc-128.wav"); end
[s,err] = stat("processed/oupou-4bands-fc-4.wav"); if (err == 0), disp("processed/oupou-4bands-fc-4.wav done"); else disp("processed/oupou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-4bands-fc-4.wav"); end
[s,err] = stat("processed/oupou-4bands-fc-16.wav"); if (err == 0), disp("processed/oupou-4bands-fc-16.wav done"); else disp("processed/oupou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-4bands-fc-16.wav"); end
[s,err] = stat("processed/oupou-4bands-fc-128.wav"); if (err == 0), disp("processed/oupou-4bands-fc-128.wav done"); else disp("processed/oupou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-4bands-fc-128.wav"); end
[s,err] = stat("processed/oupou-6bands-fc-4.wav"); if (err == 0), disp("processed/oupou-6bands-fc-4.wav done"); else disp("processed/oupou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-6bands-fc-4.wav"); end
[s,err] = stat("processed/oupou-6bands-fc-16.wav"); if (err == 0), disp("processed/oupou-6bands-fc-16.wav done"); else disp("processed/oupou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-6bands-fc-16.wav"); end
[s,err] = stat("processed/oupou-6bands-fc-128.wav"); if (err == 0), disp("processed/oupou-6bands-fc-128.wav done"); else disp("processed/oupou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-6bands-fc-128.wav"); end
[s,err] = stat("processed/oupou-8bands-fc-4.wav"); if (err == 0), disp("processed/oupou-8bands-fc-4.wav done"); else disp("processed/oupou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-8bands-fc-4.wav"); end
[s,err] = stat("processed/oupou-8bands-fc-16.wav"); if (err == 0), disp("processed/oupou-8bands-fc-16.wav done"); else disp("processed/oupou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-8bands-fc-16.wav"); end
[s,err] = stat("processed/oupou-8bands-fc-128.wav"); if (err == 0), disp("processed/oupou-8bands-fc-128.wav done"); else disp("processed/oupou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-8bands-fc-128.wav"); end
[s,err] = stat("processed/oupou-12bands-fc-4.wav"); if (err == 0), disp("processed/oupou-12bands-fc-4.wav done"); else disp("processed/oupou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-12bands-fc-4.wav"); end
[s,err] = stat("processed/oupou-12bands-fc-16.wav"); if (err == 0), disp("processed/oupou-12bands-fc-16.wav done"); else disp("processed/oupou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-12bands-fc-16.wav"); end
[s,err] = stat("processed/oupou-12bands-fc-128.wav"); if (err == 0), disp("processed/oupou-12bands-fc-128.wav done"); else disp("processed/oupou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-12bands-fc-128.wav"); end
[s,err] = stat("processed/oupou-16bands-fc-4.wav"); if (err == 0), disp("processed/oupou-16bands-fc-4.wav done"); else disp("processed/oupou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-16bands-fc-4.wav"); end
[s,err] = stat("processed/oupou-16bands-fc-16.wav"); if (err == 0), disp("processed/oupou-16bands-fc-16.wav done"); else disp("processed/oupou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-16bands-fc-16.wav"); end
[s,err] = stat("processed/oupou-16bands-fc-128.wav"); if (err == 0), disp("processed/oupou-16bands-fc-128.wav done"); else disp("processed/oupou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oupou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oupou-16bands-fc-128.wav"); end
[s,err] = stat("processed/iti-1bands-fc-4.wav"); if (err == 0), disp("processed/iti-1bands-fc-4.wav done"); else disp("processed/iti-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-1bands-fc-4.wav"); end
[s,err] = stat("processed/iti-1bands-fc-16.wav"); if (err == 0), disp("processed/iti-1bands-fc-16.wav done"); else disp("processed/iti-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-1bands-fc-16.wav"); end
[s,err] = stat("processed/iti-1bands-fc-128.wav"); if (err == 0), disp("processed/iti-1bands-fc-128.wav done"); else disp("processed/iti-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-1bands-fc-128.wav"); end
[s,err] = stat("processed/iti-2bands-fc-4.wav"); if (err == 0), disp("processed/iti-2bands-fc-4.wav done"); else disp("processed/iti-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-2bands-fc-4.wav"); end
[s,err] = stat("processed/iti-2bands-fc-16.wav"); if (err == 0), disp("processed/iti-2bands-fc-16.wav done"); else disp("processed/iti-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-2bands-fc-16.wav"); end
[s,err] = stat("processed/iti-2bands-fc-128.wav"); if (err == 0), disp("processed/iti-2bands-fc-128.wav done"); else disp("processed/iti-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-2bands-fc-128.wav"); end
[s,err] = stat("processed/iti-4bands-fc-4.wav"); if (err == 0), disp("processed/iti-4bands-fc-4.wav done"); else disp("processed/iti-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-4bands-fc-4.wav"); end
[s,err] = stat("processed/iti-4bands-fc-16.wav"); if (err == 0), disp("processed/iti-4bands-fc-16.wav done"); else disp("processed/iti-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-4bands-fc-16.wav"); end
[s,err] = stat("processed/iti-4bands-fc-128.wav"); if (err == 0), disp("processed/iti-4bands-fc-128.wav done"); else disp("processed/iti-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-4bands-fc-128.wav"); end
[s,err] = stat("processed/iti-6bands-fc-4.wav"); if (err == 0), disp("processed/iti-6bands-fc-4.wav done"); else disp("processed/iti-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-6bands-fc-4.wav"); end
[s,err] = stat("processed/iti-6bands-fc-16.wav"); if (err == 0), disp("processed/iti-6bands-fc-16.wav done"); else disp("processed/iti-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-6bands-fc-16.wav"); end
[s,err] = stat("processed/iti-6bands-fc-128.wav"); if (err == 0), disp("processed/iti-6bands-fc-128.wav done"); else disp("processed/iti-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-6bands-fc-128.wav"); end
[s,err] = stat("processed/iti-8bands-fc-4.wav"); if (err == 0), disp("processed/iti-8bands-fc-4.wav done"); else disp("processed/iti-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-8bands-fc-4.wav"); end
[s,err] = stat("processed/iti-8bands-fc-16.wav"); if (err == 0), disp("processed/iti-8bands-fc-16.wav done"); else disp("processed/iti-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-8bands-fc-16.wav"); end
[s,err] = stat("processed/iti-8bands-fc-128.wav"); if (err == 0), disp("processed/iti-8bands-fc-128.wav done"); else disp("processed/iti-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-8bands-fc-128.wav"); end
[s,err] = stat("processed/iti-12bands-fc-4.wav"); if (err == 0), disp("processed/iti-12bands-fc-4.wav done"); else disp("processed/iti-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-12bands-fc-4.wav"); end
[s,err] = stat("processed/iti-12bands-fc-16.wav"); if (err == 0), disp("processed/iti-12bands-fc-16.wav done"); else disp("processed/iti-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-12bands-fc-16.wav"); end
[s,err] = stat("processed/iti-12bands-fc-128.wav"); if (err == 0), disp("processed/iti-12bands-fc-128.wav done"); else disp("processed/iti-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-12bands-fc-128.wav"); end
[s,err] = stat("processed/iti-16bands-fc-4.wav"); if (err == 0), disp("processed/iti-16bands-fc-4.wav done"); else disp("processed/iti-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-16bands-fc-4.wav"); end
[s,err] = stat("processed/iti-16bands-fc-16.wav"); if (err == 0), disp("processed/iti-16bands-fc-16.wav done"); else disp("processed/iti-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-16bands-fc-16.wav"); end
[s,err] = stat("processed/iti-16bands-fc-128.wav"); if (err == 0), disp("processed/iti-16bands-fc-128.wav done"); else disp("processed/iti-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iti.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iti-16bands-fc-128.wav"); end
[s,err] = stat("processed/ata-1bands-fc-4.wav"); if (err == 0), disp("processed/ata-1bands-fc-4.wav done"); else disp("processed/ata-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-1bands-fc-4.wav"); end
[s,err] = stat("processed/ata-1bands-fc-16.wav"); if (err == 0), disp("processed/ata-1bands-fc-16.wav done"); else disp("processed/ata-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-1bands-fc-16.wav"); end
[s,err] = stat("processed/ata-1bands-fc-128.wav"); if (err == 0), disp("processed/ata-1bands-fc-128.wav done"); else disp("processed/ata-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-1bands-fc-128.wav"); end
[s,err] = stat("processed/ata-2bands-fc-4.wav"); if (err == 0), disp("processed/ata-2bands-fc-4.wav done"); else disp("processed/ata-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-2bands-fc-4.wav"); end
[s,err] = stat("processed/ata-2bands-fc-16.wav"); if (err == 0), disp("processed/ata-2bands-fc-16.wav done"); else disp("processed/ata-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-2bands-fc-16.wav"); end
[s,err] = stat("processed/ata-2bands-fc-128.wav"); if (err == 0), disp("processed/ata-2bands-fc-128.wav done"); else disp("processed/ata-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-2bands-fc-128.wav"); end
[s,err] = stat("processed/ata-4bands-fc-4.wav"); if (err == 0), disp("processed/ata-4bands-fc-4.wav done"); else disp("processed/ata-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-4bands-fc-4.wav"); end
[s,err] = stat("processed/ata-4bands-fc-16.wav"); if (err == 0), disp("processed/ata-4bands-fc-16.wav done"); else disp("processed/ata-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-4bands-fc-16.wav"); end
[s,err] = stat("processed/ata-4bands-fc-128.wav"); if (err == 0), disp("processed/ata-4bands-fc-128.wav done"); else disp("processed/ata-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-4bands-fc-128.wav"); end
[s,err] = stat("processed/ata-6bands-fc-4.wav"); if (err == 0), disp("processed/ata-6bands-fc-4.wav done"); else disp("processed/ata-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-6bands-fc-4.wav"); end
[s,err] = stat("processed/ata-6bands-fc-16.wav"); if (err == 0), disp("processed/ata-6bands-fc-16.wav done"); else disp("processed/ata-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-6bands-fc-16.wav"); end
[s,err] = stat("processed/ata-6bands-fc-128.wav"); if (err == 0), disp("processed/ata-6bands-fc-128.wav done"); else disp("processed/ata-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-6bands-fc-128.wav"); end
[s,err] = stat("processed/ata-8bands-fc-4.wav"); if (err == 0), disp("processed/ata-8bands-fc-4.wav done"); else disp("processed/ata-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-8bands-fc-4.wav"); end
[s,err] = stat("processed/ata-8bands-fc-16.wav"); if (err == 0), disp("processed/ata-8bands-fc-16.wav done"); else disp("processed/ata-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-8bands-fc-16.wav"); end
[s,err] = stat("processed/ata-8bands-fc-128.wav"); if (err == 0), disp("processed/ata-8bands-fc-128.wav done"); else disp("processed/ata-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-8bands-fc-128.wav"); end
[s,err] = stat("processed/ata-12bands-fc-4.wav"); if (err == 0), disp("processed/ata-12bands-fc-4.wav done"); else disp("processed/ata-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-12bands-fc-4.wav"); end
[s,err] = stat("processed/ata-12bands-fc-16.wav"); if (err == 0), disp("processed/ata-12bands-fc-16.wav done"); else disp("processed/ata-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-12bands-fc-16.wav"); end
[s,err] = stat("processed/ata-12bands-fc-128.wav"); if (err == 0), disp("processed/ata-12bands-fc-128.wav done"); else disp("processed/ata-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-12bands-fc-128.wav"); end
[s,err] = stat("processed/ata-16bands-fc-4.wav"); if (err == 0), disp("processed/ata-16bands-fc-4.wav done"); else disp("processed/ata-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-16bands-fc-4.wav"); end
[s,err] = stat("processed/ata-16bands-fc-16.wav"); if (err == 0), disp("processed/ata-16bands-fc-16.wav done"); else disp("processed/ata-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-16bands-fc-16.wav"); end
[s,err] = stat("processed/ata-16bands-fc-128.wav"); if (err == 0), disp("processed/ata-16bands-fc-128.wav done"); else disp("processed/ata-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ata.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ata-16bands-fc-128.wav"); end
[s,err] = stat("processed/outou-1bands-fc-4.wav"); if (err == 0), disp("processed/outou-1bands-fc-4.wav done"); else disp("processed/outou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-1bands-fc-4.wav"); end
[s,err] = stat("processed/outou-1bands-fc-16.wav"); if (err == 0), disp("processed/outou-1bands-fc-16.wav done"); else disp("processed/outou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-1bands-fc-16.wav"); end
[s,err] = stat("processed/outou-1bands-fc-128.wav"); if (err == 0), disp("processed/outou-1bands-fc-128.wav done"); else disp("processed/outou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-1bands-fc-128.wav"); end
[s,err] = stat("processed/outou-2bands-fc-4.wav"); if (err == 0), disp("processed/outou-2bands-fc-4.wav done"); else disp("processed/outou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-2bands-fc-4.wav"); end
[s,err] = stat("processed/outou-2bands-fc-16.wav"); if (err == 0), disp("processed/outou-2bands-fc-16.wav done"); else disp("processed/outou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-2bands-fc-16.wav"); end
[s,err] = stat("processed/outou-2bands-fc-128.wav"); if (err == 0), disp("processed/outou-2bands-fc-128.wav done"); else disp("processed/outou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-2bands-fc-128.wav"); end
[s,err] = stat("processed/outou-4bands-fc-4.wav"); if (err == 0), disp("processed/outou-4bands-fc-4.wav done"); else disp("processed/outou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-4bands-fc-4.wav"); end
[s,err] = stat("processed/outou-4bands-fc-16.wav"); if (err == 0), disp("processed/outou-4bands-fc-16.wav done"); else disp("processed/outou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-4bands-fc-16.wav"); end
[s,err] = stat("processed/outou-4bands-fc-128.wav"); if (err == 0), disp("processed/outou-4bands-fc-128.wav done"); else disp("processed/outou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-4bands-fc-128.wav"); end
[s,err] = stat("processed/outou-6bands-fc-4.wav"); if (err == 0), disp("processed/outou-6bands-fc-4.wav done"); else disp("processed/outou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-6bands-fc-4.wav"); end
[s,err] = stat("processed/outou-6bands-fc-16.wav"); if (err == 0), disp("processed/outou-6bands-fc-16.wav done"); else disp("processed/outou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-6bands-fc-16.wav"); end
[s,err] = stat("processed/outou-6bands-fc-128.wav"); if (err == 0), disp("processed/outou-6bands-fc-128.wav done"); else disp("processed/outou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-6bands-fc-128.wav"); end
[s,err] = stat("processed/outou-8bands-fc-4.wav"); if (err == 0), disp("processed/outou-8bands-fc-4.wav done"); else disp("processed/outou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-8bands-fc-4.wav"); end
[s,err] = stat("processed/outou-8bands-fc-16.wav"); if (err == 0), disp("processed/outou-8bands-fc-16.wav done"); else disp("processed/outou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-8bands-fc-16.wav"); end
[s,err] = stat("processed/outou-8bands-fc-128.wav"); if (err == 0), disp("processed/outou-8bands-fc-128.wav done"); else disp("processed/outou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-8bands-fc-128.wav"); end
[s,err] = stat("processed/outou-12bands-fc-4.wav"); if (err == 0), disp("processed/outou-12bands-fc-4.wav done"); else disp("processed/outou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-12bands-fc-4.wav"); end
[s,err] = stat("processed/outou-12bands-fc-16.wav"); if (err == 0), disp("processed/outou-12bands-fc-16.wav done"); else disp("processed/outou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-12bands-fc-16.wav"); end
[s,err] = stat("processed/outou-12bands-fc-128.wav"); if (err == 0), disp("processed/outou-12bands-fc-128.wav done"); else disp("processed/outou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-12bands-fc-128.wav"); end
[s,err] = stat("processed/outou-16bands-fc-4.wav"); if (err == 0), disp("processed/outou-16bands-fc-4.wav done"); else disp("processed/outou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-16bands-fc-4.wav"); end
[s,err] = stat("processed/outou-16bands-fc-16.wav"); if (err == 0), disp("processed/outou-16bands-fc-16.wav done"); else disp("processed/outou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-16bands-fc-16.wav"); end
[s,err] = stat("processed/outou-16bands-fc-128.wav"); if (err == 0), disp("processed/outou-16bands-fc-128.wav done"); else disp("processed/outou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/outou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/outou-16bands-fc-128.wav"); end
[s,err] = stat("processed/iki-1bands-fc-4.wav"); if (err == 0), disp("processed/iki-1bands-fc-4.wav done"); else disp("processed/iki-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-1bands-fc-4.wav"); end
[s,err] = stat("processed/iki-1bands-fc-16.wav"); if (err == 0), disp("processed/iki-1bands-fc-16.wav done"); else disp("processed/iki-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-1bands-fc-16.wav"); end
[s,err] = stat("processed/iki-1bands-fc-128.wav"); if (err == 0), disp("processed/iki-1bands-fc-128.wav done"); else disp("processed/iki-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-1bands-fc-128.wav"); end
[s,err] = stat("processed/iki-2bands-fc-4.wav"); if (err == 0), disp("processed/iki-2bands-fc-4.wav done"); else disp("processed/iki-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-2bands-fc-4.wav"); end
[s,err] = stat("processed/iki-2bands-fc-16.wav"); if (err == 0), disp("processed/iki-2bands-fc-16.wav done"); else disp("processed/iki-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-2bands-fc-16.wav"); end
[s,err] = stat("processed/iki-2bands-fc-128.wav"); if (err == 0), disp("processed/iki-2bands-fc-128.wav done"); else disp("processed/iki-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-2bands-fc-128.wav"); end
[s,err] = stat("processed/iki-4bands-fc-4.wav"); if (err == 0), disp("processed/iki-4bands-fc-4.wav done"); else disp("processed/iki-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-4bands-fc-4.wav"); end
[s,err] = stat("processed/iki-4bands-fc-16.wav"); if (err == 0), disp("processed/iki-4bands-fc-16.wav done"); else disp("processed/iki-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-4bands-fc-16.wav"); end
[s,err] = stat("processed/iki-4bands-fc-128.wav"); if (err == 0), disp("processed/iki-4bands-fc-128.wav done"); else disp("processed/iki-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-4bands-fc-128.wav"); end
[s,err] = stat("processed/iki-6bands-fc-4.wav"); if (err == 0), disp("processed/iki-6bands-fc-4.wav done"); else disp("processed/iki-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-6bands-fc-4.wav"); end
[s,err] = stat("processed/iki-6bands-fc-16.wav"); if (err == 0), disp("processed/iki-6bands-fc-16.wav done"); else disp("processed/iki-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-6bands-fc-16.wav"); end
[s,err] = stat("processed/iki-6bands-fc-128.wav"); if (err == 0), disp("processed/iki-6bands-fc-128.wav done"); else disp("processed/iki-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-6bands-fc-128.wav"); end
[s,err] = stat("processed/iki-8bands-fc-4.wav"); if (err == 0), disp("processed/iki-8bands-fc-4.wav done"); else disp("processed/iki-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-8bands-fc-4.wav"); end
[s,err] = stat("processed/iki-8bands-fc-16.wav"); if (err == 0), disp("processed/iki-8bands-fc-16.wav done"); else disp("processed/iki-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-8bands-fc-16.wav"); end
[s,err] = stat("processed/iki-8bands-fc-128.wav"); if (err == 0), disp("processed/iki-8bands-fc-128.wav done"); else disp("processed/iki-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-8bands-fc-128.wav"); end
[s,err] = stat("processed/iki-12bands-fc-4.wav"); if (err == 0), disp("processed/iki-12bands-fc-4.wav done"); else disp("processed/iki-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-12bands-fc-4.wav"); end
[s,err] = stat("processed/iki-12bands-fc-16.wav"); if (err == 0), disp("processed/iki-12bands-fc-16.wav done"); else disp("processed/iki-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-12bands-fc-16.wav"); end
[s,err] = stat("processed/iki-12bands-fc-128.wav"); if (err == 0), disp("processed/iki-12bands-fc-128.wav done"); else disp("processed/iki-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-12bands-fc-128.wav"); end
[s,err] = stat("processed/iki-16bands-fc-4.wav"); if (err == 0), disp("processed/iki-16bands-fc-4.wav done"); else disp("processed/iki-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-16bands-fc-4.wav"); end
[s,err] = stat("processed/iki-16bands-fc-16.wav"); if (err == 0), disp("processed/iki-16bands-fc-16.wav done"); else disp("processed/iki-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-16bands-fc-16.wav"); end
[s,err] = stat("processed/iki-16bands-fc-128.wav"); if (err == 0), disp("processed/iki-16bands-fc-128.wav done"); else disp("processed/iki-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iki.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iki-16bands-fc-128.wav"); end
[s,err] = stat("processed/aka-1bands-fc-4.wav"); if (err == 0), disp("processed/aka-1bands-fc-4.wav done"); else disp("processed/aka-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-1bands-fc-4.wav"); end
[s,err] = stat("processed/aka-1bands-fc-16.wav"); if (err == 0), disp("processed/aka-1bands-fc-16.wav done"); else disp("processed/aka-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-1bands-fc-16.wav"); end
[s,err] = stat("processed/aka-1bands-fc-128.wav"); if (err == 0), disp("processed/aka-1bands-fc-128.wav done"); else disp("processed/aka-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-1bands-fc-128.wav"); end
[s,err] = stat("processed/aka-2bands-fc-4.wav"); if (err == 0), disp("processed/aka-2bands-fc-4.wav done"); else disp("processed/aka-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-2bands-fc-4.wav"); end
[s,err] = stat("processed/aka-2bands-fc-16.wav"); if (err == 0), disp("processed/aka-2bands-fc-16.wav done"); else disp("processed/aka-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-2bands-fc-16.wav"); end
[s,err] = stat("processed/aka-2bands-fc-128.wav"); if (err == 0), disp("processed/aka-2bands-fc-128.wav done"); else disp("processed/aka-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-2bands-fc-128.wav"); end
[s,err] = stat("processed/aka-4bands-fc-4.wav"); if (err == 0), disp("processed/aka-4bands-fc-4.wav done"); else disp("processed/aka-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-4bands-fc-4.wav"); end
[s,err] = stat("processed/aka-4bands-fc-16.wav"); if (err == 0), disp("processed/aka-4bands-fc-16.wav done"); else disp("processed/aka-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-4bands-fc-16.wav"); end
[s,err] = stat("processed/aka-4bands-fc-128.wav"); if (err == 0), disp("processed/aka-4bands-fc-128.wav done"); else disp("processed/aka-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-4bands-fc-128.wav"); end
[s,err] = stat("processed/aka-6bands-fc-4.wav"); if (err == 0), disp("processed/aka-6bands-fc-4.wav done"); else disp("processed/aka-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-6bands-fc-4.wav"); end
[s,err] = stat("processed/aka-6bands-fc-16.wav"); if (err == 0), disp("processed/aka-6bands-fc-16.wav done"); else disp("processed/aka-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-6bands-fc-16.wav"); end
[s,err] = stat("processed/aka-6bands-fc-128.wav"); if (err == 0), disp("processed/aka-6bands-fc-128.wav done"); else disp("processed/aka-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-6bands-fc-128.wav"); end
[s,err] = stat("processed/aka-8bands-fc-4.wav"); if (err == 0), disp("processed/aka-8bands-fc-4.wav done"); else disp("processed/aka-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-8bands-fc-4.wav"); end
[s,err] = stat("processed/aka-8bands-fc-16.wav"); if (err == 0), disp("processed/aka-8bands-fc-16.wav done"); else disp("processed/aka-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-8bands-fc-16.wav"); end
[s,err] = stat("processed/aka-8bands-fc-128.wav"); if (err == 0), disp("processed/aka-8bands-fc-128.wav done"); else disp("processed/aka-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-8bands-fc-128.wav"); end
[s,err] = stat("processed/aka-12bands-fc-4.wav"); if (err == 0), disp("processed/aka-12bands-fc-4.wav done"); else disp("processed/aka-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-12bands-fc-4.wav"); end
[s,err] = stat("processed/aka-12bands-fc-16.wav"); if (err == 0), disp("processed/aka-12bands-fc-16.wav done"); else disp("processed/aka-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-12bands-fc-16.wav"); end
[s,err] = stat("processed/aka-12bands-fc-128.wav"); if (err == 0), disp("processed/aka-12bands-fc-128.wav done"); else disp("processed/aka-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-12bands-fc-128.wav"); end
[s,err] = stat("processed/aka-16bands-fc-4.wav"); if (err == 0), disp("processed/aka-16bands-fc-4.wav done"); else disp("processed/aka-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-16bands-fc-4.wav"); end
[s,err] = stat("processed/aka-16bands-fc-16.wav"); if (err == 0), disp("processed/aka-16bands-fc-16.wav done"); else disp("processed/aka-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-16bands-fc-16.wav"); end
[s,err] = stat("processed/aka-16bands-fc-128.wav"); if (err == 0), disp("processed/aka-16bands-fc-128.wav done"); else disp("processed/aka-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aka.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aka-16bands-fc-128.wav"); end
[s,err] = stat("processed/oukou-1bands-fc-4.wav"); if (err == 0), disp("processed/oukou-1bands-fc-4.wav done"); else disp("processed/oukou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-1bands-fc-4.wav"); end
[s,err] = stat("processed/oukou-1bands-fc-16.wav"); if (err == 0), disp("processed/oukou-1bands-fc-16.wav done"); else disp("processed/oukou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-1bands-fc-16.wav"); end
[s,err] = stat("processed/oukou-1bands-fc-128.wav"); if (err == 0), disp("processed/oukou-1bands-fc-128.wav done"); else disp("processed/oukou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-1bands-fc-128.wav"); end
[s,err] = stat("processed/oukou-2bands-fc-4.wav"); if (err == 0), disp("processed/oukou-2bands-fc-4.wav done"); else disp("processed/oukou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-2bands-fc-4.wav"); end
[s,err] = stat("processed/oukou-2bands-fc-16.wav"); if (err == 0), disp("processed/oukou-2bands-fc-16.wav done"); else disp("processed/oukou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-2bands-fc-16.wav"); end
[s,err] = stat("processed/oukou-2bands-fc-128.wav"); if (err == 0), disp("processed/oukou-2bands-fc-128.wav done"); else disp("processed/oukou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-2bands-fc-128.wav"); end
[s,err] = stat("processed/oukou-4bands-fc-4.wav"); if (err == 0), disp("processed/oukou-4bands-fc-4.wav done"); else disp("processed/oukou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-4bands-fc-4.wav"); end
[s,err] = stat("processed/oukou-4bands-fc-16.wav"); if (err == 0), disp("processed/oukou-4bands-fc-16.wav done"); else disp("processed/oukou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-4bands-fc-16.wav"); end
[s,err] = stat("processed/oukou-4bands-fc-128.wav"); if (err == 0), disp("processed/oukou-4bands-fc-128.wav done"); else disp("processed/oukou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-4bands-fc-128.wav"); end
[s,err] = stat("processed/oukou-6bands-fc-4.wav"); if (err == 0), disp("processed/oukou-6bands-fc-4.wav done"); else disp("processed/oukou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-6bands-fc-4.wav"); end
[s,err] = stat("processed/oukou-6bands-fc-16.wav"); if (err == 0), disp("processed/oukou-6bands-fc-16.wav done"); else disp("processed/oukou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-6bands-fc-16.wav"); end
[s,err] = stat("processed/oukou-6bands-fc-128.wav"); if (err == 0), disp("processed/oukou-6bands-fc-128.wav done"); else disp("processed/oukou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-6bands-fc-128.wav"); end
[s,err] = stat("processed/oukou-8bands-fc-4.wav"); if (err == 0), disp("processed/oukou-8bands-fc-4.wav done"); else disp("processed/oukou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-8bands-fc-4.wav"); end
[s,err] = stat("processed/oukou-8bands-fc-16.wav"); if (err == 0), disp("processed/oukou-8bands-fc-16.wav done"); else disp("processed/oukou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-8bands-fc-16.wav"); end
[s,err] = stat("processed/oukou-8bands-fc-128.wav"); if (err == 0), disp("processed/oukou-8bands-fc-128.wav done"); else disp("processed/oukou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-8bands-fc-128.wav"); end
[s,err] = stat("processed/oukou-12bands-fc-4.wav"); if (err == 0), disp("processed/oukou-12bands-fc-4.wav done"); else disp("processed/oukou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-12bands-fc-4.wav"); end
[s,err] = stat("processed/oukou-12bands-fc-16.wav"); if (err == 0), disp("processed/oukou-12bands-fc-16.wav done"); else disp("processed/oukou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-12bands-fc-16.wav"); end
[s,err] = stat("processed/oukou-12bands-fc-128.wav"); if (err == 0), disp("processed/oukou-12bands-fc-128.wav done"); else disp("processed/oukou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-12bands-fc-128.wav"); end
[s,err] = stat("processed/oukou-16bands-fc-4.wav"); if (err == 0), disp("processed/oukou-16bands-fc-4.wav done"); else disp("processed/oukou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-16bands-fc-4.wav"); end
[s,err] = stat("processed/oukou-16bands-fc-16.wav"); if (err == 0), disp("processed/oukou-16bands-fc-16.wav done"); else disp("processed/oukou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-16bands-fc-16.wav"); end
[s,err] = stat("processed/oukou-16bands-fc-128.wav"); if (err == 0), disp("processed/oukou-16bands-fc-128.wav done"); else disp("processed/oukou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oukou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oukou-16bands-fc-128.wav"); end
[s,err] = stat("processed/ibi-1bands-fc-4.wav"); if (err == 0), disp("processed/ibi-1bands-fc-4.wav done"); else disp("processed/ibi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-1bands-fc-4.wav"); end
[s,err] = stat("processed/ibi-1bands-fc-16.wav"); if (err == 0), disp("processed/ibi-1bands-fc-16.wav done"); else disp("processed/ibi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-1bands-fc-16.wav"); end
[s,err] = stat("processed/ibi-1bands-fc-128.wav"); if (err == 0), disp("processed/ibi-1bands-fc-128.wav done"); else disp("processed/ibi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-1bands-fc-128.wav"); end
[s,err] = stat("processed/ibi-2bands-fc-4.wav"); if (err == 0), disp("processed/ibi-2bands-fc-4.wav done"); else disp("processed/ibi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-2bands-fc-4.wav"); end
[s,err] = stat("processed/ibi-2bands-fc-16.wav"); if (err == 0), disp("processed/ibi-2bands-fc-16.wav done"); else disp("processed/ibi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-2bands-fc-16.wav"); end
[s,err] = stat("processed/ibi-2bands-fc-128.wav"); if (err == 0), disp("processed/ibi-2bands-fc-128.wav done"); else disp("processed/ibi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-2bands-fc-128.wav"); end
[s,err] = stat("processed/ibi-4bands-fc-4.wav"); if (err == 0), disp("processed/ibi-4bands-fc-4.wav done"); else disp("processed/ibi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-4bands-fc-4.wav"); end
[s,err] = stat("processed/ibi-4bands-fc-16.wav"); if (err == 0), disp("processed/ibi-4bands-fc-16.wav done"); else disp("processed/ibi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-4bands-fc-16.wav"); end
[s,err] = stat("processed/ibi-4bands-fc-128.wav"); if (err == 0), disp("processed/ibi-4bands-fc-128.wav done"); else disp("processed/ibi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-4bands-fc-128.wav"); end
[s,err] = stat("processed/ibi-6bands-fc-4.wav"); if (err == 0), disp("processed/ibi-6bands-fc-4.wav done"); else disp("processed/ibi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-6bands-fc-4.wav"); end
[s,err] = stat("processed/ibi-6bands-fc-16.wav"); if (err == 0), disp("processed/ibi-6bands-fc-16.wav done"); else disp("processed/ibi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-6bands-fc-16.wav"); end
[s,err] = stat("processed/ibi-6bands-fc-128.wav"); if (err == 0), disp("processed/ibi-6bands-fc-128.wav done"); else disp("processed/ibi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-6bands-fc-128.wav"); end
[s,err] = stat("processed/ibi-8bands-fc-4.wav"); if (err == 0), disp("processed/ibi-8bands-fc-4.wav done"); else disp("processed/ibi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-8bands-fc-4.wav"); end
[s,err] = stat("processed/ibi-8bands-fc-16.wav"); if (err == 0), disp("processed/ibi-8bands-fc-16.wav done"); else disp("processed/ibi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-8bands-fc-16.wav"); end
[s,err] = stat("processed/ibi-8bands-fc-128.wav"); if (err == 0), disp("processed/ibi-8bands-fc-128.wav done"); else disp("processed/ibi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-8bands-fc-128.wav"); end
[s,err] = stat("processed/ibi-12bands-fc-4.wav"); if (err == 0), disp("processed/ibi-12bands-fc-4.wav done"); else disp("processed/ibi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-12bands-fc-4.wav"); end
[s,err] = stat("processed/ibi-12bands-fc-16.wav"); if (err == 0), disp("processed/ibi-12bands-fc-16.wav done"); else disp("processed/ibi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-12bands-fc-16.wav"); end
[s,err] = stat("processed/ibi-12bands-fc-128.wav"); if (err == 0), disp("processed/ibi-12bands-fc-128.wav done"); else disp("processed/ibi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-12bands-fc-128.wav"); end
[s,err] = stat("processed/ibi-16bands-fc-4.wav"); if (err == 0), disp("processed/ibi-16bands-fc-4.wav done"); else disp("processed/ibi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-16bands-fc-4.wav"); end
[s,err] = stat("processed/ibi-16bands-fc-16.wav"); if (err == 0), disp("processed/ibi-16bands-fc-16.wav done"); else disp("processed/ibi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-16bands-fc-16.wav"); end
[s,err] = stat("processed/ibi-16bands-fc-128.wav"); if (err == 0), disp("processed/ibi-16bands-fc-128.wav done"); else disp("processed/ibi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ibi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ibi-16bands-fc-128.wav"); end
[s,err] = stat("processed/aba-1bands-fc-4.wav"); if (err == 0), disp("processed/aba-1bands-fc-4.wav done"); else disp("processed/aba-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-1bands-fc-4.wav"); end
[s,err] = stat("processed/aba-1bands-fc-16.wav"); if (err == 0), disp("processed/aba-1bands-fc-16.wav done"); else disp("processed/aba-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-1bands-fc-16.wav"); end
[s,err] = stat("processed/aba-1bands-fc-128.wav"); if (err == 0), disp("processed/aba-1bands-fc-128.wav done"); else disp("processed/aba-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-1bands-fc-128.wav"); end
[s,err] = stat("processed/aba-2bands-fc-4.wav"); if (err == 0), disp("processed/aba-2bands-fc-4.wav done"); else disp("processed/aba-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-2bands-fc-4.wav"); end
[s,err] = stat("processed/aba-2bands-fc-16.wav"); if (err == 0), disp("processed/aba-2bands-fc-16.wav done"); else disp("processed/aba-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-2bands-fc-16.wav"); end
[s,err] = stat("processed/aba-2bands-fc-128.wav"); if (err == 0), disp("processed/aba-2bands-fc-128.wav done"); else disp("processed/aba-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-2bands-fc-128.wav"); end
[s,err] = stat("processed/aba-4bands-fc-4.wav"); if (err == 0), disp("processed/aba-4bands-fc-4.wav done"); else disp("processed/aba-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-4bands-fc-4.wav"); end
[s,err] = stat("processed/aba-4bands-fc-16.wav"); if (err == 0), disp("processed/aba-4bands-fc-16.wav done"); else disp("processed/aba-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-4bands-fc-16.wav"); end
[s,err] = stat("processed/aba-4bands-fc-128.wav"); if (err == 0), disp("processed/aba-4bands-fc-128.wav done"); else disp("processed/aba-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-4bands-fc-128.wav"); end
[s,err] = stat("processed/aba-6bands-fc-4.wav"); if (err == 0), disp("processed/aba-6bands-fc-4.wav done"); else disp("processed/aba-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-6bands-fc-4.wav"); end
[s,err] = stat("processed/aba-6bands-fc-16.wav"); if (err == 0), disp("processed/aba-6bands-fc-16.wav done"); else disp("processed/aba-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-6bands-fc-16.wav"); end
[s,err] = stat("processed/aba-6bands-fc-128.wav"); if (err == 0), disp("processed/aba-6bands-fc-128.wav done"); else disp("processed/aba-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-6bands-fc-128.wav"); end
[s,err] = stat("processed/aba-8bands-fc-4.wav"); if (err == 0), disp("processed/aba-8bands-fc-4.wav done"); else disp("processed/aba-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-8bands-fc-4.wav"); end
[s,err] = stat("processed/aba-8bands-fc-16.wav"); if (err == 0), disp("processed/aba-8bands-fc-16.wav done"); else disp("processed/aba-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-8bands-fc-16.wav"); end
[s,err] = stat("processed/aba-8bands-fc-128.wav"); if (err == 0), disp("processed/aba-8bands-fc-128.wav done"); else disp("processed/aba-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-8bands-fc-128.wav"); end
[s,err] = stat("processed/aba-12bands-fc-4.wav"); if (err == 0), disp("processed/aba-12bands-fc-4.wav done"); else disp("processed/aba-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-12bands-fc-4.wav"); end
[s,err] = stat("processed/aba-12bands-fc-16.wav"); if (err == 0), disp("processed/aba-12bands-fc-16.wav done"); else disp("processed/aba-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-12bands-fc-16.wav"); end
[s,err] = stat("processed/aba-12bands-fc-128.wav"); if (err == 0), disp("processed/aba-12bands-fc-128.wav done"); else disp("processed/aba-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-12bands-fc-128.wav"); end
[s,err] = stat("processed/aba-16bands-fc-4.wav"); if (err == 0), disp("processed/aba-16bands-fc-4.wav done"); else disp("processed/aba-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-16bands-fc-4.wav"); end
[s,err] = stat("processed/aba-16bands-fc-16.wav"); if (err == 0), disp("processed/aba-16bands-fc-16.wav done"); else disp("processed/aba-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-16bands-fc-16.wav"); end
[s,err] = stat("processed/aba-16bands-fc-128.wav"); if (err == 0), disp("processed/aba-16bands-fc-128.wav done"); else disp("processed/aba-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aba.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aba-16bands-fc-128.wav"); end
[s,err] = stat("processed/oubou-1bands-fc-4.wav"); if (err == 0), disp("processed/oubou-1bands-fc-4.wav done"); else disp("processed/oubou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-1bands-fc-4.wav"); end
[s,err] = stat("processed/oubou-1bands-fc-16.wav"); if (err == 0), disp("processed/oubou-1bands-fc-16.wav done"); else disp("processed/oubou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-1bands-fc-16.wav"); end
[s,err] = stat("processed/oubou-1bands-fc-128.wav"); if (err == 0), disp("processed/oubou-1bands-fc-128.wav done"); else disp("processed/oubou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-1bands-fc-128.wav"); end
[s,err] = stat("processed/oubou-2bands-fc-4.wav"); if (err == 0), disp("processed/oubou-2bands-fc-4.wav done"); else disp("processed/oubou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-2bands-fc-4.wav"); end
[s,err] = stat("processed/oubou-2bands-fc-16.wav"); if (err == 0), disp("processed/oubou-2bands-fc-16.wav done"); else disp("processed/oubou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-2bands-fc-16.wav"); end
[s,err] = stat("processed/oubou-2bands-fc-128.wav"); if (err == 0), disp("processed/oubou-2bands-fc-128.wav done"); else disp("processed/oubou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-2bands-fc-128.wav"); end
[s,err] = stat("processed/oubou-4bands-fc-4.wav"); if (err == 0), disp("processed/oubou-4bands-fc-4.wav done"); else disp("processed/oubou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-4bands-fc-4.wav"); end
[s,err] = stat("processed/oubou-4bands-fc-16.wav"); if (err == 0), disp("processed/oubou-4bands-fc-16.wav done"); else disp("processed/oubou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-4bands-fc-16.wav"); end
[s,err] = stat("processed/oubou-4bands-fc-128.wav"); if (err == 0), disp("processed/oubou-4bands-fc-128.wav done"); else disp("processed/oubou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-4bands-fc-128.wav"); end
[s,err] = stat("processed/oubou-6bands-fc-4.wav"); if (err == 0), disp("processed/oubou-6bands-fc-4.wav done"); else disp("processed/oubou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-6bands-fc-4.wav"); end
[s,err] = stat("processed/oubou-6bands-fc-16.wav"); if (err == 0), disp("processed/oubou-6bands-fc-16.wav done"); else disp("processed/oubou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-6bands-fc-16.wav"); end
[s,err] = stat("processed/oubou-6bands-fc-128.wav"); if (err == 0), disp("processed/oubou-6bands-fc-128.wav done"); else disp("processed/oubou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-6bands-fc-128.wav"); end
[s,err] = stat("processed/oubou-8bands-fc-4.wav"); if (err == 0), disp("processed/oubou-8bands-fc-4.wav done"); else disp("processed/oubou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-8bands-fc-4.wav"); end
[s,err] = stat("processed/oubou-8bands-fc-16.wav"); if (err == 0), disp("processed/oubou-8bands-fc-16.wav done"); else disp("processed/oubou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-8bands-fc-16.wav"); end
[s,err] = stat("processed/oubou-8bands-fc-128.wav"); if (err == 0), disp("processed/oubou-8bands-fc-128.wav done"); else disp("processed/oubou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-8bands-fc-128.wav"); end
[s,err] = stat("processed/oubou-12bands-fc-4.wav"); if (err == 0), disp("processed/oubou-12bands-fc-4.wav done"); else disp("processed/oubou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-12bands-fc-4.wav"); end
[s,err] = stat("processed/oubou-12bands-fc-16.wav"); if (err == 0), disp("processed/oubou-12bands-fc-16.wav done"); else disp("processed/oubou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-12bands-fc-16.wav"); end
[s,err] = stat("processed/oubou-12bands-fc-128.wav"); if (err == 0), disp("processed/oubou-12bands-fc-128.wav done"); else disp("processed/oubou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-12bands-fc-128.wav"); end
[s,err] = stat("processed/oubou-16bands-fc-4.wav"); if (err == 0), disp("processed/oubou-16bands-fc-4.wav done"); else disp("processed/oubou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-16bands-fc-4.wav"); end
[s,err] = stat("processed/oubou-16bands-fc-16.wav"); if (err == 0), disp("processed/oubou-16bands-fc-16.wav done"); else disp("processed/oubou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-16bands-fc-16.wav"); end
[s,err] = stat("processed/oubou-16bands-fc-128.wav"); if (err == 0), disp("processed/oubou-16bands-fc-128.wav done"); else disp("processed/oubou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oubou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oubou-16bands-fc-128.wav"); end
[s,err] = stat("processed/idi-1bands-fc-4.wav"); if (err == 0), disp("processed/idi-1bands-fc-4.wav done"); else disp("processed/idi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-1bands-fc-4.wav"); end
[s,err] = stat("processed/idi-1bands-fc-16.wav"); if (err == 0), disp("processed/idi-1bands-fc-16.wav done"); else disp("processed/idi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-1bands-fc-16.wav"); end
[s,err] = stat("processed/idi-1bands-fc-128.wav"); if (err == 0), disp("processed/idi-1bands-fc-128.wav done"); else disp("processed/idi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-1bands-fc-128.wav"); end
[s,err] = stat("processed/idi-2bands-fc-4.wav"); if (err == 0), disp("processed/idi-2bands-fc-4.wav done"); else disp("processed/idi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-2bands-fc-4.wav"); end
[s,err] = stat("processed/idi-2bands-fc-16.wav"); if (err == 0), disp("processed/idi-2bands-fc-16.wav done"); else disp("processed/idi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-2bands-fc-16.wav"); end
[s,err] = stat("processed/idi-2bands-fc-128.wav"); if (err == 0), disp("processed/idi-2bands-fc-128.wav done"); else disp("processed/idi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-2bands-fc-128.wav"); end
[s,err] = stat("processed/idi-4bands-fc-4.wav"); if (err == 0), disp("processed/idi-4bands-fc-4.wav done"); else disp("processed/idi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-4bands-fc-4.wav"); end
[s,err] = stat("processed/idi-4bands-fc-16.wav"); if (err == 0), disp("processed/idi-4bands-fc-16.wav done"); else disp("processed/idi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-4bands-fc-16.wav"); end
[s,err] = stat("processed/idi-4bands-fc-128.wav"); if (err == 0), disp("processed/idi-4bands-fc-128.wav done"); else disp("processed/idi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-4bands-fc-128.wav"); end
[s,err] = stat("processed/idi-6bands-fc-4.wav"); if (err == 0), disp("processed/idi-6bands-fc-4.wav done"); else disp("processed/idi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-6bands-fc-4.wav"); end
[s,err] = stat("processed/idi-6bands-fc-16.wav"); if (err == 0), disp("processed/idi-6bands-fc-16.wav done"); else disp("processed/idi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-6bands-fc-16.wav"); end
[s,err] = stat("processed/idi-6bands-fc-128.wav"); if (err == 0), disp("processed/idi-6bands-fc-128.wav done"); else disp("processed/idi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-6bands-fc-128.wav"); end
[s,err] = stat("processed/idi-8bands-fc-4.wav"); if (err == 0), disp("processed/idi-8bands-fc-4.wav done"); else disp("processed/idi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-8bands-fc-4.wav"); end
[s,err] = stat("processed/idi-8bands-fc-16.wav"); if (err == 0), disp("processed/idi-8bands-fc-16.wav done"); else disp("processed/idi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-8bands-fc-16.wav"); end
[s,err] = stat("processed/idi-8bands-fc-128.wav"); if (err == 0), disp("processed/idi-8bands-fc-128.wav done"); else disp("processed/idi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-8bands-fc-128.wav"); end
[s,err] = stat("processed/idi-12bands-fc-4.wav"); if (err == 0), disp("processed/idi-12bands-fc-4.wav done"); else disp("processed/idi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-12bands-fc-4.wav"); end
[s,err] = stat("processed/idi-12bands-fc-16.wav"); if (err == 0), disp("processed/idi-12bands-fc-16.wav done"); else disp("processed/idi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-12bands-fc-16.wav"); end
[s,err] = stat("processed/idi-12bands-fc-128.wav"); if (err == 0), disp("processed/idi-12bands-fc-128.wav done"); else disp("processed/idi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-12bands-fc-128.wav"); end
[s,err] = stat("processed/idi-16bands-fc-4.wav"); if (err == 0), disp("processed/idi-16bands-fc-4.wav done"); else disp("processed/idi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-16bands-fc-4.wav"); end
[s,err] = stat("processed/idi-16bands-fc-16.wav"); if (err == 0), disp("processed/idi-16bands-fc-16.wav done"); else disp("processed/idi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-16bands-fc-16.wav"); end
[s,err] = stat("processed/idi-16bands-fc-128.wav"); if (err == 0), disp("processed/idi-16bands-fc-128.wav done"); else disp("processed/idi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/idi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/idi-16bands-fc-128.wav"); end
[s,err] = stat("processed/ada-1bands-fc-4.wav"); if (err == 0), disp("processed/ada-1bands-fc-4.wav done"); else disp("processed/ada-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-1bands-fc-4.wav"); end
[s,err] = stat("processed/ada-1bands-fc-16.wav"); if (err == 0), disp("processed/ada-1bands-fc-16.wav done"); else disp("processed/ada-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-1bands-fc-16.wav"); end
[s,err] = stat("processed/ada-1bands-fc-128.wav"); if (err == 0), disp("processed/ada-1bands-fc-128.wav done"); else disp("processed/ada-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-1bands-fc-128.wav"); end
[s,err] = stat("processed/ada-2bands-fc-4.wav"); if (err == 0), disp("processed/ada-2bands-fc-4.wav done"); else disp("processed/ada-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-2bands-fc-4.wav"); end
[s,err] = stat("processed/ada-2bands-fc-16.wav"); if (err == 0), disp("processed/ada-2bands-fc-16.wav done"); else disp("processed/ada-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-2bands-fc-16.wav"); end
[s,err] = stat("processed/ada-2bands-fc-128.wav"); if (err == 0), disp("processed/ada-2bands-fc-128.wav done"); else disp("processed/ada-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-2bands-fc-128.wav"); end
[s,err] = stat("processed/ada-4bands-fc-4.wav"); if (err == 0), disp("processed/ada-4bands-fc-4.wav done"); else disp("processed/ada-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-4bands-fc-4.wav"); end
[s,err] = stat("processed/ada-4bands-fc-16.wav"); if (err == 0), disp("processed/ada-4bands-fc-16.wav done"); else disp("processed/ada-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-4bands-fc-16.wav"); end
[s,err] = stat("processed/ada-4bands-fc-128.wav"); if (err == 0), disp("processed/ada-4bands-fc-128.wav done"); else disp("processed/ada-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-4bands-fc-128.wav"); end
[s,err] = stat("processed/ada-6bands-fc-4.wav"); if (err == 0), disp("processed/ada-6bands-fc-4.wav done"); else disp("processed/ada-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-6bands-fc-4.wav"); end
[s,err] = stat("processed/ada-6bands-fc-16.wav"); if (err == 0), disp("processed/ada-6bands-fc-16.wav done"); else disp("processed/ada-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-6bands-fc-16.wav"); end
[s,err] = stat("processed/ada-6bands-fc-128.wav"); if (err == 0), disp("processed/ada-6bands-fc-128.wav done"); else disp("processed/ada-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-6bands-fc-128.wav"); end
[s,err] = stat("processed/ada-8bands-fc-4.wav"); if (err == 0), disp("processed/ada-8bands-fc-4.wav done"); else disp("processed/ada-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-8bands-fc-4.wav"); end
[s,err] = stat("processed/ada-8bands-fc-16.wav"); if (err == 0), disp("processed/ada-8bands-fc-16.wav done"); else disp("processed/ada-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-8bands-fc-16.wav"); end
[s,err] = stat("processed/ada-8bands-fc-128.wav"); if (err == 0), disp("processed/ada-8bands-fc-128.wav done"); else disp("processed/ada-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-8bands-fc-128.wav"); end
[s,err] = stat("processed/ada-12bands-fc-4.wav"); if (err == 0), disp("processed/ada-12bands-fc-4.wav done"); else disp("processed/ada-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-12bands-fc-4.wav"); end
[s,err] = stat("processed/ada-12bands-fc-16.wav"); if (err == 0), disp("processed/ada-12bands-fc-16.wav done"); else disp("processed/ada-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-12bands-fc-16.wav"); end
[s,err] = stat("processed/ada-12bands-fc-128.wav"); if (err == 0), disp("processed/ada-12bands-fc-128.wav done"); else disp("processed/ada-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-12bands-fc-128.wav"); end
[s,err] = stat("processed/ada-16bands-fc-4.wav"); if (err == 0), disp("processed/ada-16bands-fc-4.wav done"); else disp("processed/ada-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-16bands-fc-4.wav"); end
[s,err] = stat("processed/ada-16bands-fc-16.wav"); if (err == 0), disp("processed/ada-16bands-fc-16.wav done"); else disp("processed/ada-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-16bands-fc-16.wav"); end
[s,err] = stat("processed/ada-16bands-fc-128.wav"); if (err == 0), disp("processed/ada-16bands-fc-128.wav done"); else disp("processed/ada-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ada.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ada-16bands-fc-128.wav"); end
[s,err] = stat("processed/oudou-1bands-fc-4.wav"); if (err == 0), disp("processed/oudou-1bands-fc-4.wav done"); else disp("processed/oudou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-1bands-fc-4.wav"); end
[s,err] = stat("processed/oudou-1bands-fc-16.wav"); if (err == 0), disp("processed/oudou-1bands-fc-16.wav done"); else disp("processed/oudou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-1bands-fc-16.wav"); end
[s,err] = stat("processed/oudou-1bands-fc-128.wav"); if (err == 0), disp("processed/oudou-1bands-fc-128.wav done"); else disp("processed/oudou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-1bands-fc-128.wav"); end
[s,err] = stat("processed/oudou-2bands-fc-4.wav"); if (err == 0), disp("processed/oudou-2bands-fc-4.wav done"); else disp("processed/oudou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-2bands-fc-4.wav"); end
[s,err] = stat("processed/oudou-2bands-fc-16.wav"); if (err == 0), disp("processed/oudou-2bands-fc-16.wav done"); else disp("processed/oudou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-2bands-fc-16.wav"); end
[s,err] = stat("processed/oudou-2bands-fc-128.wav"); if (err == 0), disp("processed/oudou-2bands-fc-128.wav done"); else disp("processed/oudou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-2bands-fc-128.wav"); end
[s,err] = stat("processed/oudou-4bands-fc-4.wav"); if (err == 0), disp("processed/oudou-4bands-fc-4.wav done"); else disp("processed/oudou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-4bands-fc-4.wav"); end
[s,err] = stat("processed/oudou-4bands-fc-16.wav"); if (err == 0), disp("processed/oudou-4bands-fc-16.wav done"); else disp("processed/oudou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-4bands-fc-16.wav"); end
[s,err] = stat("processed/oudou-4bands-fc-128.wav"); if (err == 0), disp("processed/oudou-4bands-fc-128.wav done"); else disp("processed/oudou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-4bands-fc-128.wav"); end
[s,err] = stat("processed/oudou-6bands-fc-4.wav"); if (err == 0), disp("processed/oudou-6bands-fc-4.wav done"); else disp("processed/oudou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-6bands-fc-4.wav"); end
[s,err] = stat("processed/oudou-6bands-fc-16.wav"); if (err == 0), disp("processed/oudou-6bands-fc-16.wav done"); else disp("processed/oudou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-6bands-fc-16.wav"); end
[s,err] = stat("processed/oudou-6bands-fc-128.wav"); if (err == 0), disp("processed/oudou-6bands-fc-128.wav done"); else disp("processed/oudou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-6bands-fc-128.wav"); end
[s,err] = stat("processed/oudou-8bands-fc-4.wav"); if (err == 0), disp("processed/oudou-8bands-fc-4.wav done"); else disp("processed/oudou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-8bands-fc-4.wav"); end
[s,err] = stat("processed/oudou-8bands-fc-16.wav"); if (err == 0), disp("processed/oudou-8bands-fc-16.wav done"); else disp("processed/oudou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-8bands-fc-16.wav"); end
[s,err] = stat("processed/oudou-8bands-fc-128.wav"); if (err == 0), disp("processed/oudou-8bands-fc-128.wav done"); else disp("processed/oudou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-8bands-fc-128.wav"); end
[s,err] = stat("processed/oudou-12bands-fc-4.wav"); if (err == 0), disp("processed/oudou-12bands-fc-4.wav done"); else disp("processed/oudou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-12bands-fc-4.wav"); end
[s,err] = stat("processed/oudou-12bands-fc-16.wav"); if (err == 0), disp("processed/oudou-12bands-fc-16.wav done"); else disp("processed/oudou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-12bands-fc-16.wav"); end
[s,err] = stat("processed/oudou-12bands-fc-128.wav"); if (err == 0), disp("processed/oudou-12bands-fc-128.wav done"); else disp("processed/oudou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-12bands-fc-128.wav"); end
[s,err] = stat("processed/oudou-16bands-fc-4.wav"); if (err == 0), disp("processed/oudou-16bands-fc-4.wav done"); else disp("processed/oudou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-16bands-fc-4.wav"); end
[s,err] = stat("processed/oudou-16bands-fc-16.wav"); if (err == 0), disp("processed/oudou-16bands-fc-16.wav done"); else disp("processed/oudou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-16bands-fc-16.wav"); end
[s,err] = stat("processed/oudou-16bands-fc-128.wav"); if (err == 0), disp("processed/oudou-16bands-fc-128.wav done"); else disp("processed/oudou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oudou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oudou-16bands-fc-128.wav"); end
[s,err] = stat("processed/igui-1bands-fc-4.wav"); if (err == 0), disp("processed/igui-1bands-fc-4.wav done"); else disp("processed/igui-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-1bands-fc-4.wav"); end
[s,err] = stat("processed/igui-1bands-fc-16.wav"); if (err == 0), disp("processed/igui-1bands-fc-16.wav done"); else disp("processed/igui-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-1bands-fc-16.wav"); end
[s,err] = stat("processed/igui-1bands-fc-128.wav"); if (err == 0), disp("processed/igui-1bands-fc-128.wav done"); else disp("processed/igui-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-1bands-fc-128.wav"); end
[s,err] = stat("processed/igui-2bands-fc-4.wav"); if (err == 0), disp("processed/igui-2bands-fc-4.wav done"); else disp("processed/igui-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-2bands-fc-4.wav"); end
[s,err] = stat("processed/igui-2bands-fc-16.wav"); if (err == 0), disp("processed/igui-2bands-fc-16.wav done"); else disp("processed/igui-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-2bands-fc-16.wav"); end
[s,err] = stat("processed/igui-2bands-fc-128.wav"); if (err == 0), disp("processed/igui-2bands-fc-128.wav done"); else disp("processed/igui-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-2bands-fc-128.wav"); end
[s,err] = stat("processed/igui-4bands-fc-4.wav"); if (err == 0), disp("processed/igui-4bands-fc-4.wav done"); else disp("processed/igui-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-4bands-fc-4.wav"); end
[s,err] = stat("processed/igui-4bands-fc-16.wav"); if (err == 0), disp("processed/igui-4bands-fc-16.wav done"); else disp("processed/igui-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-4bands-fc-16.wav"); end
[s,err] = stat("processed/igui-4bands-fc-128.wav"); if (err == 0), disp("processed/igui-4bands-fc-128.wav done"); else disp("processed/igui-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-4bands-fc-128.wav"); end
[s,err] = stat("processed/igui-6bands-fc-4.wav"); if (err == 0), disp("processed/igui-6bands-fc-4.wav done"); else disp("processed/igui-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-6bands-fc-4.wav"); end
[s,err] = stat("processed/igui-6bands-fc-16.wav"); if (err == 0), disp("processed/igui-6bands-fc-16.wav done"); else disp("processed/igui-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-6bands-fc-16.wav"); end
[s,err] = stat("processed/igui-6bands-fc-128.wav"); if (err == 0), disp("processed/igui-6bands-fc-128.wav done"); else disp("processed/igui-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-6bands-fc-128.wav"); end
[s,err] = stat("processed/igui-8bands-fc-4.wav"); if (err == 0), disp("processed/igui-8bands-fc-4.wav done"); else disp("processed/igui-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-8bands-fc-4.wav"); end
[s,err] = stat("processed/igui-8bands-fc-16.wav"); if (err == 0), disp("processed/igui-8bands-fc-16.wav done"); else disp("processed/igui-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-8bands-fc-16.wav"); end
[s,err] = stat("processed/igui-8bands-fc-128.wav"); if (err == 0), disp("processed/igui-8bands-fc-128.wav done"); else disp("processed/igui-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-8bands-fc-128.wav"); end
[s,err] = stat("processed/igui-12bands-fc-4.wav"); if (err == 0), disp("processed/igui-12bands-fc-4.wav done"); else disp("processed/igui-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-12bands-fc-4.wav"); end
[s,err] = stat("processed/igui-12bands-fc-16.wav"); if (err == 0), disp("processed/igui-12bands-fc-16.wav done"); else disp("processed/igui-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-12bands-fc-16.wav"); end
[s,err] = stat("processed/igui-12bands-fc-128.wav"); if (err == 0), disp("processed/igui-12bands-fc-128.wav done"); else disp("processed/igui-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-12bands-fc-128.wav"); end
[s,err] = stat("processed/igui-16bands-fc-4.wav"); if (err == 0), disp("processed/igui-16bands-fc-4.wav done"); else disp("processed/igui-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-16bands-fc-4.wav"); end
[s,err] = stat("processed/igui-16bands-fc-16.wav"); if (err == 0), disp("processed/igui-16bands-fc-16.wav done"); else disp("processed/igui-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-16bands-fc-16.wav"); end
[s,err] = stat("processed/igui-16bands-fc-128.wav"); if (err == 0), disp("processed/igui-16bands-fc-128.wav done"); else disp("processed/igui-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igui.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igui-16bands-fc-128.wav"); end
[s,err] = stat("processed/aga-1bands-fc-4.wav"); if (err == 0), disp("processed/aga-1bands-fc-4.wav done"); else disp("processed/aga-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-1bands-fc-4.wav"); end
[s,err] = stat("processed/aga-1bands-fc-16.wav"); if (err == 0), disp("processed/aga-1bands-fc-16.wav done"); else disp("processed/aga-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-1bands-fc-16.wav"); end
[s,err] = stat("processed/aga-1bands-fc-128.wav"); if (err == 0), disp("processed/aga-1bands-fc-128.wav done"); else disp("processed/aga-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-1bands-fc-128.wav"); end
[s,err] = stat("processed/aga-2bands-fc-4.wav"); if (err == 0), disp("processed/aga-2bands-fc-4.wav done"); else disp("processed/aga-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-2bands-fc-4.wav"); end
[s,err] = stat("processed/aga-2bands-fc-16.wav"); if (err == 0), disp("processed/aga-2bands-fc-16.wav done"); else disp("processed/aga-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-2bands-fc-16.wav"); end
[s,err] = stat("processed/aga-2bands-fc-128.wav"); if (err == 0), disp("processed/aga-2bands-fc-128.wav done"); else disp("processed/aga-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-2bands-fc-128.wav"); end
[s,err] = stat("processed/aga-4bands-fc-4.wav"); if (err == 0), disp("processed/aga-4bands-fc-4.wav done"); else disp("processed/aga-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-4bands-fc-4.wav"); end
[s,err] = stat("processed/aga-4bands-fc-16.wav"); if (err == 0), disp("processed/aga-4bands-fc-16.wav done"); else disp("processed/aga-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-4bands-fc-16.wav"); end
[s,err] = stat("processed/aga-4bands-fc-128.wav"); if (err == 0), disp("processed/aga-4bands-fc-128.wav done"); else disp("processed/aga-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-4bands-fc-128.wav"); end
[s,err] = stat("processed/aga-6bands-fc-4.wav"); if (err == 0), disp("processed/aga-6bands-fc-4.wav done"); else disp("processed/aga-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-6bands-fc-4.wav"); end
[s,err] = stat("processed/aga-6bands-fc-16.wav"); if (err == 0), disp("processed/aga-6bands-fc-16.wav done"); else disp("processed/aga-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-6bands-fc-16.wav"); end
[s,err] = stat("processed/aga-6bands-fc-128.wav"); if (err == 0), disp("processed/aga-6bands-fc-128.wav done"); else disp("processed/aga-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-6bands-fc-128.wav"); end
[s,err] = stat("processed/aga-8bands-fc-4.wav"); if (err == 0), disp("processed/aga-8bands-fc-4.wav done"); else disp("processed/aga-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-8bands-fc-4.wav"); end
[s,err] = stat("processed/aga-8bands-fc-16.wav"); if (err == 0), disp("processed/aga-8bands-fc-16.wav done"); else disp("processed/aga-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-8bands-fc-16.wav"); end
[s,err] = stat("processed/aga-8bands-fc-128.wav"); if (err == 0), disp("processed/aga-8bands-fc-128.wav done"); else disp("processed/aga-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-8bands-fc-128.wav"); end
[s,err] = stat("processed/aga-12bands-fc-4.wav"); if (err == 0), disp("processed/aga-12bands-fc-4.wav done"); else disp("processed/aga-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-12bands-fc-4.wav"); end
[s,err] = stat("processed/aga-12bands-fc-16.wav"); if (err == 0), disp("processed/aga-12bands-fc-16.wav done"); else disp("processed/aga-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-12bands-fc-16.wav"); end
[s,err] = stat("processed/aga-12bands-fc-128.wav"); if (err == 0), disp("processed/aga-12bands-fc-128.wav done"); else disp("processed/aga-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-12bands-fc-128.wav"); end
[s,err] = stat("processed/aga-16bands-fc-4.wav"); if (err == 0), disp("processed/aga-16bands-fc-4.wav done"); else disp("processed/aga-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-16bands-fc-4.wav"); end
[s,err] = stat("processed/aga-16bands-fc-16.wav"); if (err == 0), disp("processed/aga-16bands-fc-16.wav done"); else disp("processed/aga-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-16bands-fc-16.wav"); end
[s,err] = stat("processed/aga-16bands-fc-128.wav"); if (err == 0), disp("processed/aga-16bands-fc-128.wav done"); else disp("processed/aga-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aga.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aga-16bands-fc-128.wav"); end
[s,err] = stat("processed/ougou-1bands-fc-4.wav"); if (err == 0), disp("processed/ougou-1bands-fc-4.wav done"); else disp("processed/ougou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ougou-1bands-fc-16.wav"); if (err == 0), disp("processed/ougou-1bands-fc-16.wav done"); else disp("processed/ougou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ougou-1bands-fc-128.wav"); if (err == 0), disp("processed/ougou-1bands-fc-128.wav done"); else disp("processed/ougou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ougou-2bands-fc-4.wav"); if (err == 0), disp("processed/ougou-2bands-fc-4.wav done"); else disp("processed/ougou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ougou-2bands-fc-16.wav"); if (err == 0), disp("processed/ougou-2bands-fc-16.wav done"); else disp("processed/ougou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ougou-2bands-fc-128.wav"); if (err == 0), disp("processed/ougou-2bands-fc-128.wav done"); else disp("processed/ougou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ougou-4bands-fc-4.wav"); if (err == 0), disp("processed/ougou-4bands-fc-4.wav done"); else disp("processed/ougou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ougou-4bands-fc-16.wav"); if (err == 0), disp("processed/ougou-4bands-fc-16.wav done"); else disp("processed/ougou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ougou-4bands-fc-128.wav"); if (err == 0), disp("processed/ougou-4bands-fc-128.wav done"); else disp("processed/ougou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ougou-6bands-fc-4.wav"); if (err == 0), disp("processed/ougou-6bands-fc-4.wav done"); else disp("processed/ougou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ougou-6bands-fc-16.wav"); if (err == 0), disp("processed/ougou-6bands-fc-16.wav done"); else disp("processed/ougou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ougou-6bands-fc-128.wav"); if (err == 0), disp("processed/ougou-6bands-fc-128.wav done"); else disp("processed/ougou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ougou-8bands-fc-4.wav"); if (err == 0), disp("processed/ougou-8bands-fc-4.wav done"); else disp("processed/ougou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ougou-8bands-fc-16.wav"); if (err == 0), disp("processed/ougou-8bands-fc-16.wav done"); else disp("processed/ougou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ougou-8bands-fc-128.wav"); if (err == 0), disp("processed/ougou-8bands-fc-128.wav done"); else disp("processed/ougou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ougou-12bands-fc-4.wav"); if (err == 0), disp("processed/ougou-12bands-fc-4.wav done"); else disp("processed/ougou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ougou-12bands-fc-16.wav"); if (err == 0), disp("processed/ougou-12bands-fc-16.wav done"); else disp("processed/ougou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ougou-12bands-fc-128.wav"); if (err == 0), disp("processed/ougou-12bands-fc-128.wav done"); else disp("processed/ougou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ougou-16bands-fc-4.wav"); if (err == 0), disp("processed/ougou-16bands-fc-4.wav done"); else disp("processed/ougou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ougou-16bands-fc-16.wav"); if (err == 0), disp("processed/ougou-16bands-fc-16.wav done"); else disp("processed/ougou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ougou-16bands-fc-128.wav"); if (err == 0), disp("processed/ougou-16bands-fc-128.wav done"); else disp("processed/ougou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougou-16bands-fc-128.wav"); end
[s,err] = stat("processed/imi-1bands-fc-4.wav"); if (err == 0), disp("processed/imi-1bands-fc-4.wav done"); else disp("processed/imi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-1bands-fc-4.wav"); end
[s,err] = stat("processed/imi-1bands-fc-16.wav"); if (err == 0), disp("processed/imi-1bands-fc-16.wav done"); else disp("processed/imi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-1bands-fc-16.wav"); end
[s,err] = stat("processed/imi-1bands-fc-128.wav"); if (err == 0), disp("processed/imi-1bands-fc-128.wav done"); else disp("processed/imi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-1bands-fc-128.wav"); end
[s,err] = stat("processed/imi-2bands-fc-4.wav"); if (err == 0), disp("processed/imi-2bands-fc-4.wav done"); else disp("processed/imi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-2bands-fc-4.wav"); end
[s,err] = stat("processed/imi-2bands-fc-16.wav"); if (err == 0), disp("processed/imi-2bands-fc-16.wav done"); else disp("processed/imi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-2bands-fc-16.wav"); end
[s,err] = stat("processed/imi-2bands-fc-128.wav"); if (err == 0), disp("processed/imi-2bands-fc-128.wav done"); else disp("processed/imi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-2bands-fc-128.wav"); end
[s,err] = stat("processed/imi-4bands-fc-4.wav"); if (err == 0), disp("processed/imi-4bands-fc-4.wav done"); else disp("processed/imi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-4bands-fc-4.wav"); end
[s,err] = stat("processed/imi-4bands-fc-16.wav"); if (err == 0), disp("processed/imi-4bands-fc-16.wav done"); else disp("processed/imi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-4bands-fc-16.wav"); end
[s,err] = stat("processed/imi-4bands-fc-128.wav"); if (err == 0), disp("processed/imi-4bands-fc-128.wav done"); else disp("processed/imi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-4bands-fc-128.wav"); end
[s,err] = stat("processed/imi-6bands-fc-4.wav"); if (err == 0), disp("processed/imi-6bands-fc-4.wav done"); else disp("processed/imi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-6bands-fc-4.wav"); end
[s,err] = stat("processed/imi-6bands-fc-16.wav"); if (err == 0), disp("processed/imi-6bands-fc-16.wav done"); else disp("processed/imi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-6bands-fc-16.wav"); end
[s,err] = stat("processed/imi-6bands-fc-128.wav"); if (err == 0), disp("processed/imi-6bands-fc-128.wav done"); else disp("processed/imi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-6bands-fc-128.wav"); end
[s,err] = stat("processed/imi-8bands-fc-4.wav"); if (err == 0), disp("processed/imi-8bands-fc-4.wav done"); else disp("processed/imi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-8bands-fc-4.wav"); end
[s,err] = stat("processed/imi-8bands-fc-16.wav"); if (err == 0), disp("processed/imi-8bands-fc-16.wav done"); else disp("processed/imi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-8bands-fc-16.wav"); end
[s,err] = stat("processed/imi-8bands-fc-128.wav"); if (err == 0), disp("processed/imi-8bands-fc-128.wav done"); else disp("processed/imi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-8bands-fc-128.wav"); end
[s,err] = stat("processed/imi-12bands-fc-4.wav"); if (err == 0), disp("processed/imi-12bands-fc-4.wav done"); else disp("processed/imi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-12bands-fc-4.wav"); end
[s,err] = stat("processed/imi-12bands-fc-16.wav"); if (err == 0), disp("processed/imi-12bands-fc-16.wav done"); else disp("processed/imi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-12bands-fc-16.wav"); end
[s,err] = stat("processed/imi-12bands-fc-128.wav"); if (err == 0), disp("processed/imi-12bands-fc-128.wav done"); else disp("processed/imi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-12bands-fc-128.wav"); end
[s,err] = stat("processed/imi-16bands-fc-4.wav"); if (err == 0), disp("processed/imi-16bands-fc-4.wav done"); else disp("processed/imi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-16bands-fc-4.wav"); end
[s,err] = stat("processed/imi-16bands-fc-16.wav"); if (err == 0), disp("processed/imi-16bands-fc-16.wav done"); else disp("processed/imi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-16bands-fc-16.wav"); end
[s,err] = stat("processed/imi-16bands-fc-128.wav"); if (err == 0), disp("processed/imi-16bands-fc-128.wav done"); else disp("processed/imi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/imi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/imi-16bands-fc-128.wav"); end
[s,err] = stat("processed/ama-1bands-fc-4.wav"); if (err == 0), disp("processed/ama-1bands-fc-4.wav done"); else disp("processed/ama-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-1bands-fc-4.wav"); end
[s,err] = stat("processed/ama-1bands-fc-16.wav"); if (err == 0), disp("processed/ama-1bands-fc-16.wav done"); else disp("processed/ama-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-1bands-fc-16.wav"); end
[s,err] = stat("processed/ama-1bands-fc-128.wav"); if (err == 0), disp("processed/ama-1bands-fc-128.wav done"); else disp("processed/ama-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-1bands-fc-128.wav"); end
[s,err] = stat("processed/ama-2bands-fc-4.wav"); if (err == 0), disp("processed/ama-2bands-fc-4.wav done"); else disp("processed/ama-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-2bands-fc-4.wav"); end
[s,err] = stat("processed/ama-2bands-fc-16.wav"); if (err == 0), disp("processed/ama-2bands-fc-16.wav done"); else disp("processed/ama-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-2bands-fc-16.wav"); end
[s,err] = stat("processed/ama-2bands-fc-128.wav"); if (err == 0), disp("processed/ama-2bands-fc-128.wav done"); else disp("processed/ama-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-2bands-fc-128.wav"); end
[s,err] = stat("processed/ama-4bands-fc-4.wav"); if (err == 0), disp("processed/ama-4bands-fc-4.wav done"); else disp("processed/ama-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-4bands-fc-4.wav"); end
[s,err] = stat("processed/ama-4bands-fc-16.wav"); if (err == 0), disp("processed/ama-4bands-fc-16.wav done"); else disp("processed/ama-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-4bands-fc-16.wav"); end
[s,err] = stat("processed/ama-4bands-fc-128.wav"); if (err == 0), disp("processed/ama-4bands-fc-128.wav done"); else disp("processed/ama-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-4bands-fc-128.wav"); end
[s,err] = stat("processed/ama-6bands-fc-4.wav"); if (err == 0), disp("processed/ama-6bands-fc-4.wav done"); else disp("processed/ama-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-6bands-fc-4.wav"); end
[s,err] = stat("processed/ama-6bands-fc-16.wav"); if (err == 0), disp("processed/ama-6bands-fc-16.wav done"); else disp("processed/ama-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-6bands-fc-16.wav"); end
[s,err] = stat("processed/ama-6bands-fc-128.wav"); if (err == 0), disp("processed/ama-6bands-fc-128.wav done"); else disp("processed/ama-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-6bands-fc-128.wav"); end
[s,err] = stat("processed/ama-8bands-fc-4.wav"); if (err == 0), disp("processed/ama-8bands-fc-4.wav done"); else disp("processed/ama-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-8bands-fc-4.wav"); end
[s,err] = stat("processed/ama-8bands-fc-16.wav"); if (err == 0), disp("processed/ama-8bands-fc-16.wav done"); else disp("processed/ama-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-8bands-fc-16.wav"); end
[s,err] = stat("processed/ama-8bands-fc-128.wav"); if (err == 0), disp("processed/ama-8bands-fc-128.wav done"); else disp("processed/ama-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-8bands-fc-128.wav"); end
[s,err] = stat("processed/ama-12bands-fc-4.wav"); if (err == 0), disp("processed/ama-12bands-fc-4.wav done"); else disp("processed/ama-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-12bands-fc-4.wav"); end
[s,err] = stat("processed/ama-12bands-fc-16.wav"); if (err == 0), disp("processed/ama-12bands-fc-16.wav done"); else disp("processed/ama-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-12bands-fc-16.wav"); end
[s,err] = stat("processed/ama-12bands-fc-128.wav"); if (err == 0), disp("processed/ama-12bands-fc-128.wav done"); else disp("processed/ama-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-12bands-fc-128.wav"); end
[s,err] = stat("processed/ama-16bands-fc-4.wav"); if (err == 0), disp("processed/ama-16bands-fc-4.wav done"); else disp("processed/ama-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-16bands-fc-4.wav"); end
[s,err] = stat("processed/ama-16bands-fc-16.wav"); if (err == 0), disp("processed/ama-16bands-fc-16.wav done"); else disp("processed/ama-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-16bands-fc-16.wav"); end
[s,err] = stat("processed/ama-16bands-fc-128.wav"); if (err == 0), disp("processed/ama-16bands-fc-128.wav done"); else disp("processed/ama-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ama.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ama-16bands-fc-128.wav"); end
[s,err] = stat("processed/oumou-1bands-fc-4.wav"); if (err == 0), disp("processed/oumou-1bands-fc-4.wav done"); else disp("processed/oumou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-1bands-fc-4.wav"); end
[s,err] = stat("processed/oumou-1bands-fc-16.wav"); if (err == 0), disp("processed/oumou-1bands-fc-16.wav done"); else disp("processed/oumou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-1bands-fc-16.wav"); end
[s,err] = stat("processed/oumou-1bands-fc-128.wav"); if (err == 0), disp("processed/oumou-1bands-fc-128.wav done"); else disp("processed/oumou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-1bands-fc-128.wav"); end
[s,err] = stat("processed/oumou-2bands-fc-4.wav"); if (err == 0), disp("processed/oumou-2bands-fc-4.wav done"); else disp("processed/oumou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-2bands-fc-4.wav"); end
[s,err] = stat("processed/oumou-2bands-fc-16.wav"); if (err == 0), disp("processed/oumou-2bands-fc-16.wav done"); else disp("processed/oumou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-2bands-fc-16.wav"); end
[s,err] = stat("processed/oumou-2bands-fc-128.wav"); if (err == 0), disp("processed/oumou-2bands-fc-128.wav done"); else disp("processed/oumou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-2bands-fc-128.wav"); end
[s,err] = stat("processed/oumou-4bands-fc-4.wav"); if (err == 0), disp("processed/oumou-4bands-fc-4.wav done"); else disp("processed/oumou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-4bands-fc-4.wav"); end
[s,err] = stat("processed/oumou-4bands-fc-16.wav"); if (err == 0), disp("processed/oumou-4bands-fc-16.wav done"); else disp("processed/oumou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-4bands-fc-16.wav"); end
[s,err] = stat("processed/oumou-4bands-fc-128.wav"); if (err == 0), disp("processed/oumou-4bands-fc-128.wav done"); else disp("processed/oumou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-4bands-fc-128.wav"); end
[s,err] = stat("processed/oumou-6bands-fc-4.wav"); if (err == 0), disp("processed/oumou-6bands-fc-4.wav done"); else disp("processed/oumou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-6bands-fc-4.wav"); end
[s,err] = stat("processed/oumou-6bands-fc-16.wav"); if (err == 0), disp("processed/oumou-6bands-fc-16.wav done"); else disp("processed/oumou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-6bands-fc-16.wav"); end
[s,err] = stat("processed/oumou-6bands-fc-128.wav"); if (err == 0), disp("processed/oumou-6bands-fc-128.wav done"); else disp("processed/oumou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-6bands-fc-128.wav"); end
[s,err] = stat("processed/oumou-8bands-fc-4.wav"); if (err == 0), disp("processed/oumou-8bands-fc-4.wav done"); else disp("processed/oumou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-8bands-fc-4.wav"); end
[s,err] = stat("processed/oumou-8bands-fc-16.wav"); if (err == 0), disp("processed/oumou-8bands-fc-16.wav done"); else disp("processed/oumou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-8bands-fc-16.wav"); end
[s,err] = stat("processed/oumou-8bands-fc-128.wav"); if (err == 0), disp("processed/oumou-8bands-fc-128.wav done"); else disp("processed/oumou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-8bands-fc-128.wav"); end
[s,err] = stat("processed/oumou-12bands-fc-4.wav"); if (err == 0), disp("processed/oumou-12bands-fc-4.wav done"); else disp("processed/oumou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-12bands-fc-4.wav"); end
[s,err] = stat("processed/oumou-12bands-fc-16.wav"); if (err == 0), disp("processed/oumou-12bands-fc-16.wav done"); else disp("processed/oumou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-12bands-fc-16.wav"); end
[s,err] = stat("processed/oumou-12bands-fc-128.wav"); if (err == 0), disp("processed/oumou-12bands-fc-128.wav done"); else disp("processed/oumou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-12bands-fc-128.wav"); end
[s,err] = stat("processed/oumou-16bands-fc-4.wav"); if (err == 0), disp("processed/oumou-16bands-fc-4.wav done"); else disp("processed/oumou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-16bands-fc-4.wav"); end
[s,err] = stat("processed/oumou-16bands-fc-16.wav"); if (err == 0), disp("processed/oumou-16bands-fc-16.wav done"); else disp("processed/oumou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-16bands-fc-16.wav"); end
[s,err] = stat("processed/oumou-16bands-fc-128.wav"); if (err == 0), disp("processed/oumou-16bands-fc-128.wav done"); else disp("processed/oumou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oumou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oumou-16bands-fc-128.wav"); end
[s,err] = stat("processed/ini-1bands-fc-4.wav"); if (err == 0), disp("processed/ini-1bands-fc-4.wav done"); else disp("processed/ini-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-1bands-fc-4.wav"); end
[s,err] = stat("processed/ini-1bands-fc-16.wav"); if (err == 0), disp("processed/ini-1bands-fc-16.wav done"); else disp("processed/ini-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-1bands-fc-16.wav"); end
[s,err] = stat("processed/ini-1bands-fc-128.wav"); if (err == 0), disp("processed/ini-1bands-fc-128.wav done"); else disp("processed/ini-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-1bands-fc-128.wav"); end
[s,err] = stat("processed/ini-2bands-fc-4.wav"); if (err == 0), disp("processed/ini-2bands-fc-4.wav done"); else disp("processed/ini-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-2bands-fc-4.wav"); end
[s,err] = stat("processed/ini-2bands-fc-16.wav"); if (err == 0), disp("processed/ini-2bands-fc-16.wav done"); else disp("processed/ini-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-2bands-fc-16.wav"); end
[s,err] = stat("processed/ini-2bands-fc-128.wav"); if (err == 0), disp("processed/ini-2bands-fc-128.wav done"); else disp("processed/ini-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-2bands-fc-128.wav"); end
[s,err] = stat("processed/ini-4bands-fc-4.wav"); if (err == 0), disp("processed/ini-4bands-fc-4.wav done"); else disp("processed/ini-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-4bands-fc-4.wav"); end
[s,err] = stat("processed/ini-4bands-fc-16.wav"); if (err == 0), disp("processed/ini-4bands-fc-16.wav done"); else disp("processed/ini-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-4bands-fc-16.wav"); end
[s,err] = stat("processed/ini-4bands-fc-128.wav"); if (err == 0), disp("processed/ini-4bands-fc-128.wav done"); else disp("processed/ini-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-4bands-fc-128.wav"); end
[s,err] = stat("processed/ini-6bands-fc-4.wav"); if (err == 0), disp("processed/ini-6bands-fc-4.wav done"); else disp("processed/ini-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-6bands-fc-4.wav"); end
[s,err] = stat("processed/ini-6bands-fc-16.wav"); if (err == 0), disp("processed/ini-6bands-fc-16.wav done"); else disp("processed/ini-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-6bands-fc-16.wav"); end
[s,err] = stat("processed/ini-6bands-fc-128.wav"); if (err == 0), disp("processed/ini-6bands-fc-128.wav done"); else disp("processed/ini-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-6bands-fc-128.wav"); end
[s,err] = stat("processed/ini-8bands-fc-4.wav"); if (err == 0), disp("processed/ini-8bands-fc-4.wav done"); else disp("processed/ini-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-8bands-fc-4.wav"); end
[s,err] = stat("processed/ini-8bands-fc-16.wav"); if (err == 0), disp("processed/ini-8bands-fc-16.wav done"); else disp("processed/ini-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-8bands-fc-16.wav"); end
[s,err] = stat("processed/ini-8bands-fc-128.wav"); if (err == 0), disp("processed/ini-8bands-fc-128.wav done"); else disp("processed/ini-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-8bands-fc-128.wav"); end
[s,err] = stat("processed/ini-12bands-fc-4.wav"); if (err == 0), disp("processed/ini-12bands-fc-4.wav done"); else disp("processed/ini-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-12bands-fc-4.wav"); end
[s,err] = stat("processed/ini-12bands-fc-16.wav"); if (err == 0), disp("processed/ini-12bands-fc-16.wav done"); else disp("processed/ini-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-12bands-fc-16.wav"); end
[s,err] = stat("processed/ini-12bands-fc-128.wav"); if (err == 0), disp("processed/ini-12bands-fc-128.wav done"); else disp("processed/ini-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-12bands-fc-128.wav"); end
[s,err] = stat("processed/ini-16bands-fc-4.wav"); if (err == 0), disp("processed/ini-16bands-fc-4.wav done"); else disp("processed/ini-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-16bands-fc-4.wav"); end
[s,err] = stat("processed/ini-16bands-fc-16.wav"); if (err == 0), disp("processed/ini-16bands-fc-16.wav done"); else disp("processed/ini-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-16bands-fc-16.wav"); end
[s,err] = stat("processed/ini-16bands-fc-128.wav"); if (err == 0), disp("processed/ini-16bands-fc-128.wav done"); else disp("processed/ini-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ini.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ini-16bands-fc-128.wav"); end
[s,err] = stat("processed/ana-1bands-fc-4.wav"); if (err == 0), disp("processed/ana-1bands-fc-4.wav done"); else disp("processed/ana-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-1bands-fc-4.wav"); end
[s,err] = stat("processed/ana-1bands-fc-16.wav"); if (err == 0), disp("processed/ana-1bands-fc-16.wav done"); else disp("processed/ana-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-1bands-fc-16.wav"); end
[s,err] = stat("processed/ana-1bands-fc-128.wav"); if (err == 0), disp("processed/ana-1bands-fc-128.wav done"); else disp("processed/ana-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-1bands-fc-128.wav"); end
[s,err] = stat("processed/ana-2bands-fc-4.wav"); if (err == 0), disp("processed/ana-2bands-fc-4.wav done"); else disp("processed/ana-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-2bands-fc-4.wav"); end
[s,err] = stat("processed/ana-2bands-fc-16.wav"); if (err == 0), disp("processed/ana-2bands-fc-16.wav done"); else disp("processed/ana-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-2bands-fc-16.wav"); end
[s,err] = stat("processed/ana-2bands-fc-128.wav"); if (err == 0), disp("processed/ana-2bands-fc-128.wav done"); else disp("processed/ana-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-2bands-fc-128.wav"); end
[s,err] = stat("processed/ana-4bands-fc-4.wav"); if (err == 0), disp("processed/ana-4bands-fc-4.wav done"); else disp("processed/ana-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-4bands-fc-4.wav"); end
[s,err] = stat("processed/ana-4bands-fc-16.wav"); if (err == 0), disp("processed/ana-4bands-fc-16.wav done"); else disp("processed/ana-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-4bands-fc-16.wav"); end
[s,err] = stat("processed/ana-4bands-fc-128.wav"); if (err == 0), disp("processed/ana-4bands-fc-128.wav done"); else disp("processed/ana-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-4bands-fc-128.wav"); end
[s,err] = stat("processed/ana-6bands-fc-4.wav"); if (err == 0), disp("processed/ana-6bands-fc-4.wav done"); else disp("processed/ana-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-6bands-fc-4.wav"); end
[s,err] = stat("processed/ana-6bands-fc-16.wav"); if (err == 0), disp("processed/ana-6bands-fc-16.wav done"); else disp("processed/ana-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-6bands-fc-16.wav"); end
[s,err] = stat("processed/ana-6bands-fc-128.wav"); if (err == 0), disp("processed/ana-6bands-fc-128.wav done"); else disp("processed/ana-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-6bands-fc-128.wav"); end
[s,err] = stat("processed/ana-8bands-fc-4.wav"); if (err == 0), disp("processed/ana-8bands-fc-4.wav done"); else disp("processed/ana-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-8bands-fc-4.wav"); end
[s,err] = stat("processed/ana-8bands-fc-16.wav"); if (err == 0), disp("processed/ana-8bands-fc-16.wav done"); else disp("processed/ana-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-8bands-fc-16.wav"); end
[s,err] = stat("processed/ana-8bands-fc-128.wav"); if (err == 0), disp("processed/ana-8bands-fc-128.wav done"); else disp("processed/ana-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-8bands-fc-128.wav"); end
[s,err] = stat("processed/ana-12bands-fc-4.wav"); if (err == 0), disp("processed/ana-12bands-fc-4.wav done"); else disp("processed/ana-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-12bands-fc-4.wav"); end
[s,err] = stat("processed/ana-12bands-fc-16.wav"); if (err == 0), disp("processed/ana-12bands-fc-16.wav done"); else disp("processed/ana-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-12bands-fc-16.wav"); end
[s,err] = stat("processed/ana-12bands-fc-128.wav"); if (err == 0), disp("processed/ana-12bands-fc-128.wav done"); else disp("processed/ana-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-12bands-fc-128.wav"); end
[s,err] = stat("processed/ana-16bands-fc-4.wav"); if (err == 0), disp("processed/ana-16bands-fc-4.wav done"); else disp("processed/ana-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-16bands-fc-4.wav"); end
[s,err] = stat("processed/ana-16bands-fc-16.wav"); if (err == 0), disp("processed/ana-16bands-fc-16.wav done"); else disp("processed/ana-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-16bands-fc-16.wav"); end
[s,err] = stat("processed/ana-16bands-fc-128.wav"); if (err == 0), disp("processed/ana-16bands-fc-128.wav done"); else disp("processed/ana-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ana.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ana-16bands-fc-128.wav"); end
[s,err] = stat("processed/ounou-1bands-fc-4.wav"); if (err == 0), disp("processed/ounou-1bands-fc-4.wav done"); else disp("processed/ounou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ounou-1bands-fc-16.wav"); if (err == 0), disp("processed/ounou-1bands-fc-16.wav done"); else disp("processed/ounou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ounou-1bands-fc-128.wav"); if (err == 0), disp("processed/ounou-1bands-fc-128.wav done"); else disp("processed/ounou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ounou-2bands-fc-4.wav"); if (err == 0), disp("processed/ounou-2bands-fc-4.wav done"); else disp("processed/ounou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ounou-2bands-fc-16.wav"); if (err == 0), disp("processed/ounou-2bands-fc-16.wav done"); else disp("processed/ounou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ounou-2bands-fc-128.wav"); if (err == 0), disp("processed/ounou-2bands-fc-128.wav done"); else disp("processed/ounou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ounou-4bands-fc-4.wav"); if (err == 0), disp("processed/ounou-4bands-fc-4.wav done"); else disp("processed/ounou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ounou-4bands-fc-16.wav"); if (err == 0), disp("processed/ounou-4bands-fc-16.wav done"); else disp("processed/ounou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ounou-4bands-fc-128.wav"); if (err == 0), disp("processed/ounou-4bands-fc-128.wav done"); else disp("processed/ounou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ounou-6bands-fc-4.wav"); if (err == 0), disp("processed/ounou-6bands-fc-4.wav done"); else disp("processed/ounou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ounou-6bands-fc-16.wav"); if (err == 0), disp("processed/ounou-6bands-fc-16.wav done"); else disp("processed/ounou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ounou-6bands-fc-128.wav"); if (err == 0), disp("processed/ounou-6bands-fc-128.wav done"); else disp("processed/ounou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ounou-8bands-fc-4.wav"); if (err == 0), disp("processed/ounou-8bands-fc-4.wav done"); else disp("processed/ounou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ounou-8bands-fc-16.wav"); if (err == 0), disp("processed/ounou-8bands-fc-16.wav done"); else disp("processed/ounou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ounou-8bands-fc-128.wav"); if (err == 0), disp("processed/ounou-8bands-fc-128.wav done"); else disp("processed/ounou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ounou-12bands-fc-4.wav"); if (err == 0), disp("processed/ounou-12bands-fc-4.wav done"); else disp("processed/ounou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ounou-12bands-fc-16.wav"); if (err == 0), disp("processed/ounou-12bands-fc-16.wav done"); else disp("processed/ounou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ounou-12bands-fc-128.wav"); if (err == 0), disp("processed/ounou-12bands-fc-128.wav done"); else disp("processed/ounou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ounou-16bands-fc-4.wav"); if (err == 0), disp("processed/ounou-16bands-fc-4.wav done"); else disp("processed/ounou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ounou-16bands-fc-16.wav"); if (err == 0), disp("processed/ounou-16bands-fc-16.wav done"); else disp("processed/ounou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ounou-16bands-fc-128.wav"); if (err == 0), disp("processed/ounou-16bands-fc-128.wav done"); else disp("processed/ounou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ounou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ounou-16bands-fc-128.wav"); end
[s,err] = stat("processed/igni-1bands-fc-4.wav"); if (err == 0), disp("processed/igni-1bands-fc-4.wav done"); else disp("processed/igni-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-1bands-fc-4.wav"); end
[s,err] = stat("processed/igni-1bands-fc-16.wav"); if (err == 0), disp("processed/igni-1bands-fc-16.wav done"); else disp("processed/igni-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-1bands-fc-16.wav"); end
[s,err] = stat("processed/igni-1bands-fc-128.wav"); if (err == 0), disp("processed/igni-1bands-fc-128.wav done"); else disp("processed/igni-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-1bands-fc-128.wav"); end
[s,err] = stat("processed/igni-2bands-fc-4.wav"); if (err == 0), disp("processed/igni-2bands-fc-4.wav done"); else disp("processed/igni-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-2bands-fc-4.wav"); end
[s,err] = stat("processed/igni-2bands-fc-16.wav"); if (err == 0), disp("processed/igni-2bands-fc-16.wav done"); else disp("processed/igni-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-2bands-fc-16.wav"); end
[s,err] = stat("processed/igni-2bands-fc-128.wav"); if (err == 0), disp("processed/igni-2bands-fc-128.wav done"); else disp("processed/igni-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-2bands-fc-128.wav"); end
[s,err] = stat("processed/igni-4bands-fc-4.wav"); if (err == 0), disp("processed/igni-4bands-fc-4.wav done"); else disp("processed/igni-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-4bands-fc-4.wav"); end
[s,err] = stat("processed/igni-4bands-fc-16.wav"); if (err == 0), disp("processed/igni-4bands-fc-16.wav done"); else disp("processed/igni-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-4bands-fc-16.wav"); end
[s,err] = stat("processed/igni-4bands-fc-128.wav"); if (err == 0), disp("processed/igni-4bands-fc-128.wav done"); else disp("processed/igni-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-4bands-fc-128.wav"); end
[s,err] = stat("processed/igni-6bands-fc-4.wav"); if (err == 0), disp("processed/igni-6bands-fc-4.wav done"); else disp("processed/igni-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-6bands-fc-4.wav"); end
[s,err] = stat("processed/igni-6bands-fc-16.wav"); if (err == 0), disp("processed/igni-6bands-fc-16.wav done"); else disp("processed/igni-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-6bands-fc-16.wav"); end
[s,err] = stat("processed/igni-6bands-fc-128.wav"); if (err == 0), disp("processed/igni-6bands-fc-128.wav done"); else disp("processed/igni-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-6bands-fc-128.wav"); end
[s,err] = stat("processed/igni-8bands-fc-4.wav"); if (err == 0), disp("processed/igni-8bands-fc-4.wav done"); else disp("processed/igni-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-8bands-fc-4.wav"); end
[s,err] = stat("processed/igni-8bands-fc-16.wav"); if (err == 0), disp("processed/igni-8bands-fc-16.wav done"); else disp("processed/igni-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-8bands-fc-16.wav"); end
[s,err] = stat("processed/igni-8bands-fc-128.wav"); if (err == 0), disp("processed/igni-8bands-fc-128.wav done"); else disp("processed/igni-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-8bands-fc-128.wav"); end
[s,err] = stat("processed/igni-12bands-fc-4.wav"); if (err == 0), disp("processed/igni-12bands-fc-4.wav done"); else disp("processed/igni-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-12bands-fc-4.wav"); end
[s,err] = stat("processed/igni-12bands-fc-16.wav"); if (err == 0), disp("processed/igni-12bands-fc-16.wav done"); else disp("processed/igni-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-12bands-fc-16.wav"); end
[s,err] = stat("processed/igni-12bands-fc-128.wav"); if (err == 0), disp("processed/igni-12bands-fc-128.wav done"); else disp("processed/igni-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-12bands-fc-128.wav"); end
[s,err] = stat("processed/igni-16bands-fc-4.wav"); if (err == 0), disp("processed/igni-16bands-fc-4.wav done"); else disp("processed/igni-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-16bands-fc-4.wav"); end
[s,err] = stat("processed/igni-16bands-fc-16.wav"); if (err == 0), disp("processed/igni-16bands-fc-16.wav done"); else disp("processed/igni-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-16bands-fc-16.wav"); end
[s,err] = stat("processed/igni-16bands-fc-128.wav"); if (err == 0), disp("processed/igni-16bands-fc-128.wav done"); else disp("processed/igni-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/igni.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/igni-16bands-fc-128.wav"); end
[s,err] = stat("processed/agna-1bands-fc-4.wav"); if (err == 0), disp("processed/agna-1bands-fc-4.wav done"); else disp("processed/agna-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-1bands-fc-4.wav"); end
[s,err] = stat("processed/agna-1bands-fc-16.wav"); if (err == 0), disp("processed/agna-1bands-fc-16.wav done"); else disp("processed/agna-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-1bands-fc-16.wav"); end
[s,err] = stat("processed/agna-1bands-fc-128.wav"); if (err == 0), disp("processed/agna-1bands-fc-128.wav done"); else disp("processed/agna-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-1bands-fc-128.wav"); end
[s,err] = stat("processed/agna-2bands-fc-4.wav"); if (err == 0), disp("processed/agna-2bands-fc-4.wav done"); else disp("processed/agna-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-2bands-fc-4.wav"); end
[s,err] = stat("processed/agna-2bands-fc-16.wav"); if (err == 0), disp("processed/agna-2bands-fc-16.wav done"); else disp("processed/agna-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-2bands-fc-16.wav"); end
[s,err] = stat("processed/agna-2bands-fc-128.wav"); if (err == 0), disp("processed/agna-2bands-fc-128.wav done"); else disp("processed/agna-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-2bands-fc-128.wav"); end
[s,err] = stat("processed/agna-4bands-fc-4.wav"); if (err == 0), disp("processed/agna-4bands-fc-4.wav done"); else disp("processed/agna-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-4bands-fc-4.wav"); end
[s,err] = stat("processed/agna-4bands-fc-16.wav"); if (err == 0), disp("processed/agna-4bands-fc-16.wav done"); else disp("processed/agna-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-4bands-fc-16.wav"); end
[s,err] = stat("processed/agna-4bands-fc-128.wav"); if (err == 0), disp("processed/agna-4bands-fc-128.wav done"); else disp("processed/agna-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-4bands-fc-128.wav"); end
[s,err] = stat("processed/agna-6bands-fc-4.wav"); if (err == 0), disp("processed/agna-6bands-fc-4.wav done"); else disp("processed/agna-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-6bands-fc-4.wav"); end
[s,err] = stat("processed/agna-6bands-fc-16.wav"); if (err == 0), disp("processed/agna-6bands-fc-16.wav done"); else disp("processed/agna-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-6bands-fc-16.wav"); end
[s,err] = stat("processed/agna-6bands-fc-128.wav"); if (err == 0), disp("processed/agna-6bands-fc-128.wav done"); else disp("processed/agna-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-6bands-fc-128.wav"); end
[s,err] = stat("processed/agna-8bands-fc-4.wav"); if (err == 0), disp("processed/agna-8bands-fc-4.wav done"); else disp("processed/agna-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-8bands-fc-4.wav"); end
[s,err] = stat("processed/agna-8bands-fc-16.wav"); if (err == 0), disp("processed/agna-8bands-fc-16.wav done"); else disp("processed/agna-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-8bands-fc-16.wav"); end
[s,err] = stat("processed/agna-8bands-fc-128.wav"); if (err == 0), disp("processed/agna-8bands-fc-128.wav done"); else disp("processed/agna-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-8bands-fc-128.wav"); end
[s,err] = stat("processed/agna-12bands-fc-4.wav"); if (err == 0), disp("processed/agna-12bands-fc-4.wav done"); else disp("processed/agna-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-12bands-fc-4.wav"); end
[s,err] = stat("processed/agna-12bands-fc-16.wav"); if (err == 0), disp("processed/agna-12bands-fc-16.wav done"); else disp("processed/agna-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-12bands-fc-16.wav"); end
[s,err] = stat("processed/agna-12bands-fc-128.wav"); if (err == 0), disp("processed/agna-12bands-fc-128.wav done"); else disp("processed/agna-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-12bands-fc-128.wav"); end
[s,err] = stat("processed/agna-16bands-fc-4.wav"); if (err == 0), disp("processed/agna-16bands-fc-4.wav done"); else disp("processed/agna-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-16bands-fc-4.wav"); end
[s,err] = stat("processed/agna-16bands-fc-16.wav"); if (err == 0), disp("processed/agna-16bands-fc-16.wav done"); else disp("processed/agna-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-16bands-fc-16.wav"); end
[s,err] = stat("processed/agna-16bands-fc-128.wav"); if (err == 0), disp("processed/agna-16bands-fc-128.wav done"); else disp("processed/agna-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/agna.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/agna-16bands-fc-128.wav"); end
[s,err] = stat("processed/ougnou-1bands-fc-4.wav"); if (err == 0), disp("processed/ougnou-1bands-fc-4.wav done"); else disp("processed/ougnou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ougnou-1bands-fc-16.wav"); if (err == 0), disp("processed/ougnou-1bands-fc-16.wav done"); else disp("processed/ougnou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ougnou-1bands-fc-128.wav"); if (err == 0), disp("processed/ougnou-1bands-fc-128.wav done"); else disp("processed/ougnou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ougnou-2bands-fc-4.wav"); if (err == 0), disp("processed/ougnou-2bands-fc-4.wav done"); else disp("processed/ougnou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ougnou-2bands-fc-16.wav"); if (err == 0), disp("processed/ougnou-2bands-fc-16.wav done"); else disp("processed/ougnou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ougnou-2bands-fc-128.wav"); if (err == 0), disp("processed/ougnou-2bands-fc-128.wav done"); else disp("processed/ougnou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ougnou-4bands-fc-4.wav"); if (err == 0), disp("processed/ougnou-4bands-fc-4.wav done"); else disp("processed/ougnou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ougnou-4bands-fc-16.wav"); if (err == 0), disp("processed/ougnou-4bands-fc-16.wav done"); else disp("processed/ougnou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ougnou-4bands-fc-128.wav"); if (err == 0), disp("processed/ougnou-4bands-fc-128.wav done"); else disp("processed/ougnou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ougnou-6bands-fc-4.wav"); if (err == 0), disp("processed/ougnou-6bands-fc-4.wav done"); else disp("processed/ougnou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ougnou-6bands-fc-16.wav"); if (err == 0), disp("processed/ougnou-6bands-fc-16.wav done"); else disp("processed/ougnou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ougnou-6bands-fc-128.wav"); if (err == 0), disp("processed/ougnou-6bands-fc-128.wav done"); else disp("processed/ougnou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ougnou-8bands-fc-4.wav"); if (err == 0), disp("processed/ougnou-8bands-fc-4.wav done"); else disp("processed/ougnou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ougnou-8bands-fc-16.wav"); if (err == 0), disp("processed/ougnou-8bands-fc-16.wav done"); else disp("processed/ougnou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ougnou-8bands-fc-128.wav"); if (err == 0), disp("processed/ougnou-8bands-fc-128.wav done"); else disp("processed/ougnou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ougnou-12bands-fc-4.wav"); if (err == 0), disp("processed/ougnou-12bands-fc-4.wav done"); else disp("processed/ougnou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ougnou-12bands-fc-16.wav"); if (err == 0), disp("processed/ougnou-12bands-fc-16.wav done"); else disp("processed/ougnou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ougnou-12bands-fc-128.wav"); if (err == 0), disp("processed/ougnou-12bands-fc-128.wav done"); else disp("processed/ougnou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ougnou-16bands-fc-4.wav"); if (err == 0), disp("processed/ougnou-16bands-fc-4.wav done"); else disp("processed/ougnou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ougnou-16bands-fc-16.wav"); if (err == 0), disp("processed/ougnou-16bands-fc-16.wav done"); else disp("processed/ougnou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ougnou-16bands-fc-128.wav"); if (err == 0), disp("processed/ougnou-16bands-fc-128.wav done"); else disp("processed/ougnou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ougnou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ougnou-16bands-fc-128.wav"); end
[s,err] = stat("processed/ifi-1bands-fc-4.wav"); if (err == 0), disp("processed/ifi-1bands-fc-4.wav done"); else disp("processed/ifi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-1bands-fc-4.wav"); end
[s,err] = stat("processed/ifi-1bands-fc-16.wav"); if (err == 0), disp("processed/ifi-1bands-fc-16.wav done"); else disp("processed/ifi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-1bands-fc-16.wav"); end
[s,err] = stat("processed/ifi-1bands-fc-128.wav"); if (err == 0), disp("processed/ifi-1bands-fc-128.wav done"); else disp("processed/ifi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-1bands-fc-128.wav"); end
[s,err] = stat("processed/ifi-2bands-fc-4.wav"); if (err == 0), disp("processed/ifi-2bands-fc-4.wav done"); else disp("processed/ifi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-2bands-fc-4.wav"); end
[s,err] = stat("processed/ifi-2bands-fc-16.wav"); if (err == 0), disp("processed/ifi-2bands-fc-16.wav done"); else disp("processed/ifi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-2bands-fc-16.wav"); end
[s,err] = stat("processed/ifi-2bands-fc-128.wav"); if (err == 0), disp("processed/ifi-2bands-fc-128.wav done"); else disp("processed/ifi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-2bands-fc-128.wav"); end
[s,err] = stat("processed/ifi-4bands-fc-4.wav"); if (err == 0), disp("processed/ifi-4bands-fc-4.wav done"); else disp("processed/ifi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-4bands-fc-4.wav"); end
[s,err] = stat("processed/ifi-4bands-fc-16.wav"); if (err == 0), disp("processed/ifi-4bands-fc-16.wav done"); else disp("processed/ifi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-4bands-fc-16.wav"); end
[s,err] = stat("processed/ifi-4bands-fc-128.wav"); if (err == 0), disp("processed/ifi-4bands-fc-128.wav done"); else disp("processed/ifi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-4bands-fc-128.wav"); end
[s,err] = stat("processed/ifi-6bands-fc-4.wav"); if (err == 0), disp("processed/ifi-6bands-fc-4.wav done"); else disp("processed/ifi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-6bands-fc-4.wav"); end
[s,err] = stat("processed/ifi-6bands-fc-16.wav"); if (err == 0), disp("processed/ifi-6bands-fc-16.wav done"); else disp("processed/ifi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-6bands-fc-16.wav"); end
[s,err] = stat("processed/ifi-6bands-fc-128.wav"); if (err == 0), disp("processed/ifi-6bands-fc-128.wav done"); else disp("processed/ifi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-6bands-fc-128.wav"); end
[s,err] = stat("processed/ifi-8bands-fc-4.wav"); if (err == 0), disp("processed/ifi-8bands-fc-4.wav done"); else disp("processed/ifi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-8bands-fc-4.wav"); end
[s,err] = stat("processed/ifi-8bands-fc-16.wav"); if (err == 0), disp("processed/ifi-8bands-fc-16.wav done"); else disp("processed/ifi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-8bands-fc-16.wav"); end
[s,err] = stat("processed/ifi-8bands-fc-128.wav"); if (err == 0), disp("processed/ifi-8bands-fc-128.wav done"); else disp("processed/ifi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-8bands-fc-128.wav"); end
[s,err] = stat("processed/ifi-12bands-fc-4.wav"); if (err == 0), disp("processed/ifi-12bands-fc-4.wav done"); else disp("processed/ifi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-12bands-fc-4.wav"); end
[s,err] = stat("processed/ifi-12bands-fc-16.wav"); if (err == 0), disp("processed/ifi-12bands-fc-16.wav done"); else disp("processed/ifi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-12bands-fc-16.wav"); end
[s,err] = stat("processed/ifi-12bands-fc-128.wav"); if (err == 0), disp("processed/ifi-12bands-fc-128.wav done"); else disp("processed/ifi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-12bands-fc-128.wav"); end
[s,err] = stat("processed/ifi-16bands-fc-4.wav"); if (err == 0), disp("processed/ifi-16bands-fc-4.wav done"); else disp("processed/ifi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-16bands-fc-4.wav"); end
[s,err] = stat("processed/ifi-16bands-fc-16.wav"); if (err == 0), disp("processed/ifi-16bands-fc-16.wav done"); else disp("processed/ifi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-16bands-fc-16.wav"); end
[s,err] = stat("processed/ifi-16bands-fc-128.wav"); if (err == 0), disp("processed/ifi-16bands-fc-128.wav done"); else disp("processed/ifi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ifi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ifi-16bands-fc-128.wav"); end
[s,err] = stat("processed/afa-1bands-fc-4.wav"); if (err == 0), disp("processed/afa-1bands-fc-4.wav done"); else disp("processed/afa-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-1bands-fc-4.wav"); end
[s,err] = stat("processed/afa-1bands-fc-16.wav"); if (err == 0), disp("processed/afa-1bands-fc-16.wav done"); else disp("processed/afa-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-1bands-fc-16.wav"); end
[s,err] = stat("processed/afa-1bands-fc-128.wav"); if (err == 0), disp("processed/afa-1bands-fc-128.wav done"); else disp("processed/afa-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-1bands-fc-128.wav"); end
[s,err] = stat("processed/afa-2bands-fc-4.wav"); if (err == 0), disp("processed/afa-2bands-fc-4.wav done"); else disp("processed/afa-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-2bands-fc-4.wav"); end
[s,err] = stat("processed/afa-2bands-fc-16.wav"); if (err == 0), disp("processed/afa-2bands-fc-16.wav done"); else disp("processed/afa-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-2bands-fc-16.wav"); end
[s,err] = stat("processed/afa-2bands-fc-128.wav"); if (err == 0), disp("processed/afa-2bands-fc-128.wav done"); else disp("processed/afa-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-2bands-fc-128.wav"); end
[s,err] = stat("processed/afa-4bands-fc-4.wav"); if (err == 0), disp("processed/afa-4bands-fc-4.wav done"); else disp("processed/afa-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-4bands-fc-4.wav"); end
[s,err] = stat("processed/afa-4bands-fc-16.wav"); if (err == 0), disp("processed/afa-4bands-fc-16.wav done"); else disp("processed/afa-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-4bands-fc-16.wav"); end
[s,err] = stat("processed/afa-4bands-fc-128.wav"); if (err == 0), disp("processed/afa-4bands-fc-128.wav done"); else disp("processed/afa-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-4bands-fc-128.wav"); end
[s,err] = stat("processed/afa-6bands-fc-4.wav"); if (err == 0), disp("processed/afa-6bands-fc-4.wav done"); else disp("processed/afa-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-6bands-fc-4.wav"); end
[s,err] = stat("processed/afa-6bands-fc-16.wav"); if (err == 0), disp("processed/afa-6bands-fc-16.wav done"); else disp("processed/afa-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-6bands-fc-16.wav"); end
[s,err] = stat("processed/afa-6bands-fc-128.wav"); if (err == 0), disp("processed/afa-6bands-fc-128.wav done"); else disp("processed/afa-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-6bands-fc-128.wav"); end
[s,err] = stat("processed/afa-8bands-fc-4.wav"); if (err == 0), disp("processed/afa-8bands-fc-4.wav done"); else disp("processed/afa-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-8bands-fc-4.wav"); end
[s,err] = stat("processed/afa-8bands-fc-16.wav"); if (err == 0), disp("processed/afa-8bands-fc-16.wav done"); else disp("processed/afa-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-8bands-fc-16.wav"); end
[s,err] = stat("processed/afa-8bands-fc-128.wav"); if (err == 0), disp("processed/afa-8bands-fc-128.wav done"); else disp("processed/afa-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-8bands-fc-128.wav"); end
[s,err] = stat("processed/afa-12bands-fc-4.wav"); if (err == 0), disp("processed/afa-12bands-fc-4.wav done"); else disp("processed/afa-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-12bands-fc-4.wav"); end
[s,err] = stat("processed/afa-12bands-fc-16.wav"); if (err == 0), disp("processed/afa-12bands-fc-16.wav done"); else disp("processed/afa-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-12bands-fc-16.wav"); end
[s,err] = stat("processed/afa-12bands-fc-128.wav"); if (err == 0), disp("processed/afa-12bands-fc-128.wav done"); else disp("processed/afa-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-12bands-fc-128.wav"); end
[s,err] = stat("processed/afa-16bands-fc-4.wav"); if (err == 0), disp("processed/afa-16bands-fc-4.wav done"); else disp("processed/afa-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-16bands-fc-4.wav"); end
[s,err] = stat("processed/afa-16bands-fc-16.wav"); if (err == 0), disp("processed/afa-16bands-fc-16.wav done"); else disp("processed/afa-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-16bands-fc-16.wav"); end
[s,err] = stat("processed/afa-16bands-fc-128.wav"); if (err == 0), disp("processed/afa-16bands-fc-128.wav done"); else disp("processed/afa-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/afa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/afa-16bands-fc-128.wav"); end
[s,err] = stat("processed/oufou-1bands-fc-4.wav"); if (err == 0), disp("processed/oufou-1bands-fc-4.wav done"); else disp("processed/oufou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-1bands-fc-4.wav"); end
[s,err] = stat("processed/oufou-1bands-fc-16.wav"); if (err == 0), disp("processed/oufou-1bands-fc-16.wav done"); else disp("processed/oufou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-1bands-fc-16.wav"); end
[s,err] = stat("processed/oufou-1bands-fc-128.wav"); if (err == 0), disp("processed/oufou-1bands-fc-128.wav done"); else disp("processed/oufou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-1bands-fc-128.wav"); end
[s,err] = stat("processed/oufou-2bands-fc-4.wav"); if (err == 0), disp("processed/oufou-2bands-fc-4.wav done"); else disp("processed/oufou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-2bands-fc-4.wav"); end
[s,err] = stat("processed/oufou-2bands-fc-16.wav"); if (err == 0), disp("processed/oufou-2bands-fc-16.wav done"); else disp("processed/oufou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-2bands-fc-16.wav"); end
[s,err] = stat("processed/oufou-2bands-fc-128.wav"); if (err == 0), disp("processed/oufou-2bands-fc-128.wav done"); else disp("processed/oufou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-2bands-fc-128.wav"); end
[s,err] = stat("processed/oufou-4bands-fc-4.wav"); if (err == 0), disp("processed/oufou-4bands-fc-4.wav done"); else disp("processed/oufou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-4bands-fc-4.wav"); end
[s,err] = stat("processed/oufou-4bands-fc-16.wav"); if (err == 0), disp("processed/oufou-4bands-fc-16.wav done"); else disp("processed/oufou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-4bands-fc-16.wav"); end
[s,err] = stat("processed/oufou-4bands-fc-128.wav"); if (err == 0), disp("processed/oufou-4bands-fc-128.wav done"); else disp("processed/oufou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-4bands-fc-128.wav"); end
[s,err] = stat("processed/oufou-6bands-fc-4.wav"); if (err == 0), disp("processed/oufou-6bands-fc-4.wav done"); else disp("processed/oufou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-6bands-fc-4.wav"); end
[s,err] = stat("processed/oufou-6bands-fc-16.wav"); if (err == 0), disp("processed/oufou-6bands-fc-16.wav done"); else disp("processed/oufou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-6bands-fc-16.wav"); end
[s,err] = stat("processed/oufou-6bands-fc-128.wav"); if (err == 0), disp("processed/oufou-6bands-fc-128.wav done"); else disp("processed/oufou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-6bands-fc-128.wav"); end
[s,err] = stat("processed/oufou-8bands-fc-4.wav"); if (err == 0), disp("processed/oufou-8bands-fc-4.wav done"); else disp("processed/oufou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-8bands-fc-4.wav"); end
[s,err] = stat("processed/oufou-8bands-fc-16.wav"); if (err == 0), disp("processed/oufou-8bands-fc-16.wav done"); else disp("processed/oufou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-8bands-fc-16.wav"); end
[s,err] = stat("processed/oufou-8bands-fc-128.wav"); if (err == 0), disp("processed/oufou-8bands-fc-128.wav done"); else disp("processed/oufou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-8bands-fc-128.wav"); end
[s,err] = stat("processed/oufou-12bands-fc-4.wav"); if (err == 0), disp("processed/oufou-12bands-fc-4.wav done"); else disp("processed/oufou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-12bands-fc-4.wav"); end
[s,err] = stat("processed/oufou-12bands-fc-16.wav"); if (err == 0), disp("processed/oufou-12bands-fc-16.wav done"); else disp("processed/oufou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-12bands-fc-16.wav"); end
[s,err] = stat("processed/oufou-12bands-fc-128.wav"); if (err == 0), disp("processed/oufou-12bands-fc-128.wav done"); else disp("processed/oufou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-12bands-fc-128.wav"); end
[s,err] = stat("processed/oufou-16bands-fc-4.wav"); if (err == 0), disp("processed/oufou-16bands-fc-4.wav done"); else disp("processed/oufou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-16bands-fc-4.wav"); end
[s,err] = stat("processed/oufou-16bands-fc-16.wav"); if (err == 0), disp("processed/oufou-16bands-fc-16.wav done"); else disp("processed/oufou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-16bands-fc-16.wav"); end
[s,err] = stat("processed/oufou-16bands-fc-128.wav"); if (err == 0), disp("processed/oufou-16bands-fc-128.wav done"); else disp("processed/oufou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oufou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oufou-16bands-fc-128.wav"); end
[s,err] = stat("processed/issi-1bands-fc-4.wav"); if (err == 0), disp("processed/issi-1bands-fc-4.wav done"); else disp("processed/issi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-1bands-fc-4.wav"); end
[s,err] = stat("processed/issi-1bands-fc-16.wav"); if (err == 0), disp("processed/issi-1bands-fc-16.wav done"); else disp("processed/issi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-1bands-fc-16.wav"); end
[s,err] = stat("processed/issi-1bands-fc-128.wav"); if (err == 0), disp("processed/issi-1bands-fc-128.wav done"); else disp("processed/issi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-1bands-fc-128.wav"); end
[s,err] = stat("processed/issi-2bands-fc-4.wav"); if (err == 0), disp("processed/issi-2bands-fc-4.wav done"); else disp("processed/issi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-2bands-fc-4.wav"); end
[s,err] = stat("processed/issi-2bands-fc-16.wav"); if (err == 0), disp("processed/issi-2bands-fc-16.wav done"); else disp("processed/issi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-2bands-fc-16.wav"); end
[s,err] = stat("processed/issi-2bands-fc-128.wav"); if (err == 0), disp("processed/issi-2bands-fc-128.wav done"); else disp("processed/issi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-2bands-fc-128.wav"); end
[s,err] = stat("processed/issi-4bands-fc-4.wav"); if (err == 0), disp("processed/issi-4bands-fc-4.wav done"); else disp("processed/issi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-4bands-fc-4.wav"); end
[s,err] = stat("processed/issi-4bands-fc-16.wav"); if (err == 0), disp("processed/issi-4bands-fc-16.wav done"); else disp("processed/issi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-4bands-fc-16.wav"); end
[s,err] = stat("processed/issi-4bands-fc-128.wav"); if (err == 0), disp("processed/issi-4bands-fc-128.wav done"); else disp("processed/issi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-4bands-fc-128.wav"); end
[s,err] = stat("processed/issi-6bands-fc-4.wav"); if (err == 0), disp("processed/issi-6bands-fc-4.wav done"); else disp("processed/issi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-6bands-fc-4.wav"); end
[s,err] = stat("processed/issi-6bands-fc-16.wav"); if (err == 0), disp("processed/issi-6bands-fc-16.wav done"); else disp("processed/issi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-6bands-fc-16.wav"); end
[s,err] = stat("processed/issi-6bands-fc-128.wav"); if (err == 0), disp("processed/issi-6bands-fc-128.wav done"); else disp("processed/issi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-6bands-fc-128.wav"); end
[s,err] = stat("processed/issi-8bands-fc-4.wav"); if (err == 0), disp("processed/issi-8bands-fc-4.wav done"); else disp("processed/issi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-8bands-fc-4.wav"); end
[s,err] = stat("processed/issi-8bands-fc-16.wav"); if (err == 0), disp("processed/issi-8bands-fc-16.wav done"); else disp("processed/issi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-8bands-fc-16.wav"); end
[s,err] = stat("processed/issi-8bands-fc-128.wav"); if (err == 0), disp("processed/issi-8bands-fc-128.wav done"); else disp("processed/issi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-8bands-fc-128.wav"); end
[s,err] = stat("processed/issi-12bands-fc-4.wav"); if (err == 0), disp("processed/issi-12bands-fc-4.wav done"); else disp("processed/issi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-12bands-fc-4.wav"); end
[s,err] = stat("processed/issi-12bands-fc-16.wav"); if (err == 0), disp("processed/issi-12bands-fc-16.wav done"); else disp("processed/issi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-12bands-fc-16.wav"); end
[s,err] = stat("processed/issi-12bands-fc-128.wav"); if (err == 0), disp("processed/issi-12bands-fc-128.wav done"); else disp("processed/issi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-12bands-fc-128.wav"); end
[s,err] = stat("processed/issi-16bands-fc-4.wav"); if (err == 0), disp("processed/issi-16bands-fc-4.wav done"); else disp("processed/issi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-16bands-fc-4.wav"); end
[s,err] = stat("processed/issi-16bands-fc-16.wav"); if (err == 0), disp("processed/issi-16bands-fc-16.wav done"); else disp("processed/issi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-16bands-fc-16.wav"); end
[s,err] = stat("processed/issi-16bands-fc-128.wav"); if (err == 0), disp("processed/issi-16bands-fc-128.wav done"); else disp("processed/issi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/issi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/issi-16bands-fc-128.wav"); end
[s,err] = stat("processed/assa-1bands-fc-4.wav"); if (err == 0), disp("processed/assa-1bands-fc-4.wav done"); else disp("processed/assa-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-1bands-fc-4.wav"); end
[s,err] = stat("processed/assa-1bands-fc-16.wav"); if (err == 0), disp("processed/assa-1bands-fc-16.wav done"); else disp("processed/assa-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-1bands-fc-16.wav"); end
[s,err] = stat("processed/assa-1bands-fc-128.wav"); if (err == 0), disp("processed/assa-1bands-fc-128.wav done"); else disp("processed/assa-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-1bands-fc-128.wav"); end
[s,err] = stat("processed/assa-2bands-fc-4.wav"); if (err == 0), disp("processed/assa-2bands-fc-4.wav done"); else disp("processed/assa-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-2bands-fc-4.wav"); end
[s,err] = stat("processed/assa-2bands-fc-16.wav"); if (err == 0), disp("processed/assa-2bands-fc-16.wav done"); else disp("processed/assa-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-2bands-fc-16.wav"); end
[s,err] = stat("processed/assa-2bands-fc-128.wav"); if (err == 0), disp("processed/assa-2bands-fc-128.wav done"); else disp("processed/assa-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-2bands-fc-128.wav"); end
[s,err] = stat("processed/assa-4bands-fc-4.wav"); if (err == 0), disp("processed/assa-4bands-fc-4.wav done"); else disp("processed/assa-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-4bands-fc-4.wav"); end
[s,err] = stat("processed/assa-4bands-fc-16.wav"); if (err == 0), disp("processed/assa-4bands-fc-16.wav done"); else disp("processed/assa-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-4bands-fc-16.wav"); end
[s,err] = stat("processed/assa-4bands-fc-128.wav"); if (err == 0), disp("processed/assa-4bands-fc-128.wav done"); else disp("processed/assa-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-4bands-fc-128.wav"); end
[s,err] = stat("processed/assa-6bands-fc-4.wav"); if (err == 0), disp("processed/assa-6bands-fc-4.wav done"); else disp("processed/assa-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-6bands-fc-4.wav"); end
[s,err] = stat("processed/assa-6bands-fc-16.wav"); if (err == 0), disp("processed/assa-6bands-fc-16.wav done"); else disp("processed/assa-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-6bands-fc-16.wav"); end
[s,err] = stat("processed/assa-6bands-fc-128.wav"); if (err == 0), disp("processed/assa-6bands-fc-128.wav done"); else disp("processed/assa-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-6bands-fc-128.wav"); end
[s,err] = stat("processed/assa-8bands-fc-4.wav"); if (err == 0), disp("processed/assa-8bands-fc-4.wav done"); else disp("processed/assa-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-8bands-fc-4.wav"); end
[s,err] = stat("processed/assa-8bands-fc-16.wav"); if (err == 0), disp("processed/assa-8bands-fc-16.wav done"); else disp("processed/assa-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-8bands-fc-16.wav"); end
[s,err] = stat("processed/assa-8bands-fc-128.wav"); if (err == 0), disp("processed/assa-8bands-fc-128.wav done"); else disp("processed/assa-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-8bands-fc-128.wav"); end
[s,err] = stat("processed/assa-12bands-fc-4.wav"); if (err == 0), disp("processed/assa-12bands-fc-4.wav done"); else disp("processed/assa-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-12bands-fc-4.wav"); end
[s,err] = stat("processed/assa-12bands-fc-16.wav"); if (err == 0), disp("processed/assa-12bands-fc-16.wav done"); else disp("processed/assa-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-12bands-fc-16.wav"); end
[s,err] = stat("processed/assa-12bands-fc-128.wav"); if (err == 0), disp("processed/assa-12bands-fc-128.wav done"); else disp("processed/assa-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-12bands-fc-128.wav"); end
[s,err] = stat("processed/assa-16bands-fc-4.wav"); if (err == 0), disp("processed/assa-16bands-fc-4.wav done"); else disp("processed/assa-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-16bands-fc-4.wav"); end
[s,err] = stat("processed/assa-16bands-fc-16.wav"); if (err == 0), disp("processed/assa-16bands-fc-16.wav done"); else disp("processed/assa-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-16bands-fc-16.wav"); end
[s,err] = stat("processed/assa-16bands-fc-128.wav"); if (err == 0), disp("processed/assa-16bands-fc-128.wav done"); else disp("processed/assa-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/assa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/assa-16bands-fc-128.wav"); end
[s,err] = stat("processed/oussou-1bands-fc-4.wav"); if (err == 0), disp("processed/oussou-1bands-fc-4.wav done"); else disp("processed/oussou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-1bands-fc-4.wav"); end
[s,err] = stat("processed/oussou-1bands-fc-16.wav"); if (err == 0), disp("processed/oussou-1bands-fc-16.wav done"); else disp("processed/oussou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-1bands-fc-16.wav"); end
[s,err] = stat("processed/oussou-1bands-fc-128.wav"); if (err == 0), disp("processed/oussou-1bands-fc-128.wav done"); else disp("processed/oussou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-1bands-fc-128.wav"); end
[s,err] = stat("processed/oussou-2bands-fc-4.wav"); if (err == 0), disp("processed/oussou-2bands-fc-4.wav done"); else disp("processed/oussou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-2bands-fc-4.wav"); end
[s,err] = stat("processed/oussou-2bands-fc-16.wav"); if (err == 0), disp("processed/oussou-2bands-fc-16.wav done"); else disp("processed/oussou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-2bands-fc-16.wav"); end
[s,err] = stat("processed/oussou-2bands-fc-128.wav"); if (err == 0), disp("processed/oussou-2bands-fc-128.wav done"); else disp("processed/oussou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-2bands-fc-128.wav"); end
[s,err] = stat("processed/oussou-4bands-fc-4.wav"); if (err == 0), disp("processed/oussou-4bands-fc-4.wav done"); else disp("processed/oussou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-4bands-fc-4.wav"); end
[s,err] = stat("processed/oussou-4bands-fc-16.wav"); if (err == 0), disp("processed/oussou-4bands-fc-16.wav done"); else disp("processed/oussou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-4bands-fc-16.wav"); end
[s,err] = stat("processed/oussou-4bands-fc-128.wav"); if (err == 0), disp("processed/oussou-4bands-fc-128.wav done"); else disp("processed/oussou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-4bands-fc-128.wav"); end
[s,err] = stat("processed/oussou-6bands-fc-4.wav"); if (err == 0), disp("processed/oussou-6bands-fc-4.wav done"); else disp("processed/oussou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-6bands-fc-4.wav"); end
[s,err] = stat("processed/oussou-6bands-fc-16.wav"); if (err == 0), disp("processed/oussou-6bands-fc-16.wav done"); else disp("processed/oussou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-6bands-fc-16.wav"); end
[s,err] = stat("processed/oussou-6bands-fc-128.wav"); if (err == 0), disp("processed/oussou-6bands-fc-128.wav done"); else disp("processed/oussou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-6bands-fc-128.wav"); end
[s,err] = stat("processed/oussou-8bands-fc-4.wav"); if (err == 0), disp("processed/oussou-8bands-fc-4.wav done"); else disp("processed/oussou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-8bands-fc-4.wav"); end
[s,err] = stat("processed/oussou-8bands-fc-16.wav"); if (err == 0), disp("processed/oussou-8bands-fc-16.wav done"); else disp("processed/oussou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-8bands-fc-16.wav"); end
[s,err] = stat("processed/oussou-8bands-fc-128.wav"); if (err == 0), disp("processed/oussou-8bands-fc-128.wav done"); else disp("processed/oussou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-8bands-fc-128.wav"); end
[s,err] = stat("processed/oussou-12bands-fc-4.wav"); if (err == 0), disp("processed/oussou-12bands-fc-4.wav done"); else disp("processed/oussou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-12bands-fc-4.wav"); end
[s,err] = stat("processed/oussou-12bands-fc-16.wav"); if (err == 0), disp("processed/oussou-12bands-fc-16.wav done"); else disp("processed/oussou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-12bands-fc-16.wav"); end
[s,err] = stat("processed/oussou-12bands-fc-128.wav"); if (err == 0), disp("processed/oussou-12bands-fc-128.wav done"); else disp("processed/oussou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-12bands-fc-128.wav"); end
[s,err] = stat("processed/oussou-16bands-fc-4.wav"); if (err == 0), disp("processed/oussou-16bands-fc-4.wav done"); else disp("processed/oussou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-16bands-fc-4.wav"); end
[s,err] = stat("processed/oussou-16bands-fc-16.wav"); if (err == 0), disp("processed/oussou-16bands-fc-16.wav done"); else disp("processed/oussou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-16bands-fc-16.wav"); end
[s,err] = stat("processed/oussou-16bands-fc-128.wav"); if (err == 0), disp("processed/oussou-16bands-fc-128.wav done"); else disp("processed/oussou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oussou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oussou-16bands-fc-128.wav"); end
[s,err] = stat("processed/ichi-1bands-fc-4.wav"); if (err == 0), disp("processed/ichi-1bands-fc-4.wav done"); else disp("processed/ichi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-1bands-fc-4.wav"); end
[s,err] = stat("processed/ichi-1bands-fc-16.wav"); if (err == 0), disp("processed/ichi-1bands-fc-16.wav done"); else disp("processed/ichi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-1bands-fc-16.wav"); end
[s,err] = stat("processed/ichi-1bands-fc-128.wav"); if (err == 0), disp("processed/ichi-1bands-fc-128.wav done"); else disp("processed/ichi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-1bands-fc-128.wav"); end
[s,err] = stat("processed/ichi-2bands-fc-4.wav"); if (err == 0), disp("processed/ichi-2bands-fc-4.wav done"); else disp("processed/ichi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-2bands-fc-4.wav"); end
[s,err] = stat("processed/ichi-2bands-fc-16.wav"); if (err == 0), disp("processed/ichi-2bands-fc-16.wav done"); else disp("processed/ichi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-2bands-fc-16.wav"); end
[s,err] = stat("processed/ichi-2bands-fc-128.wav"); if (err == 0), disp("processed/ichi-2bands-fc-128.wav done"); else disp("processed/ichi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-2bands-fc-128.wav"); end
[s,err] = stat("processed/ichi-4bands-fc-4.wav"); if (err == 0), disp("processed/ichi-4bands-fc-4.wav done"); else disp("processed/ichi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-4bands-fc-4.wav"); end
[s,err] = stat("processed/ichi-4bands-fc-16.wav"); if (err == 0), disp("processed/ichi-4bands-fc-16.wav done"); else disp("processed/ichi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-4bands-fc-16.wav"); end
[s,err] = stat("processed/ichi-4bands-fc-128.wav"); if (err == 0), disp("processed/ichi-4bands-fc-128.wav done"); else disp("processed/ichi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-4bands-fc-128.wav"); end
[s,err] = stat("processed/ichi-6bands-fc-4.wav"); if (err == 0), disp("processed/ichi-6bands-fc-4.wav done"); else disp("processed/ichi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-6bands-fc-4.wav"); end
[s,err] = stat("processed/ichi-6bands-fc-16.wav"); if (err == 0), disp("processed/ichi-6bands-fc-16.wav done"); else disp("processed/ichi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-6bands-fc-16.wav"); end
[s,err] = stat("processed/ichi-6bands-fc-128.wav"); if (err == 0), disp("processed/ichi-6bands-fc-128.wav done"); else disp("processed/ichi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-6bands-fc-128.wav"); end
[s,err] = stat("processed/ichi-8bands-fc-4.wav"); if (err == 0), disp("processed/ichi-8bands-fc-4.wav done"); else disp("processed/ichi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-8bands-fc-4.wav"); end
[s,err] = stat("processed/ichi-8bands-fc-16.wav"); if (err == 0), disp("processed/ichi-8bands-fc-16.wav done"); else disp("processed/ichi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-8bands-fc-16.wav"); end
[s,err] = stat("processed/ichi-8bands-fc-128.wav"); if (err == 0), disp("processed/ichi-8bands-fc-128.wav done"); else disp("processed/ichi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-8bands-fc-128.wav"); end
[s,err] = stat("processed/ichi-12bands-fc-4.wav"); if (err == 0), disp("processed/ichi-12bands-fc-4.wav done"); else disp("processed/ichi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-12bands-fc-4.wav"); end
[s,err] = stat("processed/ichi-12bands-fc-16.wav"); if (err == 0), disp("processed/ichi-12bands-fc-16.wav done"); else disp("processed/ichi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-12bands-fc-16.wav"); end
[s,err] = stat("processed/ichi-12bands-fc-128.wav"); if (err == 0), disp("processed/ichi-12bands-fc-128.wav done"); else disp("processed/ichi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-12bands-fc-128.wav"); end
[s,err] = stat("processed/ichi-16bands-fc-4.wav"); if (err == 0), disp("processed/ichi-16bands-fc-4.wav done"); else disp("processed/ichi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-16bands-fc-4.wav"); end
[s,err] = stat("processed/ichi-16bands-fc-16.wav"); if (err == 0), disp("processed/ichi-16bands-fc-16.wav done"); else disp("processed/ichi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-16bands-fc-16.wav"); end
[s,err] = stat("processed/ichi-16bands-fc-128.wav"); if (err == 0), disp("processed/ichi-16bands-fc-128.wav done"); else disp("processed/ichi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ichi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ichi-16bands-fc-128.wav"); end
[s,err] = stat("processed/acha-1bands-fc-4.wav"); if (err == 0), disp("processed/acha-1bands-fc-4.wav done"); else disp("processed/acha-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-1bands-fc-4.wav"); end
[s,err] = stat("processed/acha-1bands-fc-16.wav"); if (err == 0), disp("processed/acha-1bands-fc-16.wav done"); else disp("processed/acha-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-1bands-fc-16.wav"); end
[s,err] = stat("processed/acha-1bands-fc-128.wav"); if (err == 0), disp("processed/acha-1bands-fc-128.wav done"); else disp("processed/acha-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-1bands-fc-128.wav"); end
[s,err] = stat("processed/acha-2bands-fc-4.wav"); if (err == 0), disp("processed/acha-2bands-fc-4.wav done"); else disp("processed/acha-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-2bands-fc-4.wav"); end
[s,err] = stat("processed/acha-2bands-fc-16.wav"); if (err == 0), disp("processed/acha-2bands-fc-16.wav done"); else disp("processed/acha-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-2bands-fc-16.wav"); end
[s,err] = stat("processed/acha-2bands-fc-128.wav"); if (err == 0), disp("processed/acha-2bands-fc-128.wav done"); else disp("processed/acha-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-2bands-fc-128.wav"); end
[s,err] = stat("processed/acha-4bands-fc-4.wav"); if (err == 0), disp("processed/acha-4bands-fc-4.wav done"); else disp("processed/acha-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-4bands-fc-4.wav"); end
[s,err] = stat("processed/acha-4bands-fc-16.wav"); if (err == 0), disp("processed/acha-4bands-fc-16.wav done"); else disp("processed/acha-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-4bands-fc-16.wav"); end
[s,err] = stat("processed/acha-4bands-fc-128.wav"); if (err == 0), disp("processed/acha-4bands-fc-128.wav done"); else disp("processed/acha-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-4bands-fc-128.wav"); end
[s,err] = stat("processed/acha-6bands-fc-4.wav"); if (err == 0), disp("processed/acha-6bands-fc-4.wav done"); else disp("processed/acha-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-6bands-fc-4.wav"); end
[s,err] = stat("processed/acha-6bands-fc-16.wav"); if (err == 0), disp("processed/acha-6bands-fc-16.wav done"); else disp("processed/acha-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-6bands-fc-16.wav"); end
[s,err] = stat("processed/acha-6bands-fc-128.wav"); if (err == 0), disp("processed/acha-6bands-fc-128.wav done"); else disp("processed/acha-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-6bands-fc-128.wav"); end
[s,err] = stat("processed/acha-8bands-fc-4.wav"); if (err == 0), disp("processed/acha-8bands-fc-4.wav done"); else disp("processed/acha-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-8bands-fc-4.wav"); end
[s,err] = stat("processed/acha-8bands-fc-16.wav"); if (err == 0), disp("processed/acha-8bands-fc-16.wav done"); else disp("processed/acha-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-8bands-fc-16.wav"); end
[s,err] = stat("processed/acha-8bands-fc-128.wav"); if (err == 0), disp("processed/acha-8bands-fc-128.wav done"); else disp("processed/acha-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-8bands-fc-128.wav"); end
[s,err] = stat("processed/acha-12bands-fc-4.wav"); if (err == 0), disp("processed/acha-12bands-fc-4.wav done"); else disp("processed/acha-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-12bands-fc-4.wav"); end
[s,err] = stat("processed/acha-12bands-fc-16.wav"); if (err == 0), disp("processed/acha-12bands-fc-16.wav done"); else disp("processed/acha-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-12bands-fc-16.wav"); end
[s,err] = stat("processed/acha-12bands-fc-128.wav"); if (err == 0), disp("processed/acha-12bands-fc-128.wav done"); else disp("processed/acha-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-12bands-fc-128.wav"); end
[s,err] = stat("processed/acha-16bands-fc-4.wav"); if (err == 0), disp("processed/acha-16bands-fc-4.wav done"); else disp("processed/acha-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-16bands-fc-4.wav"); end
[s,err] = stat("processed/acha-16bands-fc-16.wav"); if (err == 0), disp("processed/acha-16bands-fc-16.wav done"); else disp("processed/acha-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-16bands-fc-16.wav"); end
[s,err] = stat("processed/acha-16bands-fc-128.wav"); if (err == 0), disp("processed/acha-16bands-fc-128.wav done"); else disp("processed/acha-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/acha.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/acha-16bands-fc-128.wav"); end
[s,err] = stat("processed/ouchou-1bands-fc-4.wav"); if (err == 0), disp("processed/ouchou-1bands-fc-4.wav done"); else disp("processed/ouchou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ouchou-1bands-fc-16.wav"); if (err == 0), disp("processed/ouchou-1bands-fc-16.wav done"); else disp("processed/ouchou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ouchou-1bands-fc-128.wav"); if (err == 0), disp("processed/ouchou-1bands-fc-128.wav done"); else disp("processed/ouchou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ouchou-2bands-fc-4.wav"); if (err == 0), disp("processed/ouchou-2bands-fc-4.wav done"); else disp("processed/ouchou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ouchou-2bands-fc-16.wav"); if (err == 0), disp("processed/ouchou-2bands-fc-16.wav done"); else disp("processed/ouchou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ouchou-2bands-fc-128.wav"); if (err == 0), disp("processed/ouchou-2bands-fc-128.wav done"); else disp("processed/ouchou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ouchou-4bands-fc-4.wav"); if (err == 0), disp("processed/ouchou-4bands-fc-4.wav done"); else disp("processed/ouchou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ouchou-4bands-fc-16.wav"); if (err == 0), disp("processed/ouchou-4bands-fc-16.wav done"); else disp("processed/ouchou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ouchou-4bands-fc-128.wav"); if (err == 0), disp("processed/ouchou-4bands-fc-128.wav done"); else disp("processed/ouchou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ouchou-6bands-fc-4.wav"); if (err == 0), disp("processed/ouchou-6bands-fc-4.wav done"); else disp("processed/ouchou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ouchou-6bands-fc-16.wav"); if (err == 0), disp("processed/ouchou-6bands-fc-16.wav done"); else disp("processed/ouchou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ouchou-6bands-fc-128.wav"); if (err == 0), disp("processed/ouchou-6bands-fc-128.wav done"); else disp("processed/ouchou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ouchou-8bands-fc-4.wav"); if (err == 0), disp("processed/ouchou-8bands-fc-4.wav done"); else disp("processed/ouchou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ouchou-8bands-fc-16.wav"); if (err == 0), disp("processed/ouchou-8bands-fc-16.wav done"); else disp("processed/ouchou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ouchou-8bands-fc-128.wav"); if (err == 0), disp("processed/ouchou-8bands-fc-128.wav done"); else disp("processed/ouchou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ouchou-12bands-fc-4.wav"); if (err == 0), disp("processed/ouchou-12bands-fc-4.wav done"); else disp("processed/ouchou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ouchou-12bands-fc-16.wav"); if (err == 0), disp("processed/ouchou-12bands-fc-16.wav done"); else disp("processed/ouchou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ouchou-12bands-fc-128.wav"); if (err == 0), disp("processed/ouchou-12bands-fc-128.wav done"); else disp("processed/ouchou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ouchou-16bands-fc-4.wav"); if (err == 0), disp("processed/ouchou-16bands-fc-4.wav done"); else disp("processed/ouchou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ouchou-16bands-fc-16.wav"); if (err == 0), disp("processed/ouchou-16bands-fc-16.wav done"); else disp("processed/ouchou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ouchou-16bands-fc-128.wav"); if (err == 0), disp("processed/ouchou-16bands-fc-128.wav done"); else disp("processed/ouchou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouchou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouchou-16bands-fc-128.wav"); end
[s,err] = stat("processed/ivi-1bands-fc-4.wav"); if (err == 0), disp("processed/ivi-1bands-fc-4.wav done"); else disp("processed/ivi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-1bands-fc-4.wav"); end
[s,err] = stat("processed/ivi-1bands-fc-16.wav"); if (err == 0), disp("processed/ivi-1bands-fc-16.wav done"); else disp("processed/ivi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-1bands-fc-16.wav"); end
[s,err] = stat("processed/ivi-1bands-fc-128.wav"); if (err == 0), disp("processed/ivi-1bands-fc-128.wav done"); else disp("processed/ivi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-1bands-fc-128.wav"); end
[s,err] = stat("processed/ivi-2bands-fc-4.wav"); if (err == 0), disp("processed/ivi-2bands-fc-4.wav done"); else disp("processed/ivi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-2bands-fc-4.wav"); end
[s,err] = stat("processed/ivi-2bands-fc-16.wav"); if (err == 0), disp("processed/ivi-2bands-fc-16.wav done"); else disp("processed/ivi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-2bands-fc-16.wav"); end
[s,err] = stat("processed/ivi-2bands-fc-128.wav"); if (err == 0), disp("processed/ivi-2bands-fc-128.wav done"); else disp("processed/ivi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-2bands-fc-128.wav"); end
[s,err] = stat("processed/ivi-4bands-fc-4.wav"); if (err == 0), disp("processed/ivi-4bands-fc-4.wav done"); else disp("processed/ivi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-4bands-fc-4.wav"); end
[s,err] = stat("processed/ivi-4bands-fc-16.wav"); if (err == 0), disp("processed/ivi-4bands-fc-16.wav done"); else disp("processed/ivi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-4bands-fc-16.wav"); end
[s,err] = stat("processed/ivi-4bands-fc-128.wav"); if (err == 0), disp("processed/ivi-4bands-fc-128.wav done"); else disp("processed/ivi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-4bands-fc-128.wav"); end
[s,err] = stat("processed/ivi-6bands-fc-4.wav"); if (err == 0), disp("processed/ivi-6bands-fc-4.wav done"); else disp("processed/ivi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-6bands-fc-4.wav"); end
[s,err] = stat("processed/ivi-6bands-fc-16.wav"); if (err == 0), disp("processed/ivi-6bands-fc-16.wav done"); else disp("processed/ivi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-6bands-fc-16.wav"); end
[s,err] = stat("processed/ivi-6bands-fc-128.wav"); if (err == 0), disp("processed/ivi-6bands-fc-128.wav done"); else disp("processed/ivi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-6bands-fc-128.wav"); end
[s,err] = stat("processed/ivi-8bands-fc-4.wav"); if (err == 0), disp("processed/ivi-8bands-fc-4.wav done"); else disp("processed/ivi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-8bands-fc-4.wav"); end
[s,err] = stat("processed/ivi-8bands-fc-16.wav"); if (err == 0), disp("processed/ivi-8bands-fc-16.wav done"); else disp("processed/ivi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-8bands-fc-16.wav"); end
[s,err] = stat("processed/ivi-8bands-fc-128.wav"); if (err == 0), disp("processed/ivi-8bands-fc-128.wav done"); else disp("processed/ivi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-8bands-fc-128.wav"); end
[s,err] = stat("processed/ivi-12bands-fc-4.wav"); if (err == 0), disp("processed/ivi-12bands-fc-4.wav done"); else disp("processed/ivi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-12bands-fc-4.wav"); end
[s,err] = stat("processed/ivi-12bands-fc-16.wav"); if (err == 0), disp("processed/ivi-12bands-fc-16.wav done"); else disp("processed/ivi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-12bands-fc-16.wav"); end
[s,err] = stat("processed/ivi-12bands-fc-128.wav"); if (err == 0), disp("processed/ivi-12bands-fc-128.wav done"); else disp("processed/ivi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-12bands-fc-128.wav"); end
[s,err] = stat("processed/ivi-16bands-fc-4.wav"); if (err == 0), disp("processed/ivi-16bands-fc-4.wav done"); else disp("processed/ivi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-16bands-fc-4.wav"); end
[s,err] = stat("processed/ivi-16bands-fc-16.wav"); if (err == 0), disp("processed/ivi-16bands-fc-16.wav done"); else disp("processed/ivi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-16bands-fc-16.wav"); end
[s,err] = stat("processed/ivi-16bands-fc-128.wav"); if (err == 0), disp("processed/ivi-16bands-fc-128.wav done"); else disp("processed/ivi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ivi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ivi-16bands-fc-128.wav"); end
[s,err] = stat("processed/ava-1bands-fc-4.wav"); if (err == 0), disp("processed/ava-1bands-fc-4.wav done"); else disp("processed/ava-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-1bands-fc-4.wav"); end
[s,err] = stat("processed/ava-1bands-fc-16.wav"); if (err == 0), disp("processed/ava-1bands-fc-16.wav done"); else disp("processed/ava-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-1bands-fc-16.wav"); end
[s,err] = stat("processed/ava-1bands-fc-128.wav"); if (err == 0), disp("processed/ava-1bands-fc-128.wav done"); else disp("processed/ava-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-1bands-fc-128.wav"); end
[s,err] = stat("processed/ava-2bands-fc-4.wav"); if (err == 0), disp("processed/ava-2bands-fc-4.wav done"); else disp("processed/ava-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-2bands-fc-4.wav"); end
[s,err] = stat("processed/ava-2bands-fc-16.wav"); if (err == 0), disp("processed/ava-2bands-fc-16.wav done"); else disp("processed/ava-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-2bands-fc-16.wav"); end
[s,err] = stat("processed/ava-2bands-fc-128.wav"); if (err == 0), disp("processed/ava-2bands-fc-128.wav done"); else disp("processed/ava-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-2bands-fc-128.wav"); end
[s,err] = stat("processed/ava-4bands-fc-4.wav"); if (err == 0), disp("processed/ava-4bands-fc-4.wav done"); else disp("processed/ava-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-4bands-fc-4.wav"); end
[s,err] = stat("processed/ava-4bands-fc-16.wav"); if (err == 0), disp("processed/ava-4bands-fc-16.wav done"); else disp("processed/ava-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-4bands-fc-16.wav"); end
[s,err] = stat("processed/ava-4bands-fc-128.wav"); if (err == 0), disp("processed/ava-4bands-fc-128.wav done"); else disp("processed/ava-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-4bands-fc-128.wav"); end
[s,err] = stat("processed/ava-6bands-fc-4.wav"); if (err == 0), disp("processed/ava-6bands-fc-4.wav done"); else disp("processed/ava-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-6bands-fc-4.wav"); end
[s,err] = stat("processed/ava-6bands-fc-16.wav"); if (err == 0), disp("processed/ava-6bands-fc-16.wav done"); else disp("processed/ava-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-6bands-fc-16.wav"); end
[s,err] = stat("processed/ava-6bands-fc-128.wav"); if (err == 0), disp("processed/ava-6bands-fc-128.wav done"); else disp("processed/ava-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-6bands-fc-128.wav"); end
[s,err] = stat("processed/ava-8bands-fc-4.wav"); if (err == 0), disp("processed/ava-8bands-fc-4.wav done"); else disp("processed/ava-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-8bands-fc-4.wav"); end
[s,err] = stat("processed/ava-8bands-fc-16.wav"); if (err == 0), disp("processed/ava-8bands-fc-16.wav done"); else disp("processed/ava-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-8bands-fc-16.wav"); end
[s,err] = stat("processed/ava-8bands-fc-128.wav"); if (err == 0), disp("processed/ava-8bands-fc-128.wav done"); else disp("processed/ava-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-8bands-fc-128.wav"); end
[s,err] = stat("processed/ava-12bands-fc-4.wav"); if (err == 0), disp("processed/ava-12bands-fc-4.wav done"); else disp("processed/ava-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-12bands-fc-4.wav"); end
[s,err] = stat("processed/ava-12bands-fc-16.wav"); if (err == 0), disp("processed/ava-12bands-fc-16.wav done"); else disp("processed/ava-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-12bands-fc-16.wav"); end
[s,err] = stat("processed/ava-12bands-fc-128.wav"); if (err == 0), disp("processed/ava-12bands-fc-128.wav done"); else disp("processed/ava-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-12bands-fc-128.wav"); end
[s,err] = stat("processed/ava-16bands-fc-4.wav"); if (err == 0), disp("processed/ava-16bands-fc-4.wav done"); else disp("processed/ava-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-16bands-fc-4.wav"); end
[s,err] = stat("processed/ava-16bands-fc-16.wav"); if (err == 0), disp("processed/ava-16bands-fc-16.wav done"); else disp("processed/ava-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-16bands-fc-16.wav"); end
[s,err] = stat("processed/ava-16bands-fc-128.wav"); if (err == 0), disp("processed/ava-16bands-fc-128.wav done"); else disp("processed/ava-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ava.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ava-16bands-fc-128.wav"); end
[s,err] = stat("processed/ouvou-1bands-fc-4.wav"); if (err == 0), disp("processed/ouvou-1bands-fc-4.wav done"); else disp("processed/ouvou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ouvou-1bands-fc-16.wav"); if (err == 0), disp("processed/ouvou-1bands-fc-16.wav done"); else disp("processed/ouvou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ouvou-1bands-fc-128.wav"); if (err == 0), disp("processed/ouvou-1bands-fc-128.wav done"); else disp("processed/ouvou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ouvou-2bands-fc-4.wav"); if (err == 0), disp("processed/ouvou-2bands-fc-4.wav done"); else disp("processed/ouvou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ouvou-2bands-fc-16.wav"); if (err == 0), disp("processed/ouvou-2bands-fc-16.wav done"); else disp("processed/ouvou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ouvou-2bands-fc-128.wav"); if (err == 0), disp("processed/ouvou-2bands-fc-128.wav done"); else disp("processed/ouvou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ouvou-4bands-fc-4.wav"); if (err == 0), disp("processed/ouvou-4bands-fc-4.wav done"); else disp("processed/ouvou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ouvou-4bands-fc-16.wav"); if (err == 0), disp("processed/ouvou-4bands-fc-16.wav done"); else disp("processed/ouvou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ouvou-4bands-fc-128.wav"); if (err == 0), disp("processed/ouvou-4bands-fc-128.wav done"); else disp("processed/ouvou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ouvou-6bands-fc-4.wav"); if (err == 0), disp("processed/ouvou-6bands-fc-4.wav done"); else disp("processed/ouvou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ouvou-6bands-fc-16.wav"); if (err == 0), disp("processed/ouvou-6bands-fc-16.wav done"); else disp("processed/ouvou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ouvou-6bands-fc-128.wav"); if (err == 0), disp("processed/ouvou-6bands-fc-128.wav done"); else disp("processed/ouvou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ouvou-8bands-fc-4.wav"); if (err == 0), disp("processed/ouvou-8bands-fc-4.wav done"); else disp("processed/ouvou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ouvou-8bands-fc-16.wav"); if (err == 0), disp("processed/ouvou-8bands-fc-16.wav done"); else disp("processed/ouvou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ouvou-8bands-fc-128.wav"); if (err == 0), disp("processed/ouvou-8bands-fc-128.wav done"); else disp("processed/ouvou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ouvou-12bands-fc-4.wav"); if (err == 0), disp("processed/ouvou-12bands-fc-4.wav done"); else disp("processed/ouvou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ouvou-12bands-fc-16.wav"); if (err == 0), disp("processed/ouvou-12bands-fc-16.wav done"); else disp("processed/ouvou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ouvou-12bands-fc-128.wav"); if (err == 0), disp("processed/ouvou-12bands-fc-128.wav done"); else disp("processed/ouvou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ouvou-16bands-fc-4.wav"); if (err == 0), disp("processed/ouvou-16bands-fc-4.wav done"); else disp("processed/ouvou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ouvou-16bands-fc-16.wav"); if (err == 0), disp("processed/ouvou-16bands-fc-16.wav done"); else disp("processed/ouvou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ouvou-16bands-fc-128.wav"); if (err == 0), disp("processed/ouvou-16bands-fc-128.wav done"); else disp("processed/ouvou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouvou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouvou-16bands-fc-128.wav"); end
[s,err] = stat("processed/izi-1bands-fc-4.wav"); if (err == 0), disp("processed/izi-1bands-fc-4.wav done"); else disp("processed/izi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-1bands-fc-4.wav"); end
[s,err] = stat("processed/izi-1bands-fc-16.wav"); if (err == 0), disp("processed/izi-1bands-fc-16.wav done"); else disp("processed/izi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-1bands-fc-16.wav"); end
[s,err] = stat("processed/izi-1bands-fc-128.wav"); if (err == 0), disp("processed/izi-1bands-fc-128.wav done"); else disp("processed/izi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-1bands-fc-128.wav"); end
[s,err] = stat("processed/izi-2bands-fc-4.wav"); if (err == 0), disp("processed/izi-2bands-fc-4.wav done"); else disp("processed/izi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-2bands-fc-4.wav"); end
[s,err] = stat("processed/izi-2bands-fc-16.wav"); if (err == 0), disp("processed/izi-2bands-fc-16.wav done"); else disp("processed/izi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-2bands-fc-16.wav"); end
[s,err] = stat("processed/izi-2bands-fc-128.wav"); if (err == 0), disp("processed/izi-2bands-fc-128.wav done"); else disp("processed/izi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-2bands-fc-128.wav"); end
[s,err] = stat("processed/izi-4bands-fc-4.wav"); if (err == 0), disp("processed/izi-4bands-fc-4.wav done"); else disp("processed/izi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-4bands-fc-4.wav"); end
[s,err] = stat("processed/izi-4bands-fc-16.wav"); if (err == 0), disp("processed/izi-4bands-fc-16.wav done"); else disp("processed/izi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-4bands-fc-16.wav"); end
[s,err] = stat("processed/izi-4bands-fc-128.wav"); if (err == 0), disp("processed/izi-4bands-fc-128.wav done"); else disp("processed/izi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-4bands-fc-128.wav"); end
[s,err] = stat("processed/izi-6bands-fc-4.wav"); if (err == 0), disp("processed/izi-6bands-fc-4.wav done"); else disp("processed/izi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-6bands-fc-4.wav"); end
[s,err] = stat("processed/izi-6bands-fc-16.wav"); if (err == 0), disp("processed/izi-6bands-fc-16.wav done"); else disp("processed/izi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-6bands-fc-16.wav"); end
[s,err] = stat("processed/izi-6bands-fc-128.wav"); if (err == 0), disp("processed/izi-6bands-fc-128.wav done"); else disp("processed/izi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-6bands-fc-128.wav"); end
[s,err] = stat("processed/izi-8bands-fc-4.wav"); if (err == 0), disp("processed/izi-8bands-fc-4.wav done"); else disp("processed/izi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-8bands-fc-4.wav"); end
[s,err] = stat("processed/izi-8bands-fc-16.wav"); if (err == 0), disp("processed/izi-8bands-fc-16.wav done"); else disp("processed/izi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-8bands-fc-16.wav"); end
[s,err] = stat("processed/izi-8bands-fc-128.wav"); if (err == 0), disp("processed/izi-8bands-fc-128.wav done"); else disp("processed/izi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-8bands-fc-128.wav"); end
[s,err] = stat("processed/izi-12bands-fc-4.wav"); if (err == 0), disp("processed/izi-12bands-fc-4.wav done"); else disp("processed/izi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-12bands-fc-4.wav"); end
[s,err] = stat("processed/izi-12bands-fc-16.wav"); if (err == 0), disp("processed/izi-12bands-fc-16.wav done"); else disp("processed/izi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-12bands-fc-16.wav"); end
[s,err] = stat("processed/izi-12bands-fc-128.wav"); if (err == 0), disp("processed/izi-12bands-fc-128.wav done"); else disp("processed/izi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-12bands-fc-128.wav"); end
[s,err] = stat("processed/izi-16bands-fc-4.wav"); if (err == 0), disp("processed/izi-16bands-fc-4.wav done"); else disp("processed/izi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-16bands-fc-4.wav"); end
[s,err] = stat("processed/izi-16bands-fc-16.wav"); if (err == 0), disp("processed/izi-16bands-fc-16.wav done"); else disp("processed/izi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-16bands-fc-16.wav"); end
[s,err] = stat("processed/izi-16bands-fc-128.wav"); if (err == 0), disp("processed/izi-16bands-fc-128.wav done"); else disp("processed/izi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/izi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/izi-16bands-fc-128.wav"); end
[s,err] = stat("processed/aza-1bands-fc-4.wav"); if (err == 0), disp("processed/aza-1bands-fc-4.wav done"); else disp("processed/aza-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-1bands-fc-4.wav"); end
[s,err] = stat("processed/aza-1bands-fc-16.wav"); if (err == 0), disp("processed/aza-1bands-fc-16.wav done"); else disp("processed/aza-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-1bands-fc-16.wav"); end
[s,err] = stat("processed/aza-1bands-fc-128.wav"); if (err == 0), disp("processed/aza-1bands-fc-128.wav done"); else disp("processed/aza-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-1bands-fc-128.wav"); end
[s,err] = stat("processed/aza-2bands-fc-4.wav"); if (err == 0), disp("processed/aza-2bands-fc-4.wav done"); else disp("processed/aza-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-2bands-fc-4.wav"); end
[s,err] = stat("processed/aza-2bands-fc-16.wav"); if (err == 0), disp("processed/aza-2bands-fc-16.wav done"); else disp("processed/aza-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-2bands-fc-16.wav"); end
[s,err] = stat("processed/aza-2bands-fc-128.wav"); if (err == 0), disp("processed/aza-2bands-fc-128.wav done"); else disp("processed/aza-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-2bands-fc-128.wav"); end
[s,err] = stat("processed/aza-4bands-fc-4.wav"); if (err == 0), disp("processed/aza-4bands-fc-4.wav done"); else disp("processed/aza-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-4bands-fc-4.wav"); end
[s,err] = stat("processed/aza-4bands-fc-16.wav"); if (err == 0), disp("processed/aza-4bands-fc-16.wav done"); else disp("processed/aza-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-4bands-fc-16.wav"); end
[s,err] = stat("processed/aza-4bands-fc-128.wav"); if (err == 0), disp("processed/aza-4bands-fc-128.wav done"); else disp("processed/aza-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-4bands-fc-128.wav"); end
[s,err] = stat("processed/aza-6bands-fc-4.wav"); if (err == 0), disp("processed/aza-6bands-fc-4.wav done"); else disp("processed/aza-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-6bands-fc-4.wav"); end
[s,err] = stat("processed/aza-6bands-fc-16.wav"); if (err == 0), disp("processed/aza-6bands-fc-16.wav done"); else disp("processed/aza-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-6bands-fc-16.wav"); end
[s,err] = stat("processed/aza-6bands-fc-128.wav"); if (err == 0), disp("processed/aza-6bands-fc-128.wav done"); else disp("processed/aza-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-6bands-fc-128.wav"); end
[s,err] = stat("processed/aza-8bands-fc-4.wav"); if (err == 0), disp("processed/aza-8bands-fc-4.wav done"); else disp("processed/aza-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-8bands-fc-4.wav"); end
[s,err] = stat("processed/aza-8bands-fc-16.wav"); if (err == 0), disp("processed/aza-8bands-fc-16.wav done"); else disp("processed/aza-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-8bands-fc-16.wav"); end
[s,err] = stat("processed/aza-8bands-fc-128.wav"); if (err == 0), disp("processed/aza-8bands-fc-128.wav done"); else disp("processed/aza-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-8bands-fc-128.wav"); end
[s,err] = stat("processed/aza-12bands-fc-4.wav"); if (err == 0), disp("processed/aza-12bands-fc-4.wav done"); else disp("processed/aza-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-12bands-fc-4.wav"); end
[s,err] = stat("processed/aza-12bands-fc-16.wav"); if (err == 0), disp("processed/aza-12bands-fc-16.wav done"); else disp("processed/aza-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-12bands-fc-16.wav"); end
[s,err] = stat("processed/aza-12bands-fc-128.wav"); if (err == 0), disp("processed/aza-12bands-fc-128.wav done"); else disp("processed/aza-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-12bands-fc-128.wav"); end
[s,err] = stat("processed/aza-16bands-fc-4.wav"); if (err == 0), disp("processed/aza-16bands-fc-4.wav done"); else disp("processed/aza-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-16bands-fc-4.wav"); end
[s,err] = stat("processed/aza-16bands-fc-16.wav"); if (err == 0), disp("processed/aza-16bands-fc-16.wav done"); else disp("processed/aza-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-16bands-fc-16.wav"); end
[s,err] = stat("processed/aza-16bands-fc-128.wav"); if (err == 0), disp("processed/aza-16bands-fc-128.wav done"); else disp("processed/aza-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aza.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aza-16bands-fc-128.wav"); end
[s,err] = stat("processed/ouzou-1bands-fc-4.wav"); if (err == 0), disp("processed/ouzou-1bands-fc-4.wav done"); else disp("processed/ouzou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ouzou-1bands-fc-16.wav"); if (err == 0), disp("processed/ouzou-1bands-fc-16.wav done"); else disp("processed/ouzou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ouzou-1bands-fc-128.wav"); if (err == 0), disp("processed/ouzou-1bands-fc-128.wav done"); else disp("processed/ouzou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ouzou-2bands-fc-4.wav"); if (err == 0), disp("processed/ouzou-2bands-fc-4.wav done"); else disp("processed/ouzou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ouzou-2bands-fc-16.wav"); if (err == 0), disp("processed/ouzou-2bands-fc-16.wav done"); else disp("processed/ouzou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ouzou-2bands-fc-128.wav"); if (err == 0), disp("processed/ouzou-2bands-fc-128.wav done"); else disp("processed/ouzou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ouzou-4bands-fc-4.wav"); if (err == 0), disp("processed/ouzou-4bands-fc-4.wav done"); else disp("processed/ouzou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ouzou-4bands-fc-16.wav"); if (err == 0), disp("processed/ouzou-4bands-fc-16.wav done"); else disp("processed/ouzou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ouzou-4bands-fc-128.wav"); if (err == 0), disp("processed/ouzou-4bands-fc-128.wav done"); else disp("processed/ouzou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ouzou-6bands-fc-4.wav"); if (err == 0), disp("processed/ouzou-6bands-fc-4.wav done"); else disp("processed/ouzou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ouzou-6bands-fc-16.wav"); if (err == 0), disp("processed/ouzou-6bands-fc-16.wav done"); else disp("processed/ouzou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ouzou-6bands-fc-128.wav"); if (err == 0), disp("processed/ouzou-6bands-fc-128.wav done"); else disp("processed/ouzou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ouzou-8bands-fc-4.wav"); if (err == 0), disp("processed/ouzou-8bands-fc-4.wav done"); else disp("processed/ouzou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ouzou-8bands-fc-16.wav"); if (err == 0), disp("processed/ouzou-8bands-fc-16.wav done"); else disp("processed/ouzou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ouzou-8bands-fc-128.wav"); if (err == 0), disp("processed/ouzou-8bands-fc-128.wav done"); else disp("processed/ouzou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ouzou-12bands-fc-4.wav"); if (err == 0), disp("processed/ouzou-12bands-fc-4.wav done"); else disp("processed/ouzou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ouzou-12bands-fc-16.wav"); if (err == 0), disp("processed/ouzou-12bands-fc-16.wav done"); else disp("processed/ouzou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ouzou-12bands-fc-128.wav"); if (err == 0), disp("processed/ouzou-12bands-fc-128.wav done"); else disp("processed/ouzou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ouzou-16bands-fc-4.wav"); if (err == 0), disp("processed/ouzou-16bands-fc-4.wav done"); else disp("processed/ouzou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ouzou-16bands-fc-16.wav"); if (err == 0), disp("processed/ouzou-16bands-fc-16.wav done"); else disp("processed/ouzou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ouzou-16bands-fc-128.wav"); if (err == 0), disp("processed/ouzou-16bands-fc-128.wav done"); else disp("processed/ouzou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouzou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouzou-16bands-fc-128.wav"); end
[s,err] = stat("processed/iji-1bands-fc-4.wav"); if (err == 0), disp("processed/iji-1bands-fc-4.wav done"); else disp("processed/iji-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-1bands-fc-4.wav"); end
[s,err] = stat("processed/iji-1bands-fc-16.wav"); if (err == 0), disp("processed/iji-1bands-fc-16.wav done"); else disp("processed/iji-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-1bands-fc-16.wav"); end
[s,err] = stat("processed/iji-1bands-fc-128.wav"); if (err == 0), disp("processed/iji-1bands-fc-128.wav done"); else disp("processed/iji-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-1bands-fc-128.wav"); end
[s,err] = stat("processed/iji-2bands-fc-4.wav"); if (err == 0), disp("processed/iji-2bands-fc-4.wav done"); else disp("processed/iji-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-2bands-fc-4.wav"); end
[s,err] = stat("processed/iji-2bands-fc-16.wav"); if (err == 0), disp("processed/iji-2bands-fc-16.wav done"); else disp("processed/iji-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-2bands-fc-16.wav"); end
[s,err] = stat("processed/iji-2bands-fc-128.wav"); if (err == 0), disp("processed/iji-2bands-fc-128.wav done"); else disp("processed/iji-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-2bands-fc-128.wav"); end
[s,err] = stat("processed/iji-4bands-fc-4.wav"); if (err == 0), disp("processed/iji-4bands-fc-4.wav done"); else disp("processed/iji-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-4bands-fc-4.wav"); end
[s,err] = stat("processed/iji-4bands-fc-16.wav"); if (err == 0), disp("processed/iji-4bands-fc-16.wav done"); else disp("processed/iji-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-4bands-fc-16.wav"); end
[s,err] = stat("processed/iji-4bands-fc-128.wav"); if (err == 0), disp("processed/iji-4bands-fc-128.wav done"); else disp("processed/iji-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-4bands-fc-128.wav"); end
[s,err] = stat("processed/iji-6bands-fc-4.wav"); if (err == 0), disp("processed/iji-6bands-fc-4.wav done"); else disp("processed/iji-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-6bands-fc-4.wav"); end
[s,err] = stat("processed/iji-6bands-fc-16.wav"); if (err == 0), disp("processed/iji-6bands-fc-16.wav done"); else disp("processed/iji-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-6bands-fc-16.wav"); end
[s,err] = stat("processed/iji-6bands-fc-128.wav"); if (err == 0), disp("processed/iji-6bands-fc-128.wav done"); else disp("processed/iji-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-6bands-fc-128.wav"); end
[s,err] = stat("processed/iji-8bands-fc-4.wav"); if (err == 0), disp("processed/iji-8bands-fc-4.wav done"); else disp("processed/iji-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-8bands-fc-4.wav"); end
[s,err] = stat("processed/iji-8bands-fc-16.wav"); if (err == 0), disp("processed/iji-8bands-fc-16.wav done"); else disp("processed/iji-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-8bands-fc-16.wav"); end
[s,err] = stat("processed/iji-8bands-fc-128.wav"); if (err == 0), disp("processed/iji-8bands-fc-128.wav done"); else disp("processed/iji-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-8bands-fc-128.wav"); end
[s,err] = stat("processed/iji-12bands-fc-4.wav"); if (err == 0), disp("processed/iji-12bands-fc-4.wav done"); else disp("processed/iji-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-12bands-fc-4.wav"); end
[s,err] = stat("processed/iji-12bands-fc-16.wav"); if (err == 0), disp("processed/iji-12bands-fc-16.wav done"); else disp("processed/iji-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-12bands-fc-16.wav"); end
[s,err] = stat("processed/iji-12bands-fc-128.wav"); if (err == 0), disp("processed/iji-12bands-fc-128.wav done"); else disp("processed/iji-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-12bands-fc-128.wav"); end
[s,err] = stat("processed/iji-16bands-fc-4.wav"); if (err == 0), disp("processed/iji-16bands-fc-4.wav done"); else disp("processed/iji-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-16bands-fc-4.wav"); end
[s,err] = stat("processed/iji-16bands-fc-16.wav"); if (err == 0), disp("processed/iji-16bands-fc-16.wav done"); else disp("processed/iji-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-16bands-fc-16.wav"); end
[s,err] = stat("processed/iji-16bands-fc-128.wav"); if (err == 0), disp("processed/iji-16bands-fc-128.wav done"); else disp("processed/iji-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iji.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iji-16bands-fc-128.wav"); end
[s,err] = stat("processed/aja-1bands-fc-4.wav"); if (err == 0), disp("processed/aja-1bands-fc-4.wav done"); else disp("processed/aja-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-1bands-fc-4.wav"); end
[s,err] = stat("processed/aja-1bands-fc-16.wav"); if (err == 0), disp("processed/aja-1bands-fc-16.wav done"); else disp("processed/aja-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-1bands-fc-16.wav"); end
[s,err] = stat("processed/aja-1bands-fc-128.wav"); if (err == 0), disp("processed/aja-1bands-fc-128.wav done"); else disp("processed/aja-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-1bands-fc-128.wav"); end
[s,err] = stat("processed/aja-2bands-fc-4.wav"); if (err == 0), disp("processed/aja-2bands-fc-4.wav done"); else disp("processed/aja-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-2bands-fc-4.wav"); end
[s,err] = stat("processed/aja-2bands-fc-16.wav"); if (err == 0), disp("processed/aja-2bands-fc-16.wav done"); else disp("processed/aja-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-2bands-fc-16.wav"); end
[s,err] = stat("processed/aja-2bands-fc-128.wav"); if (err == 0), disp("processed/aja-2bands-fc-128.wav done"); else disp("processed/aja-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-2bands-fc-128.wav"); end
[s,err] = stat("processed/aja-4bands-fc-4.wav"); if (err == 0), disp("processed/aja-4bands-fc-4.wav done"); else disp("processed/aja-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-4bands-fc-4.wav"); end
[s,err] = stat("processed/aja-4bands-fc-16.wav"); if (err == 0), disp("processed/aja-4bands-fc-16.wav done"); else disp("processed/aja-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-4bands-fc-16.wav"); end
[s,err] = stat("processed/aja-4bands-fc-128.wav"); if (err == 0), disp("processed/aja-4bands-fc-128.wav done"); else disp("processed/aja-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-4bands-fc-128.wav"); end
[s,err] = stat("processed/aja-6bands-fc-4.wav"); if (err == 0), disp("processed/aja-6bands-fc-4.wav done"); else disp("processed/aja-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-6bands-fc-4.wav"); end
[s,err] = stat("processed/aja-6bands-fc-16.wav"); if (err == 0), disp("processed/aja-6bands-fc-16.wav done"); else disp("processed/aja-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-6bands-fc-16.wav"); end
[s,err] = stat("processed/aja-6bands-fc-128.wav"); if (err == 0), disp("processed/aja-6bands-fc-128.wav done"); else disp("processed/aja-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-6bands-fc-128.wav"); end
[s,err] = stat("processed/aja-8bands-fc-4.wav"); if (err == 0), disp("processed/aja-8bands-fc-4.wav done"); else disp("processed/aja-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-8bands-fc-4.wav"); end
[s,err] = stat("processed/aja-8bands-fc-16.wav"); if (err == 0), disp("processed/aja-8bands-fc-16.wav done"); else disp("processed/aja-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-8bands-fc-16.wav"); end
[s,err] = stat("processed/aja-8bands-fc-128.wav"); if (err == 0), disp("processed/aja-8bands-fc-128.wav done"); else disp("processed/aja-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-8bands-fc-128.wav"); end
[s,err] = stat("processed/aja-12bands-fc-4.wav"); if (err == 0), disp("processed/aja-12bands-fc-4.wav done"); else disp("processed/aja-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-12bands-fc-4.wav"); end
[s,err] = stat("processed/aja-12bands-fc-16.wav"); if (err == 0), disp("processed/aja-12bands-fc-16.wav done"); else disp("processed/aja-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-12bands-fc-16.wav"); end
[s,err] = stat("processed/aja-12bands-fc-128.wav"); if (err == 0), disp("processed/aja-12bands-fc-128.wav done"); else disp("processed/aja-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-12bands-fc-128.wav"); end
[s,err] = stat("processed/aja-16bands-fc-4.wav"); if (err == 0), disp("processed/aja-16bands-fc-4.wav done"); else disp("processed/aja-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-16bands-fc-4.wav"); end
[s,err] = stat("processed/aja-16bands-fc-16.wav"); if (err == 0), disp("processed/aja-16bands-fc-16.wav done"); else disp("processed/aja-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-16bands-fc-16.wav"); end
[s,err] = stat("processed/aja-16bands-fc-128.wav"); if (err == 0), disp("processed/aja-16bands-fc-128.wav done"); else disp("processed/aja-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aja.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aja-16bands-fc-128.wav"); end
[s,err] = stat("processed/oujou-1bands-fc-4.wav"); if (err == 0), disp("processed/oujou-1bands-fc-4.wav done"); else disp("processed/oujou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-1bands-fc-4.wav"); end
[s,err] = stat("processed/oujou-1bands-fc-16.wav"); if (err == 0), disp("processed/oujou-1bands-fc-16.wav done"); else disp("processed/oujou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-1bands-fc-16.wav"); end
[s,err] = stat("processed/oujou-1bands-fc-128.wav"); if (err == 0), disp("processed/oujou-1bands-fc-128.wav done"); else disp("processed/oujou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-1bands-fc-128.wav"); end
[s,err] = stat("processed/oujou-2bands-fc-4.wav"); if (err == 0), disp("processed/oujou-2bands-fc-4.wav done"); else disp("processed/oujou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-2bands-fc-4.wav"); end
[s,err] = stat("processed/oujou-2bands-fc-16.wav"); if (err == 0), disp("processed/oujou-2bands-fc-16.wav done"); else disp("processed/oujou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-2bands-fc-16.wav"); end
[s,err] = stat("processed/oujou-2bands-fc-128.wav"); if (err == 0), disp("processed/oujou-2bands-fc-128.wav done"); else disp("processed/oujou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-2bands-fc-128.wav"); end
[s,err] = stat("processed/oujou-4bands-fc-4.wav"); if (err == 0), disp("processed/oujou-4bands-fc-4.wav done"); else disp("processed/oujou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-4bands-fc-4.wav"); end
[s,err] = stat("processed/oujou-4bands-fc-16.wav"); if (err == 0), disp("processed/oujou-4bands-fc-16.wav done"); else disp("processed/oujou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-4bands-fc-16.wav"); end
[s,err] = stat("processed/oujou-4bands-fc-128.wav"); if (err == 0), disp("processed/oujou-4bands-fc-128.wav done"); else disp("processed/oujou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-4bands-fc-128.wav"); end
[s,err] = stat("processed/oujou-6bands-fc-4.wav"); if (err == 0), disp("processed/oujou-6bands-fc-4.wav done"); else disp("processed/oujou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-6bands-fc-4.wav"); end
[s,err] = stat("processed/oujou-6bands-fc-16.wav"); if (err == 0), disp("processed/oujou-6bands-fc-16.wav done"); else disp("processed/oujou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-6bands-fc-16.wav"); end
[s,err] = stat("processed/oujou-6bands-fc-128.wav"); if (err == 0), disp("processed/oujou-6bands-fc-128.wav done"); else disp("processed/oujou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-6bands-fc-128.wav"); end
[s,err] = stat("processed/oujou-8bands-fc-4.wav"); if (err == 0), disp("processed/oujou-8bands-fc-4.wav done"); else disp("processed/oujou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-8bands-fc-4.wav"); end
[s,err] = stat("processed/oujou-8bands-fc-16.wav"); if (err == 0), disp("processed/oujou-8bands-fc-16.wav done"); else disp("processed/oujou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-8bands-fc-16.wav"); end
[s,err] = stat("processed/oujou-8bands-fc-128.wav"); if (err == 0), disp("processed/oujou-8bands-fc-128.wav done"); else disp("processed/oujou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-8bands-fc-128.wav"); end
[s,err] = stat("processed/oujou-12bands-fc-4.wav"); if (err == 0), disp("processed/oujou-12bands-fc-4.wav done"); else disp("processed/oujou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-12bands-fc-4.wav"); end
[s,err] = stat("processed/oujou-12bands-fc-16.wav"); if (err == 0), disp("processed/oujou-12bands-fc-16.wav done"); else disp("processed/oujou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-12bands-fc-16.wav"); end
[s,err] = stat("processed/oujou-12bands-fc-128.wav"); if (err == 0), disp("processed/oujou-12bands-fc-128.wav done"); else disp("processed/oujou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-12bands-fc-128.wav"); end
[s,err] = stat("processed/oujou-16bands-fc-4.wav"); if (err == 0), disp("processed/oujou-16bands-fc-4.wav done"); else disp("processed/oujou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-16bands-fc-4.wav"); end
[s,err] = stat("processed/oujou-16bands-fc-16.wav"); if (err == 0), disp("processed/oujou-16bands-fc-16.wav done"); else disp("processed/oujou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-16bands-fc-16.wav"); end
[s,err] = stat("processed/oujou-16bands-fc-128.wav"); if (err == 0), disp("processed/oujou-16bands-fc-128.wav done"); else disp("processed/oujou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oujou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oujou-16bands-fc-128.wav"); end
[s,err] = stat("processed/iri-1bands-fc-4.wav"); if (err == 0), disp("processed/iri-1bands-fc-4.wav done"); else disp("processed/iri-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-1bands-fc-4.wav"); end
[s,err] = stat("processed/iri-1bands-fc-16.wav"); if (err == 0), disp("processed/iri-1bands-fc-16.wav done"); else disp("processed/iri-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-1bands-fc-16.wav"); end
[s,err] = stat("processed/iri-1bands-fc-128.wav"); if (err == 0), disp("processed/iri-1bands-fc-128.wav done"); else disp("processed/iri-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-1bands-fc-128.wav"); end
[s,err] = stat("processed/iri-2bands-fc-4.wav"); if (err == 0), disp("processed/iri-2bands-fc-4.wav done"); else disp("processed/iri-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-2bands-fc-4.wav"); end
[s,err] = stat("processed/iri-2bands-fc-16.wav"); if (err == 0), disp("processed/iri-2bands-fc-16.wav done"); else disp("processed/iri-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-2bands-fc-16.wav"); end
[s,err] = stat("processed/iri-2bands-fc-128.wav"); if (err == 0), disp("processed/iri-2bands-fc-128.wav done"); else disp("processed/iri-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-2bands-fc-128.wav"); end
[s,err] = stat("processed/iri-4bands-fc-4.wav"); if (err == 0), disp("processed/iri-4bands-fc-4.wav done"); else disp("processed/iri-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-4bands-fc-4.wav"); end
[s,err] = stat("processed/iri-4bands-fc-16.wav"); if (err == 0), disp("processed/iri-4bands-fc-16.wav done"); else disp("processed/iri-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-4bands-fc-16.wav"); end
[s,err] = stat("processed/iri-4bands-fc-128.wav"); if (err == 0), disp("processed/iri-4bands-fc-128.wav done"); else disp("processed/iri-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-4bands-fc-128.wav"); end
[s,err] = stat("processed/iri-6bands-fc-4.wav"); if (err == 0), disp("processed/iri-6bands-fc-4.wav done"); else disp("processed/iri-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-6bands-fc-4.wav"); end
[s,err] = stat("processed/iri-6bands-fc-16.wav"); if (err == 0), disp("processed/iri-6bands-fc-16.wav done"); else disp("processed/iri-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-6bands-fc-16.wav"); end
[s,err] = stat("processed/iri-6bands-fc-128.wav"); if (err == 0), disp("processed/iri-6bands-fc-128.wav done"); else disp("processed/iri-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-6bands-fc-128.wav"); end
[s,err] = stat("processed/iri-8bands-fc-4.wav"); if (err == 0), disp("processed/iri-8bands-fc-4.wav done"); else disp("processed/iri-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-8bands-fc-4.wav"); end
[s,err] = stat("processed/iri-8bands-fc-16.wav"); if (err == 0), disp("processed/iri-8bands-fc-16.wav done"); else disp("processed/iri-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-8bands-fc-16.wav"); end
[s,err] = stat("processed/iri-8bands-fc-128.wav"); if (err == 0), disp("processed/iri-8bands-fc-128.wav done"); else disp("processed/iri-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-8bands-fc-128.wav"); end
[s,err] = stat("processed/iri-12bands-fc-4.wav"); if (err == 0), disp("processed/iri-12bands-fc-4.wav done"); else disp("processed/iri-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-12bands-fc-4.wav"); end
[s,err] = stat("processed/iri-12bands-fc-16.wav"); if (err == 0), disp("processed/iri-12bands-fc-16.wav done"); else disp("processed/iri-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-12bands-fc-16.wav"); end
[s,err] = stat("processed/iri-12bands-fc-128.wav"); if (err == 0), disp("processed/iri-12bands-fc-128.wav done"); else disp("processed/iri-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-12bands-fc-128.wav"); end
[s,err] = stat("processed/iri-16bands-fc-4.wav"); if (err == 0), disp("processed/iri-16bands-fc-4.wav done"); else disp("processed/iri-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-16bands-fc-4.wav"); end
[s,err] = stat("processed/iri-16bands-fc-16.wav"); if (err == 0), disp("processed/iri-16bands-fc-16.wav done"); else disp("processed/iri-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-16bands-fc-16.wav"); end
[s,err] = stat("processed/iri-16bands-fc-128.wav"); if (err == 0), disp("processed/iri-16bands-fc-128.wav done"); else disp("processed/iri-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iri.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iri-16bands-fc-128.wav"); end
[s,err] = stat("processed/ara-1bands-fc-4.wav"); if (err == 0), disp("processed/ara-1bands-fc-4.wav done"); else disp("processed/ara-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-1bands-fc-4.wav"); end
[s,err] = stat("processed/ara-1bands-fc-16.wav"); if (err == 0), disp("processed/ara-1bands-fc-16.wav done"); else disp("processed/ara-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-1bands-fc-16.wav"); end
[s,err] = stat("processed/ara-1bands-fc-128.wav"); if (err == 0), disp("processed/ara-1bands-fc-128.wav done"); else disp("processed/ara-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-1bands-fc-128.wav"); end
[s,err] = stat("processed/ara-2bands-fc-4.wav"); if (err == 0), disp("processed/ara-2bands-fc-4.wav done"); else disp("processed/ara-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-2bands-fc-4.wav"); end
[s,err] = stat("processed/ara-2bands-fc-16.wav"); if (err == 0), disp("processed/ara-2bands-fc-16.wav done"); else disp("processed/ara-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-2bands-fc-16.wav"); end
[s,err] = stat("processed/ara-2bands-fc-128.wav"); if (err == 0), disp("processed/ara-2bands-fc-128.wav done"); else disp("processed/ara-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-2bands-fc-128.wav"); end
[s,err] = stat("processed/ara-4bands-fc-4.wav"); if (err == 0), disp("processed/ara-4bands-fc-4.wav done"); else disp("processed/ara-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-4bands-fc-4.wav"); end
[s,err] = stat("processed/ara-4bands-fc-16.wav"); if (err == 0), disp("processed/ara-4bands-fc-16.wav done"); else disp("processed/ara-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-4bands-fc-16.wav"); end
[s,err] = stat("processed/ara-4bands-fc-128.wav"); if (err == 0), disp("processed/ara-4bands-fc-128.wav done"); else disp("processed/ara-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-4bands-fc-128.wav"); end
[s,err] = stat("processed/ara-6bands-fc-4.wav"); if (err == 0), disp("processed/ara-6bands-fc-4.wav done"); else disp("processed/ara-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-6bands-fc-4.wav"); end
[s,err] = stat("processed/ara-6bands-fc-16.wav"); if (err == 0), disp("processed/ara-6bands-fc-16.wav done"); else disp("processed/ara-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-6bands-fc-16.wav"); end
[s,err] = stat("processed/ara-6bands-fc-128.wav"); if (err == 0), disp("processed/ara-6bands-fc-128.wav done"); else disp("processed/ara-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-6bands-fc-128.wav"); end
[s,err] = stat("processed/ara-8bands-fc-4.wav"); if (err == 0), disp("processed/ara-8bands-fc-4.wav done"); else disp("processed/ara-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-8bands-fc-4.wav"); end
[s,err] = stat("processed/ara-8bands-fc-16.wav"); if (err == 0), disp("processed/ara-8bands-fc-16.wav done"); else disp("processed/ara-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-8bands-fc-16.wav"); end
[s,err] = stat("processed/ara-8bands-fc-128.wav"); if (err == 0), disp("processed/ara-8bands-fc-128.wav done"); else disp("processed/ara-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-8bands-fc-128.wav"); end
[s,err] = stat("processed/ara-12bands-fc-4.wav"); if (err == 0), disp("processed/ara-12bands-fc-4.wav done"); else disp("processed/ara-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-12bands-fc-4.wav"); end
[s,err] = stat("processed/ara-12bands-fc-16.wav"); if (err == 0), disp("processed/ara-12bands-fc-16.wav done"); else disp("processed/ara-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-12bands-fc-16.wav"); end
[s,err] = stat("processed/ara-12bands-fc-128.wav"); if (err == 0), disp("processed/ara-12bands-fc-128.wav done"); else disp("processed/ara-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-12bands-fc-128.wav"); end
[s,err] = stat("processed/ara-16bands-fc-4.wav"); if (err == 0), disp("processed/ara-16bands-fc-4.wav done"); else disp("processed/ara-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-16bands-fc-4.wav"); end
[s,err] = stat("processed/ara-16bands-fc-16.wav"); if (err == 0), disp("processed/ara-16bands-fc-16.wav done"); else disp("processed/ara-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-16bands-fc-16.wav"); end
[s,err] = stat("processed/ara-16bands-fc-128.wav"); if (err == 0), disp("processed/ara-16bands-fc-128.wav done"); else disp("processed/ara-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ara.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ara-16bands-fc-128.wav"); end
[s,err] = stat("processed/ourou-1bands-fc-4.wav"); if (err == 0), disp("processed/ourou-1bands-fc-4.wav done"); else disp("processed/ourou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ourou-1bands-fc-16.wav"); if (err == 0), disp("processed/ourou-1bands-fc-16.wav done"); else disp("processed/ourou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ourou-1bands-fc-128.wav"); if (err == 0), disp("processed/ourou-1bands-fc-128.wav done"); else disp("processed/ourou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ourou-2bands-fc-4.wav"); if (err == 0), disp("processed/ourou-2bands-fc-4.wav done"); else disp("processed/ourou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ourou-2bands-fc-16.wav"); if (err == 0), disp("processed/ourou-2bands-fc-16.wav done"); else disp("processed/ourou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ourou-2bands-fc-128.wav"); if (err == 0), disp("processed/ourou-2bands-fc-128.wav done"); else disp("processed/ourou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ourou-4bands-fc-4.wav"); if (err == 0), disp("processed/ourou-4bands-fc-4.wav done"); else disp("processed/ourou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ourou-4bands-fc-16.wav"); if (err == 0), disp("processed/ourou-4bands-fc-16.wav done"); else disp("processed/ourou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ourou-4bands-fc-128.wav"); if (err == 0), disp("processed/ourou-4bands-fc-128.wav done"); else disp("processed/ourou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ourou-6bands-fc-4.wav"); if (err == 0), disp("processed/ourou-6bands-fc-4.wav done"); else disp("processed/ourou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ourou-6bands-fc-16.wav"); if (err == 0), disp("processed/ourou-6bands-fc-16.wav done"); else disp("processed/ourou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ourou-6bands-fc-128.wav"); if (err == 0), disp("processed/ourou-6bands-fc-128.wav done"); else disp("processed/ourou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ourou-8bands-fc-4.wav"); if (err == 0), disp("processed/ourou-8bands-fc-4.wav done"); else disp("processed/ourou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ourou-8bands-fc-16.wav"); if (err == 0), disp("processed/ourou-8bands-fc-16.wav done"); else disp("processed/ourou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ourou-8bands-fc-128.wav"); if (err == 0), disp("processed/ourou-8bands-fc-128.wav done"); else disp("processed/ourou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ourou-12bands-fc-4.wav"); if (err == 0), disp("processed/ourou-12bands-fc-4.wav done"); else disp("processed/ourou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ourou-12bands-fc-16.wav"); if (err == 0), disp("processed/ourou-12bands-fc-16.wav done"); else disp("processed/ourou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ourou-12bands-fc-128.wav"); if (err == 0), disp("processed/ourou-12bands-fc-128.wav done"); else disp("processed/ourou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ourou-16bands-fc-4.wav"); if (err == 0), disp("processed/ourou-16bands-fc-4.wav done"); else disp("processed/ourou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ourou-16bands-fc-16.wav"); if (err == 0), disp("processed/ourou-16bands-fc-16.wav done"); else disp("processed/ourou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ourou-16bands-fc-128.wav"); if (err == 0), disp("processed/ourou-16bands-fc-128.wav done"); else disp("processed/ourou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ourou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ourou-16bands-fc-128.wav"); end
[s,err] = stat("processed/ili-1bands-fc-4.wav"); if (err == 0), disp("processed/ili-1bands-fc-4.wav done"); else disp("processed/ili-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-1bands-fc-4.wav"); end
[s,err] = stat("processed/ili-1bands-fc-16.wav"); if (err == 0), disp("processed/ili-1bands-fc-16.wav done"); else disp("processed/ili-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-1bands-fc-16.wav"); end
[s,err] = stat("processed/ili-1bands-fc-128.wav"); if (err == 0), disp("processed/ili-1bands-fc-128.wav done"); else disp("processed/ili-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-1bands-fc-128.wav"); end
[s,err] = stat("processed/ili-2bands-fc-4.wav"); if (err == 0), disp("processed/ili-2bands-fc-4.wav done"); else disp("processed/ili-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-2bands-fc-4.wav"); end
[s,err] = stat("processed/ili-2bands-fc-16.wav"); if (err == 0), disp("processed/ili-2bands-fc-16.wav done"); else disp("processed/ili-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-2bands-fc-16.wav"); end
[s,err] = stat("processed/ili-2bands-fc-128.wav"); if (err == 0), disp("processed/ili-2bands-fc-128.wav done"); else disp("processed/ili-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-2bands-fc-128.wav"); end
[s,err] = stat("processed/ili-4bands-fc-4.wav"); if (err == 0), disp("processed/ili-4bands-fc-4.wav done"); else disp("processed/ili-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-4bands-fc-4.wav"); end
[s,err] = stat("processed/ili-4bands-fc-16.wav"); if (err == 0), disp("processed/ili-4bands-fc-16.wav done"); else disp("processed/ili-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-4bands-fc-16.wav"); end
[s,err] = stat("processed/ili-4bands-fc-128.wav"); if (err == 0), disp("processed/ili-4bands-fc-128.wav done"); else disp("processed/ili-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-4bands-fc-128.wav"); end
[s,err] = stat("processed/ili-6bands-fc-4.wav"); if (err == 0), disp("processed/ili-6bands-fc-4.wav done"); else disp("processed/ili-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-6bands-fc-4.wav"); end
[s,err] = stat("processed/ili-6bands-fc-16.wav"); if (err == 0), disp("processed/ili-6bands-fc-16.wav done"); else disp("processed/ili-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-6bands-fc-16.wav"); end
[s,err] = stat("processed/ili-6bands-fc-128.wav"); if (err == 0), disp("processed/ili-6bands-fc-128.wav done"); else disp("processed/ili-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-6bands-fc-128.wav"); end
[s,err] = stat("processed/ili-8bands-fc-4.wav"); if (err == 0), disp("processed/ili-8bands-fc-4.wav done"); else disp("processed/ili-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-8bands-fc-4.wav"); end
[s,err] = stat("processed/ili-8bands-fc-16.wav"); if (err == 0), disp("processed/ili-8bands-fc-16.wav done"); else disp("processed/ili-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-8bands-fc-16.wav"); end
[s,err] = stat("processed/ili-8bands-fc-128.wav"); if (err == 0), disp("processed/ili-8bands-fc-128.wav done"); else disp("processed/ili-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-8bands-fc-128.wav"); end
[s,err] = stat("processed/ili-12bands-fc-4.wav"); if (err == 0), disp("processed/ili-12bands-fc-4.wav done"); else disp("processed/ili-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-12bands-fc-4.wav"); end
[s,err] = stat("processed/ili-12bands-fc-16.wav"); if (err == 0), disp("processed/ili-12bands-fc-16.wav done"); else disp("processed/ili-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-12bands-fc-16.wav"); end
[s,err] = stat("processed/ili-12bands-fc-128.wav"); if (err == 0), disp("processed/ili-12bands-fc-128.wav done"); else disp("processed/ili-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-12bands-fc-128.wav"); end
[s,err] = stat("processed/ili-16bands-fc-4.wav"); if (err == 0), disp("processed/ili-16bands-fc-4.wav done"); else disp("processed/ili-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-16bands-fc-4.wav"); end
[s,err] = stat("processed/ili-16bands-fc-16.wav"); if (err == 0), disp("processed/ili-16bands-fc-16.wav done"); else disp("processed/ili-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-16bands-fc-16.wav"); end
[s,err] = stat("processed/ili-16bands-fc-128.wav"); if (err == 0), disp("processed/ili-16bands-fc-128.wav done"); else disp("processed/ili-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ili.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ili-16bands-fc-128.wav"); end
[s,err] = stat("processed/ala-1bands-fc-4.wav"); if (err == 0), disp("processed/ala-1bands-fc-4.wav done"); else disp("processed/ala-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-1bands-fc-4.wav"); end
[s,err] = stat("processed/ala-1bands-fc-16.wav"); if (err == 0), disp("processed/ala-1bands-fc-16.wav done"); else disp("processed/ala-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-1bands-fc-16.wav"); end
[s,err] = stat("processed/ala-1bands-fc-128.wav"); if (err == 0), disp("processed/ala-1bands-fc-128.wav done"); else disp("processed/ala-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-1bands-fc-128.wav"); end
[s,err] = stat("processed/ala-2bands-fc-4.wav"); if (err == 0), disp("processed/ala-2bands-fc-4.wav done"); else disp("processed/ala-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-2bands-fc-4.wav"); end
[s,err] = stat("processed/ala-2bands-fc-16.wav"); if (err == 0), disp("processed/ala-2bands-fc-16.wav done"); else disp("processed/ala-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-2bands-fc-16.wav"); end
[s,err] = stat("processed/ala-2bands-fc-128.wav"); if (err == 0), disp("processed/ala-2bands-fc-128.wav done"); else disp("processed/ala-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-2bands-fc-128.wav"); end
[s,err] = stat("processed/ala-4bands-fc-4.wav"); if (err == 0), disp("processed/ala-4bands-fc-4.wav done"); else disp("processed/ala-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-4bands-fc-4.wav"); end
[s,err] = stat("processed/ala-4bands-fc-16.wav"); if (err == 0), disp("processed/ala-4bands-fc-16.wav done"); else disp("processed/ala-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-4bands-fc-16.wav"); end
[s,err] = stat("processed/ala-4bands-fc-128.wav"); if (err == 0), disp("processed/ala-4bands-fc-128.wav done"); else disp("processed/ala-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-4bands-fc-128.wav"); end
[s,err] = stat("processed/ala-6bands-fc-4.wav"); if (err == 0), disp("processed/ala-6bands-fc-4.wav done"); else disp("processed/ala-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-6bands-fc-4.wav"); end
[s,err] = stat("processed/ala-6bands-fc-16.wav"); if (err == 0), disp("processed/ala-6bands-fc-16.wav done"); else disp("processed/ala-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-6bands-fc-16.wav"); end
[s,err] = stat("processed/ala-6bands-fc-128.wav"); if (err == 0), disp("processed/ala-6bands-fc-128.wav done"); else disp("processed/ala-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-6bands-fc-128.wav"); end
[s,err] = stat("processed/ala-8bands-fc-4.wav"); if (err == 0), disp("processed/ala-8bands-fc-4.wav done"); else disp("processed/ala-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-8bands-fc-4.wav"); end
[s,err] = stat("processed/ala-8bands-fc-16.wav"); if (err == 0), disp("processed/ala-8bands-fc-16.wav done"); else disp("processed/ala-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-8bands-fc-16.wav"); end
[s,err] = stat("processed/ala-8bands-fc-128.wav"); if (err == 0), disp("processed/ala-8bands-fc-128.wav done"); else disp("processed/ala-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-8bands-fc-128.wav"); end
[s,err] = stat("processed/ala-12bands-fc-4.wav"); if (err == 0), disp("processed/ala-12bands-fc-4.wav done"); else disp("processed/ala-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-12bands-fc-4.wav"); end
[s,err] = stat("processed/ala-12bands-fc-16.wav"); if (err == 0), disp("processed/ala-12bands-fc-16.wav done"); else disp("processed/ala-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-12bands-fc-16.wav"); end
[s,err] = stat("processed/ala-12bands-fc-128.wav"); if (err == 0), disp("processed/ala-12bands-fc-128.wav done"); else disp("processed/ala-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-12bands-fc-128.wav"); end
[s,err] = stat("processed/ala-16bands-fc-4.wav"); if (err == 0), disp("processed/ala-16bands-fc-4.wav done"); else disp("processed/ala-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-16bands-fc-4.wav"); end
[s,err] = stat("processed/ala-16bands-fc-16.wav"); if (err == 0), disp("processed/ala-16bands-fc-16.wav done"); else disp("processed/ala-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-16bands-fc-16.wav"); end
[s,err] = stat("processed/ala-16bands-fc-128.wav"); if (err == 0), disp("processed/ala-16bands-fc-128.wav done"); else disp("processed/ala-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ala.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ala-16bands-fc-128.wav"); end
[s,err] = stat("processed/oulou-1bands-fc-4.wav"); if (err == 0), disp("processed/oulou-1bands-fc-4.wav done"); else disp("processed/oulou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-1bands-fc-4.wav"); end
[s,err] = stat("processed/oulou-1bands-fc-16.wav"); if (err == 0), disp("processed/oulou-1bands-fc-16.wav done"); else disp("processed/oulou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-1bands-fc-16.wav"); end
[s,err] = stat("processed/oulou-1bands-fc-128.wav"); if (err == 0), disp("processed/oulou-1bands-fc-128.wav done"); else disp("processed/oulou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-1bands-fc-128.wav"); end
[s,err] = stat("processed/oulou-2bands-fc-4.wav"); if (err == 0), disp("processed/oulou-2bands-fc-4.wav done"); else disp("processed/oulou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-2bands-fc-4.wav"); end
[s,err] = stat("processed/oulou-2bands-fc-16.wav"); if (err == 0), disp("processed/oulou-2bands-fc-16.wav done"); else disp("processed/oulou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-2bands-fc-16.wav"); end
[s,err] = stat("processed/oulou-2bands-fc-128.wav"); if (err == 0), disp("processed/oulou-2bands-fc-128.wav done"); else disp("processed/oulou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-2bands-fc-128.wav"); end
[s,err] = stat("processed/oulou-4bands-fc-4.wav"); if (err == 0), disp("processed/oulou-4bands-fc-4.wav done"); else disp("processed/oulou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-4bands-fc-4.wav"); end
[s,err] = stat("processed/oulou-4bands-fc-16.wav"); if (err == 0), disp("processed/oulou-4bands-fc-16.wav done"); else disp("processed/oulou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-4bands-fc-16.wav"); end
[s,err] = stat("processed/oulou-4bands-fc-128.wav"); if (err == 0), disp("processed/oulou-4bands-fc-128.wav done"); else disp("processed/oulou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-4bands-fc-128.wav"); end
[s,err] = stat("processed/oulou-6bands-fc-4.wav"); if (err == 0), disp("processed/oulou-6bands-fc-4.wav done"); else disp("processed/oulou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-6bands-fc-4.wav"); end
[s,err] = stat("processed/oulou-6bands-fc-16.wav"); if (err == 0), disp("processed/oulou-6bands-fc-16.wav done"); else disp("processed/oulou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-6bands-fc-16.wav"); end
[s,err] = stat("processed/oulou-6bands-fc-128.wav"); if (err == 0), disp("processed/oulou-6bands-fc-128.wav done"); else disp("processed/oulou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-6bands-fc-128.wav"); end
[s,err] = stat("processed/oulou-8bands-fc-4.wav"); if (err == 0), disp("processed/oulou-8bands-fc-4.wav done"); else disp("processed/oulou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-8bands-fc-4.wav"); end
[s,err] = stat("processed/oulou-8bands-fc-16.wav"); if (err == 0), disp("processed/oulou-8bands-fc-16.wav done"); else disp("processed/oulou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-8bands-fc-16.wav"); end
[s,err] = stat("processed/oulou-8bands-fc-128.wav"); if (err == 0), disp("processed/oulou-8bands-fc-128.wav done"); else disp("processed/oulou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-8bands-fc-128.wav"); end
[s,err] = stat("processed/oulou-12bands-fc-4.wav"); if (err == 0), disp("processed/oulou-12bands-fc-4.wav done"); else disp("processed/oulou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-12bands-fc-4.wav"); end
[s,err] = stat("processed/oulou-12bands-fc-16.wav"); if (err == 0), disp("processed/oulou-12bands-fc-16.wav done"); else disp("processed/oulou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-12bands-fc-16.wav"); end
[s,err] = stat("processed/oulou-12bands-fc-128.wav"); if (err == 0), disp("processed/oulou-12bands-fc-128.wav done"); else disp("processed/oulou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-12bands-fc-128.wav"); end
[s,err] = stat("processed/oulou-16bands-fc-4.wav"); if (err == 0), disp("processed/oulou-16bands-fc-4.wav done"); else disp("processed/oulou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-16bands-fc-4.wav"); end
[s,err] = stat("processed/oulou-16bands-fc-16.wav"); if (err == 0), disp("processed/oulou-16bands-fc-16.wav done"); else disp("processed/oulou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-16bands-fc-16.wav"); end
[s,err] = stat("processed/oulou-16bands-fc-128.wav"); if (err == 0), disp("processed/oulou-16bands-fc-128.wav done"); else disp("processed/oulou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/oulou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/oulou-16bands-fc-128.wav"); end
[s,err] = stat("processed/iyi-1bands-fc-4.wav"); if (err == 0), disp("processed/iyi-1bands-fc-4.wav done"); else disp("processed/iyi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-1bands-fc-4.wav"); end
[s,err] = stat("processed/iyi-1bands-fc-16.wav"); if (err == 0), disp("processed/iyi-1bands-fc-16.wav done"); else disp("processed/iyi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-1bands-fc-16.wav"); end
[s,err] = stat("processed/iyi-1bands-fc-128.wav"); if (err == 0), disp("processed/iyi-1bands-fc-128.wav done"); else disp("processed/iyi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-1bands-fc-128.wav"); end
[s,err] = stat("processed/iyi-2bands-fc-4.wav"); if (err == 0), disp("processed/iyi-2bands-fc-4.wav done"); else disp("processed/iyi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-2bands-fc-4.wav"); end
[s,err] = stat("processed/iyi-2bands-fc-16.wav"); if (err == 0), disp("processed/iyi-2bands-fc-16.wav done"); else disp("processed/iyi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-2bands-fc-16.wav"); end
[s,err] = stat("processed/iyi-2bands-fc-128.wav"); if (err == 0), disp("processed/iyi-2bands-fc-128.wav done"); else disp("processed/iyi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-2bands-fc-128.wav"); end
[s,err] = stat("processed/iyi-4bands-fc-4.wav"); if (err == 0), disp("processed/iyi-4bands-fc-4.wav done"); else disp("processed/iyi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-4bands-fc-4.wav"); end
[s,err] = stat("processed/iyi-4bands-fc-16.wav"); if (err == 0), disp("processed/iyi-4bands-fc-16.wav done"); else disp("processed/iyi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-4bands-fc-16.wav"); end
[s,err] = stat("processed/iyi-4bands-fc-128.wav"); if (err == 0), disp("processed/iyi-4bands-fc-128.wav done"); else disp("processed/iyi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-4bands-fc-128.wav"); end
[s,err] = stat("processed/iyi-6bands-fc-4.wav"); if (err == 0), disp("processed/iyi-6bands-fc-4.wav done"); else disp("processed/iyi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-6bands-fc-4.wav"); end
[s,err] = stat("processed/iyi-6bands-fc-16.wav"); if (err == 0), disp("processed/iyi-6bands-fc-16.wav done"); else disp("processed/iyi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-6bands-fc-16.wav"); end
[s,err] = stat("processed/iyi-6bands-fc-128.wav"); if (err == 0), disp("processed/iyi-6bands-fc-128.wav done"); else disp("processed/iyi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-6bands-fc-128.wav"); end
[s,err] = stat("processed/iyi-8bands-fc-4.wav"); if (err == 0), disp("processed/iyi-8bands-fc-4.wav done"); else disp("processed/iyi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-8bands-fc-4.wav"); end
[s,err] = stat("processed/iyi-8bands-fc-16.wav"); if (err == 0), disp("processed/iyi-8bands-fc-16.wav done"); else disp("processed/iyi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-8bands-fc-16.wav"); end
[s,err] = stat("processed/iyi-8bands-fc-128.wav"); if (err == 0), disp("processed/iyi-8bands-fc-128.wav done"); else disp("processed/iyi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-8bands-fc-128.wav"); end
[s,err] = stat("processed/iyi-12bands-fc-4.wav"); if (err == 0), disp("processed/iyi-12bands-fc-4.wav done"); else disp("processed/iyi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-12bands-fc-4.wav"); end
[s,err] = stat("processed/iyi-12bands-fc-16.wav"); if (err == 0), disp("processed/iyi-12bands-fc-16.wav done"); else disp("processed/iyi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-12bands-fc-16.wav"); end
[s,err] = stat("processed/iyi-12bands-fc-128.wav"); if (err == 0), disp("processed/iyi-12bands-fc-128.wav done"); else disp("processed/iyi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-12bands-fc-128.wav"); end
[s,err] = stat("processed/iyi-16bands-fc-4.wav"); if (err == 0), disp("processed/iyi-16bands-fc-4.wav done"); else disp("processed/iyi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-16bands-fc-4.wav"); end
[s,err] = stat("processed/iyi-16bands-fc-16.wav"); if (err == 0), disp("processed/iyi-16bands-fc-16.wav done"); else disp("processed/iyi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-16bands-fc-16.wav"); end
[s,err] = stat("processed/iyi-16bands-fc-128.wav"); if (err == 0), disp("processed/iyi-16bands-fc-128.wav done"); else disp("processed/iyi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iyi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iyi-16bands-fc-128.wav"); end
[s,err] = stat("processed/aya-1bands-fc-4.wav"); if (err == 0), disp("processed/aya-1bands-fc-4.wav done"); else disp("processed/aya-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-1bands-fc-4.wav"); end
[s,err] = stat("processed/aya-1bands-fc-16.wav"); if (err == 0), disp("processed/aya-1bands-fc-16.wav done"); else disp("processed/aya-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-1bands-fc-16.wav"); end
[s,err] = stat("processed/aya-1bands-fc-128.wav"); if (err == 0), disp("processed/aya-1bands-fc-128.wav done"); else disp("processed/aya-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-1bands-fc-128.wav"); end
[s,err] = stat("processed/aya-2bands-fc-4.wav"); if (err == 0), disp("processed/aya-2bands-fc-4.wav done"); else disp("processed/aya-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-2bands-fc-4.wav"); end
[s,err] = stat("processed/aya-2bands-fc-16.wav"); if (err == 0), disp("processed/aya-2bands-fc-16.wav done"); else disp("processed/aya-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-2bands-fc-16.wav"); end
[s,err] = stat("processed/aya-2bands-fc-128.wav"); if (err == 0), disp("processed/aya-2bands-fc-128.wav done"); else disp("processed/aya-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-2bands-fc-128.wav"); end
[s,err] = stat("processed/aya-4bands-fc-4.wav"); if (err == 0), disp("processed/aya-4bands-fc-4.wav done"); else disp("processed/aya-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-4bands-fc-4.wav"); end
[s,err] = stat("processed/aya-4bands-fc-16.wav"); if (err == 0), disp("processed/aya-4bands-fc-16.wav done"); else disp("processed/aya-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-4bands-fc-16.wav"); end
[s,err] = stat("processed/aya-4bands-fc-128.wav"); if (err == 0), disp("processed/aya-4bands-fc-128.wav done"); else disp("processed/aya-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-4bands-fc-128.wav"); end
[s,err] = stat("processed/aya-6bands-fc-4.wav"); if (err == 0), disp("processed/aya-6bands-fc-4.wav done"); else disp("processed/aya-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-6bands-fc-4.wav"); end
[s,err] = stat("processed/aya-6bands-fc-16.wav"); if (err == 0), disp("processed/aya-6bands-fc-16.wav done"); else disp("processed/aya-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-6bands-fc-16.wav"); end
[s,err] = stat("processed/aya-6bands-fc-128.wav"); if (err == 0), disp("processed/aya-6bands-fc-128.wav done"); else disp("processed/aya-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-6bands-fc-128.wav"); end
[s,err] = stat("processed/aya-8bands-fc-4.wav"); if (err == 0), disp("processed/aya-8bands-fc-4.wav done"); else disp("processed/aya-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-8bands-fc-4.wav"); end
[s,err] = stat("processed/aya-8bands-fc-16.wav"); if (err == 0), disp("processed/aya-8bands-fc-16.wav done"); else disp("processed/aya-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-8bands-fc-16.wav"); end
[s,err] = stat("processed/aya-8bands-fc-128.wav"); if (err == 0), disp("processed/aya-8bands-fc-128.wav done"); else disp("processed/aya-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-8bands-fc-128.wav"); end
[s,err] = stat("processed/aya-12bands-fc-4.wav"); if (err == 0), disp("processed/aya-12bands-fc-4.wav done"); else disp("processed/aya-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-12bands-fc-4.wav"); end
[s,err] = stat("processed/aya-12bands-fc-16.wav"); if (err == 0), disp("processed/aya-12bands-fc-16.wav done"); else disp("processed/aya-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-12bands-fc-16.wav"); end
[s,err] = stat("processed/aya-12bands-fc-128.wav"); if (err == 0), disp("processed/aya-12bands-fc-128.wav done"); else disp("processed/aya-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-12bands-fc-128.wav"); end
[s,err] = stat("processed/aya-16bands-fc-4.wav"); if (err == 0), disp("processed/aya-16bands-fc-4.wav done"); else disp("processed/aya-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-16bands-fc-4.wav"); end
[s,err] = stat("processed/aya-16bands-fc-16.wav"); if (err == 0), disp("processed/aya-16bands-fc-16.wav done"); else disp("processed/aya-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-16bands-fc-16.wav"); end
[s,err] = stat("processed/aya-16bands-fc-128.wav"); if (err == 0), disp("processed/aya-16bands-fc-128.wav done"); else disp("processed/aya-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/aya.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/aya-16bands-fc-128.wav"); end
[s,err] = stat("processed/ouyou-1bands-fc-4.wav"); if (err == 0), disp("processed/ouyou-1bands-fc-4.wav done"); else disp("processed/ouyou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ouyou-1bands-fc-16.wav"); if (err == 0), disp("processed/ouyou-1bands-fc-16.wav done"); else disp("processed/ouyou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ouyou-1bands-fc-128.wav"); if (err == 0), disp("processed/ouyou-1bands-fc-128.wav done"); else disp("processed/ouyou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ouyou-2bands-fc-4.wav"); if (err == 0), disp("processed/ouyou-2bands-fc-4.wav done"); else disp("processed/ouyou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ouyou-2bands-fc-16.wav"); if (err == 0), disp("processed/ouyou-2bands-fc-16.wav done"); else disp("processed/ouyou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ouyou-2bands-fc-128.wav"); if (err == 0), disp("processed/ouyou-2bands-fc-128.wav done"); else disp("processed/ouyou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ouyou-4bands-fc-4.wav"); if (err == 0), disp("processed/ouyou-4bands-fc-4.wav done"); else disp("processed/ouyou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ouyou-4bands-fc-16.wav"); if (err == 0), disp("processed/ouyou-4bands-fc-16.wav done"); else disp("processed/ouyou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ouyou-4bands-fc-128.wav"); if (err == 0), disp("processed/ouyou-4bands-fc-128.wav done"); else disp("processed/ouyou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ouyou-6bands-fc-4.wav"); if (err == 0), disp("processed/ouyou-6bands-fc-4.wav done"); else disp("processed/ouyou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ouyou-6bands-fc-16.wav"); if (err == 0), disp("processed/ouyou-6bands-fc-16.wav done"); else disp("processed/ouyou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ouyou-6bands-fc-128.wav"); if (err == 0), disp("processed/ouyou-6bands-fc-128.wav done"); else disp("processed/ouyou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ouyou-8bands-fc-4.wav"); if (err == 0), disp("processed/ouyou-8bands-fc-4.wav done"); else disp("processed/ouyou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ouyou-8bands-fc-16.wav"); if (err == 0), disp("processed/ouyou-8bands-fc-16.wav done"); else disp("processed/ouyou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ouyou-8bands-fc-128.wav"); if (err == 0), disp("processed/ouyou-8bands-fc-128.wav done"); else disp("processed/ouyou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ouyou-12bands-fc-4.wav"); if (err == 0), disp("processed/ouyou-12bands-fc-4.wav done"); else disp("processed/ouyou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ouyou-12bands-fc-16.wav"); if (err == 0), disp("processed/ouyou-12bands-fc-16.wav done"); else disp("processed/ouyou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ouyou-12bands-fc-128.wav"); if (err == 0), disp("processed/ouyou-12bands-fc-128.wav done"); else disp("processed/ouyou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ouyou-16bands-fc-4.wav"); if (err == 0), disp("processed/ouyou-16bands-fc-4.wav done"); else disp("processed/ouyou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ouyou-16bands-fc-16.wav"); if (err == 0), disp("processed/ouyou-16bands-fc-16.wav done"); else disp("processed/ouyou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ouyou-16bands-fc-128.wav"); if (err == 0), disp("processed/ouyou-16bands-fc-128.wav done"); else disp("processed/ouyou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouyou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouyou-16bands-fc-128.wav"); end
[s,err] = stat("processed/iwi-1bands-fc-4.wav"); if (err == 0), disp("processed/iwi-1bands-fc-4.wav done"); else disp("processed/iwi-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-1bands-fc-4.wav"); end
[s,err] = stat("processed/iwi-1bands-fc-16.wav"); if (err == 0), disp("processed/iwi-1bands-fc-16.wav done"); else disp("processed/iwi-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-1bands-fc-16.wav"); end
[s,err] = stat("processed/iwi-1bands-fc-128.wav"); if (err == 0), disp("processed/iwi-1bands-fc-128.wav done"); else disp("processed/iwi-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-1bands-fc-128.wav"); end
[s,err] = stat("processed/iwi-2bands-fc-4.wav"); if (err == 0), disp("processed/iwi-2bands-fc-4.wav done"); else disp("processed/iwi-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-2bands-fc-4.wav"); end
[s,err] = stat("processed/iwi-2bands-fc-16.wav"); if (err == 0), disp("processed/iwi-2bands-fc-16.wav done"); else disp("processed/iwi-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-2bands-fc-16.wav"); end
[s,err] = stat("processed/iwi-2bands-fc-128.wav"); if (err == 0), disp("processed/iwi-2bands-fc-128.wav done"); else disp("processed/iwi-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-2bands-fc-128.wav"); end
[s,err] = stat("processed/iwi-4bands-fc-4.wav"); if (err == 0), disp("processed/iwi-4bands-fc-4.wav done"); else disp("processed/iwi-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-4bands-fc-4.wav"); end
[s,err] = stat("processed/iwi-4bands-fc-16.wav"); if (err == 0), disp("processed/iwi-4bands-fc-16.wav done"); else disp("processed/iwi-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-4bands-fc-16.wav"); end
[s,err] = stat("processed/iwi-4bands-fc-128.wav"); if (err == 0), disp("processed/iwi-4bands-fc-128.wav done"); else disp("processed/iwi-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-4bands-fc-128.wav"); end
[s,err] = stat("processed/iwi-6bands-fc-4.wav"); if (err == 0), disp("processed/iwi-6bands-fc-4.wav done"); else disp("processed/iwi-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-6bands-fc-4.wav"); end
[s,err] = stat("processed/iwi-6bands-fc-16.wav"); if (err == 0), disp("processed/iwi-6bands-fc-16.wav done"); else disp("processed/iwi-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-6bands-fc-16.wav"); end
[s,err] = stat("processed/iwi-6bands-fc-128.wav"); if (err == 0), disp("processed/iwi-6bands-fc-128.wav done"); else disp("processed/iwi-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-6bands-fc-128.wav"); end
[s,err] = stat("processed/iwi-8bands-fc-4.wav"); if (err == 0), disp("processed/iwi-8bands-fc-4.wav done"); else disp("processed/iwi-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-8bands-fc-4.wav"); end
[s,err] = stat("processed/iwi-8bands-fc-16.wav"); if (err == 0), disp("processed/iwi-8bands-fc-16.wav done"); else disp("processed/iwi-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-8bands-fc-16.wav"); end
[s,err] = stat("processed/iwi-8bands-fc-128.wav"); if (err == 0), disp("processed/iwi-8bands-fc-128.wav done"); else disp("processed/iwi-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-8bands-fc-128.wav"); end
[s,err] = stat("processed/iwi-12bands-fc-4.wav"); if (err == 0), disp("processed/iwi-12bands-fc-4.wav done"); else disp("processed/iwi-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-12bands-fc-4.wav"); end
[s,err] = stat("processed/iwi-12bands-fc-16.wav"); if (err == 0), disp("processed/iwi-12bands-fc-16.wav done"); else disp("processed/iwi-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-12bands-fc-16.wav"); end
[s,err] = stat("processed/iwi-12bands-fc-128.wav"); if (err == 0), disp("processed/iwi-12bands-fc-128.wav done"); else disp("processed/iwi-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-12bands-fc-128.wav"); end
[s,err] = stat("processed/iwi-16bands-fc-4.wav"); if (err == 0), disp("processed/iwi-16bands-fc-4.wav done"); else disp("processed/iwi-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-16bands-fc-4.wav"); end
[s,err] = stat("processed/iwi-16bands-fc-16.wav"); if (err == 0), disp("processed/iwi-16bands-fc-16.wav done"); else disp("processed/iwi-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-16bands-fc-16.wav"); end
[s,err] = stat("processed/iwi-16bands-fc-128.wav"); if (err == 0), disp("processed/iwi-16bands-fc-128.wav done"); else disp("processed/iwi-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/iwi.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/iwi-16bands-fc-128.wav"); end
[s,err] = stat("processed/awa-1bands-fc-4.wav"); if (err == 0), disp("processed/awa-1bands-fc-4.wav done"); else disp("processed/awa-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-1bands-fc-4.wav"); end
[s,err] = stat("processed/awa-1bands-fc-16.wav"); if (err == 0), disp("processed/awa-1bands-fc-16.wav done"); else disp("processed/awa-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-1bands-fc-16.wav"); end
[s,err] = stat("processed/awa-1bands-fc-128.wav"); if (err == 0), disp("processed/awa-1bands-fc-128.wav done"); else disp("processed/awa-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-1bands-fc-128.wav"); end
[s,err] = stat("processed/awa-2bands-fc-4.wav"); if (err == 0), disp("processed/awa-2bands-fc-4.wav done"); else disp("processed/awa-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-2bands-fc-4.wav"); end
[s,err] = stat("processed/awa-2bands-fc-16.wav"); if (err == 0), disp("processed/awa-2bands-fc-16.wav done"); else disp("processed/awa-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-2bands-fc-16.wav"); end
[s,err] = stat("processed/awa-2bands-fc-128.wav"); if (err == 0), disp("processed/awa-2bands-fc-128.wav done"); else disp("processed/awa-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-2bands-fc-128.wav"); end
[s,err] = stat("processed/awa-4bands-fc-4.wav"); if (err == 0), disp("processed/awa-4bands-fc-4.wav done"); else disp("processed/awa-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-4bands-fc-4.wav"); end
[s,err] = stat("processed/awa-4bands-fc-16.wav"); if (err == 0), disp("processed/awa-4bands-fc-16.wav done"); else disp("processed/awa-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-4bands-fc-16.wav"); end
[s,err] = stat("processed/awa-4bands-fc-128.wav"); if (err == 0), disp("processed/awa-4bands-fc-128.wav done"); else disp("processed/awa-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-4bands-fc-128.wav"); end
[s,err] = stat("processed/awa-6bands-fc-4.wav"); if (err == 0), disp("processed/awa-6bands-fc-4.wav done"); else disp("processed/awa-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-6bands-fc-4.wav"); end
[s,err] = stat("processed/awa-6bands-fc-16.wav"); if (err == 0), disp("processed/awa-6bands-fc-16.wav done"); else disp("processed/awa-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-6bands-fc-16.wav"); end
[s,err] = stat("processed/awa-6bands-fc-128.wav"); if (err == 0), disp("processed/awa-6bands-fc-128.wav done"); else disp("processed/awa-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-6bands-fc-128.wav"); end
[s,err] = stat("processed/awa-8bands-fc-4.wav"); if (err == 0), disp("processed/awa-8bands-fc-4.wav done"); else disp("processed/awa-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-8bands-fc-4.wav"); end
[s,err] = stat("processed/awa-8bands-fc-16.wav"); if (err == 0), disp("processed/awa-8bands-fc-16.wav done"); else disp("processed/awa-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-8bands-fc-16.wav"); end
[s,err] = stat("processed/awa-8bands-fc-128.wav"); if (err == 0), disp("processed/awa-8bands-fc-128.wav done"); else disp("processed/awa-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-8bands-fc-128.wav"); end
[s,err] = stat("processed/awa-12bands-fc-4.wav"); if (err == 0), disp("processed/awa-12bands-fc-4.wav done"); else disp("processed/awa-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-12bands-fc-4.wav"); end
[s,err] = stat("processed/awa-12bands-fc-16.wav"); if (err == 0), disp("processed/awa-12bands-fc-16.wav done"); else disp("processed/awa-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-12bands-fc-16.wav"); end
[s,err] = stat("processed/awa-12bands-fc-128.wav"); if (err == 0), disp("processed/awa-12bands-fc-128.wav done"); else disp("processed/awa-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-12bands-fc-128.wav"); end
[s,err] = stat("processed/awa-16bands-fc-4.wav"); if (err == 0), disp("processed/awa-16bands-fc-4.wav done"); else disp("processed/awa-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-16bands-fc-4.wav"); end
[s,err] = stat("processed/awa-16bands-fc-16.wav"); if (err == 0), disp("processed/awa-16bands-fc-16.wav done"); else disp("processed/awa-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-16bands-fc-16.wav"); end
[s,err] = stat("processed/awa-16bands-fc-128.wav"); if (err == 0), disp("processed/awa-16bands-fc-128.wav done"); else disp("processed/awa-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/awa.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/awa-16bands-fc-128.wav"); end
[s,err] = stat("processed/ouwou-1bands-fc-4.wav"); if (err == 0), disp("processed/ouwou-1bands-fc-4.wav done"); else disp("processed/ouwou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ouwou-1bands-fc-16.wav"); if (err == 0), disp("processed/ouwou-1bands-fc-16.wav done"); else disp("processed/ouwou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ouwou-1bands-fc-128.wav"); if (err == 0), disp("processed/ouwou-1bands-fc-128.wav done"); else disp("processed/ouwou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ouwou-2bands-fc-4.wav"); if (err == 0), disp("processed/ouwou-2bands-fc-4.wav done"); else disp("processed/ouwou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ouwou-2bands-fc-16.wav"); if (err == 0), disp("processed/ouwou-2bands-fc-16.wav done"); else disp("processed/ouwou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ouwou-2bands-fc-128.wav"); if (err == 0), disp("processed/ouwou-2bands-fc-128.wav done"); else disp("processed/ouwou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ouwou-4bands-fc-4.wav"); if (err == 0), disp("processed/ouwou-4bands-fc-4.wav done"); else disp("processed/ouwou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ouwou-4bands-fc-16.wav"); if (err == 0), disp("processed/ouwou-4bands-fc-16.wav done"); else disp("processed/ouwou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ouwou-4bands-fc-128.wav"); if (err == 0), disp("processed/ouwou-4bands-fc-128.wav done"); else disp("processed/ouwou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ouwou-6bands-fc-4.wav"); if (err == 0), disp("processed/ouwou-6bands-fc-4.wav done"); else disp("processed/ouwou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ouwou-6bands-fc-16.wav"); if (err == 0), disp("processed/ouwou-6bands-fc-16.wav done"); else disp("processed/ouwou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ouwou-6bands-fc-128.wav"); if (err == 0), disp("processed/ouwou-6bands-fc-128.wav done"); else disp("processed/ouwou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ouwou-8bands-fc-4.wav"); if (err == 0), disp("processed/ouwou-8bands-fc-4.wav done"); else disp("processed/ouwou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ouwou-8bands-fc-16.wav"); if (err == 0), disp("processed/ouwou-8bands-fc-16.wav done"); else disp("processed/ouwou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ouwou-8bands-fc-128.wav"); if (err == 0), disp("processed/ouwou-8bands-fc-128.wav done"); else disp("processed/ouwou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ouwou-12bands-fc-4.wav"); if (err == 0), disp("processed/ouwou-12bands-fc-4.wav done"); else disp("processed/ouwou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ouwou-12bands-fc-16.wav"); if (err == 0), disp("processed/ouwou-12bands-fc-16.wav done"); else disp("processed/ouwou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ouwou-12bands-fc-128.wav"); if (err == 0), disp("processed/ouwou-12bands-fc-128.wav done"); else disp("processed/ouwou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ouwou-16bands-fc-4.wav"); if (err == 0), disp("processed/ouwou-16bands-fc-4.wav done"); else disp("processed/ouwou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ouwou-16bands-fc-16.wav"); if (err == 0), disp("processed/ouwou-16bands-fc-16.wav done"); else disp("processed/ouwou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ouwou-16bands-fc-128.wav"); if (err == 0), disp("processed/ouwou-16bands-fc-128.wav done"); else disp("processed/ouwou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/Seg_consonnes/ouwou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs); y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/C/ouwou-16bands-fc-128.wav"); end
