[s,err] = stat("processed/i-1bands-fc-4.wav"); if (err == 0), disp("processed/i-1bands-fc-4.wav done"); else disp("processed/i-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-1bands-fc-4.wav"); end
[s,err] = stat("processed/i-1bands-fc-16.wav"); if (err == 0), disp("processed/i-1bands-fc-16.wav done"); else disp("processed/i-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-1bands-fc-16.wav"); end
[s,err] = stat("processed/i-1bands-fc-128.wav"); if (err == 0), disp("processed/i-1bands-fc-128.wav done"); else disp("processed/i-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-1bands-fc-128.wav"); end
[s,err] = stat("processed/i-2bands-fc-4.wav"); if (err == 0), disp("processed/i-2bands-fc-4.wav done"); else disp("processed/i-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-2bands-fc-4.wav"); end
[s,err] = stat("processed/i-2bands-fc-16.wav"); if (err == 0), disp("processed/i-2bands-fc-16.wav done"); else disp("processed/i-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-2bands-fc-16.wav"); end
[s,err] = stat("processed/i-2bands-fc-128.wav"); if (err == 0), disp("processed/i-2bands-fc-128.wav done"); else disp("processed/i-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-2bands-fc-128.wav"); end
[s,err] = stat("processed/i-4bands-fc-4.wav"); if (err == 0), disp("processed/i-4bands-fc-4.wav done"); else disp("processed/i-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-4bands-fc-4.wav"); end
[s,err] = stat("processed/i-4bands-fc-16.wav"); if (err == 0), disp("processed/i-4bands-fc-16.wav done"); else disp("processed/i-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-4bands-fc-16.wav"); end
[s,err] = stat("processed/i-4bands-fc-128.wav"); if (err == 0), disp("processed/i-4bands-fc-128.wav done"); else disp("processed/i-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-4bands-fc-128.wav"); end
[s,err] = stat("processed/i-6bands-fc-4.wav"); if (err == 0), disp("processed/i-6bands-fc-4.wav done"); else disp("processed/i-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-6bands-fc-4.wav"); end
[s,err] = stat("processed/i-6bands-fc-16.wav"); if (err == 0), disp("processed/i-6bands-fc-16.wav done"); else disp("processed/i-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-6bands-fc-16.wav"); end
[s,err] = stat("processed/i-6bands-fc-128.wav"); if (err == 0), disp("processed/i-6bands-fc-128.wav done"); else disp("processed/i-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-6bands-fc-128.wav"); end
[s,err] = stat("processed/i-8bands-fc-4.wav"); if (err == 0), disp("processed/i-8bands-fc-4.wav done"); else disp("processed/i-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-8bands-fc-4.wav"); end
[s,err] = stat("processed/i-8bands-fc-16.wav"); if (err == 0), disp("processed/i-8bands-fc-16.wav done"); else disp("processed/i-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-8bands-fc-16.wav"); end
[s,err] = stat("processed/i-8bands-fc-128.wav"); if (err == 0), disp("processed/i-8bands-fc-128.wav done"); else disp("processed/i-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-8bands-fc-128.wav"); end
[s,err] = stat("processed/i-12bands-fc-4.wav"); if (err == 0), disp("processed/i-12bands-fc-4.wav done"); else disp("processed/i-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-12bands-fc-4.wav"); end
[s,err] = stat("processed/i-12bands-fc-16.wav"); if (err == 0), disp("processed/i-12bands-fc-16.wav done"); else disp("processed/i-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-12bands-fc-16.wav"); end
[s,err] = stat("processed/i-12bands-fc-128.wav"); if (err == 0), disp("processed/i-12bands-fc-128.wav done"); else disp("processed/i-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-12bands-fc-128.wav"); end
[s,err] = stat("processed/i-16bands-fc-4.wav"); if (err == 0), disp("processed/i-16bands-fc-4.wav done"); else disp("processed/i-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-16bands-fc-4.wav"); end
[s,err] = stat("processed/i-16bands-fc-16.wav"); if (err == 0), disp("processed/i-16bands-fc-16.wav done"); else disp("processed/i-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-16bands-fc-16.wav"); end
[s,err] = stat("processed/i-16bands-fc-128.wav"); if (err == 0), disp("processed/i-16bands-fc-128.wav done"); else disp("processed/i-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/i.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/i-16bands-fc-128.wav"); end
[s,err] = stat("processed/u-1bands-fc-4.wav"); if (err == 0), disp("processed/u-1bands-fc-4.wav done"); else disp("processed/u-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-1bands-fc-4.wav"); end
[s,err] = stat("processed/u-1bands-fc-16.wav"); if (err == 0), disp("processed/u-1bands-fc-16.wav done"); else disp("processed/u-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-1bands-fc-16.wav"); end
[s,err] = stat("processed/u-1bands-fc-128.wav"); if (err == 0), disp("processed/u-1bands-fc-128.wav done"); else disp("processed/u-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-1bands-fc-128.wav"); end
[s,err] = stat("processed/u-2bands-fc-4.wav"); if (err == 0), disp("processed/u-2bands-fc-4.wav done"); else disp("processed/u-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-2bands-fc-4.wav"); end
[s,err] = stat("processed/u-2bands-fc-16.wav"); if (err == 0), disp("processed/u-2bands-fc-16.wav done"); else disp("processed/u-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-2bands-fc-16.wav"); end
[s,err] = stat("processed/u-2bands-fc-128.wav"); if (err == 0), disp("processed/u-2bands-fc-128.wav done"); else disp("processed/u-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-2bands-fc-128.wav"); end
[s,err] = stat("processed/u-4bands-fc-4.wav"); if (err == 0), disp("processed/u-4bands-fc-4.wav done"); else disp("processed/u-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-4bands-fc-4.wav"); end
[s,err] = stat("processed/u-4bands-fc-16.wav"); if (err == 0), disp("processed/u-4bands-fc-16.wav done"); else disp("processed/u-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-4bands-fc-16.wav"); end
[s,err] = stat("processed/u-4bands-fc-128.wav"); if (err == 0), disp("processed/u-4bands-fc-128.wav done"); else disp("processed/u-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-4bands-fc-128.wav"); end
[s,err] = stat("processed/u-6bands-fc-4.wav"); if (err == 0), disp("processed/u-6bands-fc-4.wav done"); else disp("processed/u-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-6bands-fc-4.wav"); end
[s,err] = stat("processed/u-6bands-fc-16.wav"); if (err == 0), disp("processed/u-6bands-fc-16.wav done"); else disp("processed/u-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-6bands-fc-16.wav"); end
[s,err] = stat("processed/u-6bands-fc-128.wav"); if (err == 0), disp("processed/u-6bands-fc-128.wav done"); else disp("processed/u-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-6bands-fc-128.wav"); end
[s,err] = stat("processed/u-8bands-fc-4.wav"); if (err == 0), disp("processed/u-8bands-fc-4.wav done"); else disp("processed/u-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-8bands-fc-4.wav"); end
[s,err] = stat("processed/u-8bands-fc-16.wav"); if (err == 0), disp("processed/u-8bands-fc-16.wav done"); else disp("processed/u-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-8bands-fc-16.wav"); end
[s,err] = stat("processed/u-8bands-fc-128.wav"); if (err == 0), disp("processed/u-8bands-fc-128.wav done"); else disp("processed/u-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-8bands-fc-128.wav"); end
[s,err] = stat("processed/u-12bands-fc-4.wav"); if (err == 0), disp("processed/u-12bands-fc-4.wav done"); else disp("processed/u-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-12bands-fc-4.wav"); end
[s,err] = stat("processed/u-12bands-fc-16.wav"); if (err == 0), disp("processed/u-12bands-fc-16.wav done"); else disp("processed/u-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-12bands-fc-16.wav"); end
[s,err] = stat("processed/u-12bands-fc-128.wav"); if (err == 0), disp("processed/u-12bands-fc-128.wav done"); else disp("processed/u-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-12bands-fc-128.wav"); end
[s,err] = stat("processed/u-16bands-fc-4.wav"); if (err == 0), disp("processed/u-16bands-fc-4.wav done"); else disp("processed/u-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-16bands-fc-4.wav"); end
[s,err] = stat("processed/u-16bands-fc-16.wav"); if (err == 0), disp("processed/u-16bands-fc-16.wav done"); else disp("processed/u-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-16bands-fc-16.wav"); end
[s,err] = stat("processed/u-16bands-fc-128.wav"); if (err == 0), disp("processed/u-16bands-fc-128.wav done"); else disp("processed/u-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/u.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/u-16bands-fc-128.wav"); end
[s,err] = stat("processed/é-1bands-fc-4.wav"); if (err == 0), disp("processed/é-1bands-fc-4.wav done"); else disp("processed/é-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-1bands-fc-4.wav"); end
[s,err] = stat("processed/é-1bands-fc-16.wav"); if (err == 0), disp("processed/é-1bands-fc-16.wav done"); else disp("processed/é-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-1bands-fc-16.wav"); end
[s,err] = stat("processed/é-1bands-fc-128.wav"); if (err == 0), disp("processed/é-1bands-fc-128.wav done"); else disp("processed/é-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-1bands-fc-128.wav"); end
[s,err] = stat("processed/é-2bands-fc-4.wav"); if (err == 0), disp("processed/é-2bands-fc-4.wav done"); else disp("processed/é-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-2bands-fc-4.wav"); end
[s,err] = stat("processed/é-2bands-fc-16.wav"); if (err == 0), disp("processed/é-2bands-fc-16.wav done"); else disp("processed/é-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-2bands-fc-16.wav"); end
[s,err] = stat("processed/é-2bands-fc-128.wav"); if (err == 0), disp("processed/é-2bands-fc-128.wav done"); else disp("processed/é-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-2bands-fc-128.wav"); end
[s,err] = stat("processed/é-4bands-fc-4.wav"); if (err == 0), disp("processed/é-4bands-fc-4.wav done"); else disp("processed/é-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-4bands-fc-4.wav"); end
[s,err] = stat("processed/é-4bands-fc-16.wav"); if (err == 0), disp("processed/é-4bands-fc-16.wav done"); else disp("processed/é-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-4bands-fc-16.wav"); end
[s,err] = stat("processed/é-4bands-fc-128.wav"); if (err == 0), disp("processed/é-4bands-fc-128.wav done"); else disp("processed/é-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-4bands-fc-128.wav"); end
[s,err] = stat("processed/é-6bands-fc-4.wav"); if (err == 0), disp("processed/é-6bands-fc-4.wav done"); else disp("processed/é-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-6bands-fc-4.wav"); end
[s,err] = stat("processed/é-6bands-fc-16.wav"); if (err == 0), disp("processed/é-6bands-fc-16.wav done"); else disp("processed/é-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-6bands-fc-16.wav"); end
[s,err] = stat("processed/é-6bands-fc-128.wav"); if (err == 0), disp("processed/é-6bands-fc-128.wav done"); else disp("processed/é-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-6bands-fc-128.wav"); end
[s,err] = stat("processed/é-8bands-fc-4.wav"); if (err == 0), disp("processed/é-8bands-fc-4.wav done"); else disp("processed/é-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-8bands-fc-4.wav"); end
[s,err] = stat("processed/é-8bands-fc-16.wav"); if (err == 0), disp("processed/é-8bands-fc-16.wav done"); else disp("processed/é-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-8bands-fc-16.wav"); end
[s,err] = stat("processed/é-8bands-fc-128.wav"); if (err == 0), disp("processed/é-8bands-fc-128.wav done"); else disp("processed/é-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-8bands-fc-128.wav"); end
[s,err] = stat("processed/é-12bands-fc-4.wav"); if (err == 0), disp("processed/é-12bands-fc-4.wav done"); else disp("processed/é-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-12bands-fc-4.wav"); end
[s,err] = stat("processed/é-12bands-fc-16.wav"); if (err == 0), disp("processed/é-12bands-fc-16.wav done"); else disp("processed/é-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-12bands-fc-16.wav"); end
[s,err] = stat("processed/é-12bands-fc-128.wav"); if (err == 0), disp("processed/é-12bands-fc-128.wav done"); else disp("processed/é-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-12bands-fc-128.wav"); end
[s,err] = stat("processed/é-16bands-fc-4.wav"); if (err == 0), disp("processed/é-16bands-fc-4.wav done"); else disp("processed/é-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-16bands-fc-4.wav"); end
[s,err] = stat("processed/é-16bands-fc-16.wav"); if (err == 0), disp("processed/é-16bands-fc-16.wav done"); else disp("processed/é-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-16bands-fc-16.wav"); end
[s,err] = stat("processed/é-16bands-fc-128.wav"); if (err == 0), disp("processed/é-16bands-fc-128.wav done"); else disp("processed/é-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/é.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/é-16bands-fc-128.wav"); end
[s,err] = stat("processed/eu-1bands-fc-4.wav"); if (err == 0), disp("processed/eu-1bands-fc-4.wav done"); else disp("processed/eu-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-1bands-fc-4.wav"); end
[s,err] = stat("processed/eu-1bands-fc-16.wav"); if (err == 0), disp("processed/eu-1bands-fc-16.wav done"); else disp("processed/eu-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-1bands-fc-16.wav"); end
[s,err] = stat("processed/eu-1bands-fc-128.wav"); if (err == 0), disp("processed/eu-1bands-fc-128.wav done"); else disp("processed/eu-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-1bands-fc-128.wav"); end
[s,err] = stat("processed/eu-2bands-fc-4.wav"); if (err == 0), disp("processed/eu-2bands-fc-4.wav done"); else disp("processed/eu-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-2bands-fc-4.wav"); end
[s,err] = stat("processed/eu-2bands-fc-16.wav"); if (err == 0), disp("processed/eu-2bands-fc-16.wav done"); else disp("processed/eu-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-2bands-fc-16.wav"); end
[s,err] = stat("processed/eu-2bands-fc-128.wav"); if (err == 0), disp("processed/eu-2bands-fc-128.wav done"); else disp("processed/eu-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-2bands-fc-128.wav"); end
[s,err] = stat("processed/eu-4bands-fc-4.wav"); if (err == 0), disp("processed/eu-4bands-fc-4.wav done"); else disp("processed/eu-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-4bands-fc-4.wav"); end
[s,err] = stat("processed/eu-4bands-fc-16.wav"); if (err == 0), disp("processed/eu-4bands-fc-16.wav done"); else disp("processed/eu-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-4bands-fc-16.wav"); end
[s,err] = stat("processed/eu-4bands-fc-128.wav"); if (err == 0), disp("processed/eu-4bands-fc-128.wav done"); else disp("processed/eu-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-4bands-fc-128.wav"); end
[s,err] = stat("processed/eu-6bands-fc-4.wav"); if (err == 0), disp("processed/eu-6bands-fc-4.wav done"); else disp("processed/eu-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-6bands-fc-4.wav"); end
[s,err] = stat("processed/eu-6bands-fc-16.wav"); if (err == 0), disp("processed/eu-6bands-fc-16.wav done"); else disp("processed/eu-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-6bands-fc-16.wav"); end
[s,err] = stat("processed/eu-6bands-fc-128.wav"); if (err == 0), disp("processed/eu-6bands-fc-128.wav done"); else disp("processed/eu-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-6bands-fc-128.wav"); end
[s,err] = stat("processed/eu-8bands-fc-4.wav"); if (err == 0), disp("processed/eu-8bands-fc-4.wav done"); else disp("processed/eu-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-8bands-fc-4.wav"); end
[s,err] = stat("processed/eu-8bands-fc-16.wav"); if (err == 0), disp("processed/eu-8bands-fc-16.wav done"); else disp("processed/eu-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-8bands-fc-16.wav"); end
[s,err] = stat("processed/eu-8bands-fc-128.wav"); if (err == 0), disp("processed/eu-8bands-fc-128.wav done"); else disp("processed/eu-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-8bands-fc-128.wav"); end
[s,err] = stat("processed/eu-12bands-fc-4.wav"); if (err == 0), disp("processed/eu-12bands-fc-4.wav done"); else disp("processed/eu-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-12bands-fc-4.wav"); end
[s,err] = stat("processed/eu-12bands-fc-16.wav"); if (err == 0), disp("processed/eu-12bands-fc-16.wav done"); else disp("processed/eu-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-12bands-fc-16.wav"); end
[s,err] = stat("processed/eu-12bands-fc-128.wav"); if (err == 0), disp("processed/eu-12bands-fc-128.wav done"); else disp("processed/eu-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-12bands-fc-128.wav"); end
[s,err] = stat("processed/eu-16bands-fc-4.wav"); if (err == 0), disp("processed/eu-16bands-fc-4.wav done"); else disp("processed/eu-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-16bands-fc-4.wav"); end
[s,err] = stat("processed/eu-16bands-fc-16.wav"); if (err == 0), disp("processed/eu-16bands-fc-16.wav done"); else disp("processed/eu-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-16bands-fc-16.wav"); end
[s,err] = stat("processed/eu-16bands-fc-128.wav"); if (err == 0), disp("processed/eu-16bands-fc-128.wav done"); else disp("processed/eu-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/eu.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/eu-16bands-fc-128.wav"); end
[s,err] = stat("processed/a-1bands-fc-4.wav"); if (err == 0), disp("processed/a-1bands-fc-4.wav done"); else disp("processed/a-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-1bands-fc-4.wav"); end
[s,err] = stat("processed/a-1bands-fc-16.wav"); if (err == 0), disp("processed/a-1bands-fc-16.wav done"); else disp("processed/a-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-1bands-fc-16.wav"); end
[s,err] = stat("processed/a-1bands-fc-128.wav"); if (err == 0), disp("processed/a-1bands-fc-128.wav done"); else disp("processed/a-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-1bands-fc-128.wav"); end
[s,err] = stat("processed/a-2bands-fc-4.wav"); if (err == 0), disp("processed/a-2bands-fc-4.wav done"); else disp("processed/a-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-2bands-fc-4.wav"); end
[s,err] = stat("processed/a-2bands-fc-16.wav"); if (err == 0), disp("processed/a-2bands-fc-16.wav done"); else disp("processed/a-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-2bands-fc-16.wav"); end
[s,err] = stat("processed/a-2bands-fc-128.wav"); if (err == 0), disp("processed/a-2bands-fc-128.wav done"); else disp("processed/a-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-2bands-fc-128.wav"); end
[s,err] = stat("processed/a-4bands-fc-4.wav"); if (err == 0), disp("processed/a-4bands-fc-4.wav done"); else disp("processed/a-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-4bands-fc-4.wav"); end
[s,err] = stat("processed/a-4bands-fc-16.wav"); if (err == 0), disp("processed/a-4bands-fc-16.wav done"); else disp("processed/a-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-4bands-fc-16.wav"); end
[s,err] = stat("processed/a-4bands-fc-128.wav"); if (err == 0), disp("processed/a-4bands-fc-128.wav done"); else disp("processed/a-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-4bands-fc-128.wav"); end
[s,err] = stat("processed/a-6bands-fc-4.wav"); if (err == 0), disp("processed/a-6bands-fc-4.wav done"); else disp("processed/a-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-6bands-fc-4.wav"); end
[s,err] = stat("processed/a-6bands-fc-16.wav"); if (err == 0), disp("processed/a-6bands-fc-16.wav done"); else disp("processed/a-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-6bands-fc-16.wav"); end
[s,err] = stat("processed/a-6bands-fc-128.wav"); if (err == 0), disp("processed/a-6bands-fc-128.wav done"); else disp("processed/a-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-6bands-fc-128.wav"); end
[s,err] = stat("processed/a-8bands-fc-4.wav"); if (err == 0), disp("processed/a-8bands-fc-4.wav done"); else disp("processed/a-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-8bands-fc-4.wav"); end
[s,err] = stat("processed/a-8bands-fc-16.wav"); if (err == 0), disp("processed/a-8bands-fc-16.wav done"); else disp("processed/a-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-8bands-fc-16.wav"); end
[s,err] = stat("processed/a-8bands-fc-128.wav"); if (err == 0), disp("processed/a-8bands-fc-128.wav done"); else disp("processed/a-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-8bands-fc-128.wav"); end
[s,err] = stat("processed/a-12bands-fc-4.wav"); if (err == 0), disp("processed/a-12bands-fc-4.wav done"); else disp("processed/a-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-12bands-fc-4.wav"); end
[s,err] = stat("processed/a-12bands-fc-16.wav"); if (err == 0), disp("processed/a-12bands-fc-16.wav done"); else disp("processed/a-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-12bands-fc-16.wav"); end
[s,err] = stat("processed/a-12bands-fc-128.wav"); if (err == 0), disp("processed/a-12bands-fc-128.wav done"); else disp("processed/a-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-12bands-fc-128.wav"); end
[s,err] = stat("processed/a-16bands-fc-4.wav"); if (err == 0), disp("processed/a-16bands-fc-4.wav done"); else disp("processed/a-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-16bands-fc-4.wav"); end
[s,err] = stat("processed/a-16bands-fc-16.wav"); if (err == 0), disp("processed/a-16bands-fc-16.wav done"); else disp("processed/a-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-16bands-fc-16.wav"); end
[s,err] = stat("processed/a-16bands-fc-128.wav"); if (err == 0), disp("processed/a-16bands-fc-128.wav done"); else disp("processed/a-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/a.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/a-16bands-fc-128.wav"); end
[s,err] = stat("processed/o-1bands-fc-4.wav"); if (err == 0), disp("processed/o-1bands-fc-4.wav done"); else disp("processed/o-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-1bands-fc-4.wav"); end
[s,err] = stat("processed/o-1bands-fc-16.wav"); if (err == 0), disp("processed/o-1bands-fc-16.wav done"); else disp("processed/o-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-1bands-fc-16.wav"); end
[s,err] = stat("processed/o-1bands-fc-128.wav"); if (err == 0), disp("processed/o-1bands-fc-128.wav done"); else disp("processed/o-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-1bands-fc-128.wav"); end
[s,err] = stat("processed/o-2bands-fc-4.wav"); if (err == 0), disp("processed/o-2bands-fc-4.wav done"); else disp("processed/o-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-2bands-fc-4.wav"); end
[s,err] = stat("processed/o-2bands-fc-16.wav"); if (err == 0), disp("processed/o-2bands-fc-16.wav done"); else disp("processed/o-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-2bands-fc-16.wav"); end
[s,err] = stat("processed/o-2bands-fc-128.wav"); if (err == 0), disp("processed/o-2bands-fc-128.wav done"); else disp("processed/o-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-2bands-fc-128.wav"); end
[s,err] = stat("processed/o-4bands-fc-4.wav"); if (err == 0), disp("processed/o-4bands-fc-4.wav done"); else disp("processed/o-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-4bands-fc-4.wav"); end
[s,err] = stat("processed/o-4bands-fc-16.wav"); if (err == 0), disp("processed/o-4bands-fc-16.wav done"); else disp("processed/o-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-4bands-fc-16.wav"); end
[s,err] = stat("processed/o-4bands-fc-128.wav"); if (err == 0), disp("processed/o-4bands-fc-128.wav done"); else disp("processed/o-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-4bands-fc-128.wav"); end
[s,err] = stat("processed/o-6bands-fc-4.wav"); if (err == 0), disp("processed/o-6bands-fc-4.wav done"); else disp("processed/o-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-6bands-fc-4.wav"); end
[s,err] = stat("processed/o-6bands-fc-16.wav"); if (err == 0), disp("processed/o-6bands-fc-16.wav done"); else disp("processed/o-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-6bands-fc-16.wav"); end
[s,err] = stat("processed/o-6bands-fc-128.wav"); if (err == 0), disp("processed/o-6bands-fc-128.wav done"); else disp("processed/o-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-6bands-fc-128.wav"); end
[s,err] = stat("processed/o-8bands-fc-4.wav"); if (err == 0), disp("processed/o-8bands-fc-4.wav done"); else disp("processed/o-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-8bands-fc-4.wav"); end
[s,err] = stat("processed/o-8bands-fc-16.wav"); if (err == 0), disp("processed/o-8bands-fc-16.wav done"); else disp("processed/o-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-8bands-fc-16.wav"); end
[s,err] = stat("processed/o-8bands-fc-128.wav"); if (err == 0), disp("processed/o-8bands-fc-128.wav done"); else disp("processed/o-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-8bands-fc-128.wav"); end
[s,err] = stat("processed/o-12bands-fc-4.wav"); if (err == 0), disp("processed/o-12bands-fc-4.wav done"); else disp("processed/o-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-12bands-fc-4.wav"); end
[s,err] = stat("processed/o-12bands-fc-16.wav"); if (err == 0), disp("processed/o-12bands-fc-16.wav done"); else disp("processed/o-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-12bands-fc-16.wav"); end
[s,err] = stat("processed/o-12bands-fc-128.wav"); if (err == 0), disp("processed/o-12bands-fc-128.wav done"); else disp("processed/o-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-12bands-fc-128.wav"); end
[s,err] = stat("processed/o-16bands-fc-4.wav"); if (err == 0), disp("processed/o-16bands-fc-4.wav done"); else disp("processed/o-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-16bands-fc-4.wav"); end
[s,err] = stat("processed/o-16bands-fc-16.wav"); if (err == 0), disp("processed/o-16bands-fc-16.wav done"); else disp("processed/o-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-16bands-fc-16.wav"); end
[s,err] = stat("processed/o-16bands-fc-128.wav"); if (err == 0), disp("processed/o-16bands-fc-128.wav done"); else disp("processed/o-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/o.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/o-16bands-fc-128.wav"); end
[s,err] = stat("processed/ou-1bands-fc-4.wav"); if (err == 0), disp("processed/ou-1bands-fc-4.wav done"); else disp("processed/ou-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-1bands-fc-4.wav"); end
[s,err] = stat("processed/ou-1bands-fc-16.wav"); if (err == 0), disp("processed/ou-1bands-fc-16.wav done"); else disp("processed/ou-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-1bands-fc-16.wav"); end
[s,err] = stat("processed/ou-1bands-fc-128.wav"); if (err == 0), disp("processed/ou-1bands-fc-128.wav done"); else disp("processed/ou-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-1bands-fc-128.wav"); end
[s,err] = stat("processed/ou-2bands-fc-4.wav"); if (err == 0), disp("processed/ou-2bands-fc-4.wav done"); else disp("processed/ou-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-2bands-fc-4.wav"); end
[s,err] = stat("processed/ou-2bands-fc-16.wav"); if (err == 0), disp("processed/ou-2bands-fc-16.wav done"); else disp("processed/ou-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-2bands-fc-16.wav"); end
[s,err] = stat("processed/ou-2bands-fc-128.wav"); if (err == 0), disp("processed/ou-2bands-fc-128.wav done"); else disp("processed/ou-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-2bands-fc-128.wav"); end
[s,err] = stat("processed/ou-4bands-fc-4.wav"); if (err == 0), disp("processed/ou-4bands-fc-4.wav done"); else disp("processed/ou-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-4bands-fc-4.wav"); end
[s,err] = stat("processed/ou-4bands-fc-16.wav"); if (err == 0), disp("processed/ou-4bands-fc-16.wav done"); else disp("processed/ou-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-4bands-fc-16.wav"); end
[s,err] = stat("processed/ou-4bands-fc-128.wav"); if (err == 0), disp("processed/ou-4bands-fc-128.wav done"); else disp("processed/ou-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-4bands-fc-128.wav"); end
[s,err] = stat("processed/ou-6bands-fc-4.wav"); if (err == 0), disp("processed/ou-6bands-fc-4.wav done"); else disp("processed/ou-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-6bands-fc-4.wav"); end
[s,err] = stat("processed/ou-6bands-fc-16.wav"); if (err == 0), disp("processed/ou-6bands-fc-16.wav done"); else disp("processed/ou-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-6bands-fc-16.wav"); end
[s,err] = stat("processed/ou-6bands-fc-128.wav"); if (err == 0), disp("processed/ou-6bands-fc-128.wav done"); else disp("processed/ou-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-6bands-fc-128.wav"); end
[s,err] = stat("processed/ou-8bands-fc-4.wav"); if (err == 0), disp("processed/ou-8bands-fc-4.wav done"); else disp("processed/ou-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-8bands-fc-4.wav"); end
[s,err] = stat("processed/ou-8bands-fc-16.wav"); if (err == 0), disp("processed/ou-8bands-fc-16.wav done"); else disp("processed/ou-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-8bands-fc-16.wav"); end
[s,err] = stat("processed/ou-8bands-fc-128.wav"); if (err == 0), disp("processed/ou-8bands-fc-128.wav done"); else disp("processed/ou-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-8bands-fc-128.wav"); end
[s,err] = stat("processed/ou-12bands-fc-4.wav"); if (err == 0), disp("processed/ou-12bands-fc-4.wav done"); else disp("processed/ou-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-12bands-fc-4.wav"); end
[s,err] = stat("processed/ou-12bands-fc-16.wav"); if (err == 0), disp("processed/ou-12bands-fc-16.wav done"); else disp("processed/ou-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-12bands-fc-16.wav"); end
[s,err] = stat("processed/ou-12bands-fc-128.wav"); if (err == 0), disp("processed/ou-12bands-fc-128.wav done"); else disp("processed/ou-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-12bands-fc-128.wav"); end
[s,err] = stat("processed/ou-16bands-fc-4.wav"); if (err == 0), disp("processed/ou-16bands-fc-4.wav done"); else disp("processed/ou-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-16bands-fc-4.wav"); end
[s,err] = stat("processed/ou-16bands-fc-16.wav"); if (err == 0), disp("processed/ou-16bands-fc-16.wav done"); else disp("processed/ou-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-16bands-fc-16.wav"); end
[s,err] = stat("processed/ou-16bands-fc-128.wav"); if (err == 0), disp("processed/ou-16bands-fc-128.wav done"); else disp("processed/ou-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/ou.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/ou-16bands-fc-128.wav"); end
[s,err] = stat("processed/en-1bands-fc-4.wav"); if (err == 0), disp("processed/en-1bands-fc-4.wav done"); else disp("processed/en-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-1bands-fc-4.wav"); end
[s,err] = stat("processed/en-1bands-fc-16.wav"); if (err == 0), disp("processed/en-1bands-fc-16.wav done"); else disp("processed/en-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-1bands-fc-16.wav"); end
[s,err] = stat("processed/en-1bands-fc-128.wav"); if (err == 0), disp("processed/en-1bands-fc-128.wav done"); else disp("processed/en-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-1bands-fc-128.wav"); end
[s,err] = stat("processed/en-2bands-fc-4.wav"); if (err == 0), disp("processed/en-2bands-fc-4.wav done"); else disp("processed/en-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-2bands-fc-4.wav"); end
[s,err] = stat("processed/en-2bands-fc-16.wav"); if (err == 0), disp("processed/en-2bands-fc-16.wav done"); else disp("processed/en-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-2bands-fc-16.wav"); end
[s,err] = stat("processed/en-2bands-fc-128.wav"); if (err == 0), disp("processed/en-2bands-fc-128.wav done"); else disp("processed/en-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-2bands-fc-128.wav"); end
[s,err] = stat("processed/en-4bands-fc-4.wav"); if (err == 0), disp("processed/en-4bands-fc-4.wav done"); else disp("processed/en-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-4bands-fc-4.wav"); end
[s,err] = stat("processed/en-4bands-fc-16.wav"); if (err == 0), disp("processed/en-4bands-fc-16.wav done"); else disp("processed/en-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-4bands-fc-16.wav"); end
[s,err] = stat("processed/en-4bands-fc-128.wav"); if (err == 0), disp("processed/en-4bands-fc-128.wav done"); else disp("processed/en-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-4bands-fc-128.wav"); end
[s,err] = stat("processed/en-6bands-fc-4.wav"); if (err == 0), disp("processed/en-6bands-fc-4.wav done"); else disp("processed/en-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-6bands-fc-4.wav"); end
[s,err] = stat("processed/en-6bands-fc-16.wav"); if (err == 0), disp("processed/en-6bands-fc-16.wav done"); else disp("processed/en-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-6bands-fc-16.wav"); end
[s,err] = stat("processed/en-6bands-fc-128.wav"); if (err == 0), disp("processed/en-6bands-fc-128.wav done"); else disp("processed/en-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-6bands-fc-128.wav"); end
[s,err] = stat("processed/en-8bands-fc-4.wav"); if (err == 0), disp("processed/en-8bands-fc-4.wav done"); else disp("processed/en-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-8bands-fc-4.wav"); end
[s,err] = stat("processed/en-8bands-fc-16.wav"); if (err == 0), disp("processed/en-8bands-fc-16.wav done"); else disp("processed/en-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-8bands-fc-16.wav"); end
[s,err] = stat("processed/en-8bands-fc-128.wav"); if (err == 0), disp("processed/en-8bands-fc-128.wav done"); else disp("processed/en-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-8bands-fc-128.wav"); end
[s,err] = stat("processed/en-12bands-fc-4.wav"); if (err == 0), disp("processed/en-12bands-fc-4.wav done"); else disp("processed/en-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-12bands-fc-4.wav"); end
[s,err] = stat("processed/en-12bands-fc-16.wav"); if (err == 0), disp("processed/en-12bands-fc-16.wav done"); else disp("processed/en-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-12bands-fc-16.wav"); end
[s,err] = stat("processed/en-12bands-fc-128.wav"); if (err == 0), disp("processed/en-12bands-fc-128.wav done"); else disp("processed/en-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-12bands-fc-128.wav"); end
[s,err] = stat("processed/en-16bands-fc-4.wav"); if (err == 0), disp("processed/en-16bands-fc-4.wav done"); else disp("processed/en-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-16bands-fc-4.wav"); end
[s,err] = stat("processed/en-16bands-fc-16.wav"); if (err == 0), disp("processed/en-16bands-fc-16.wav done"); else disp("processed/en-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-16bands-fc-16.wav"); end
[s,err] = stat("processed/en-16bands-fc-128.wav"); if (err == 0), disp("processed/en-16bands-fc-128.wav done"); else disp("processed/en-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/en.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/en-16bands-fc-128.wav"); end
[s,err] = stat("processed/on-1bands-fc-4.wav"); if (err == 0), disp("processed/on-1bands-fc-4.wav done"); else disp("processed/on-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-1bands-fc-4.wav"); end
[s,err] = stat("processed/on-1bands-fc-16.wav"); if (err == 0), disp("processed/on-1bands-fc-16.wav done"); else disp("processed/on-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-1bands-fc-16.wav"); end
[s,err] = stat("processed/on-1bands-fc-128.wav"); if (err == 0), disp("processed/on-1bands-fc-128.wav done"); else disp("processed/on-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-1bands-fc-128.wav"); end
[s,err] = stat("processed/on-2bands-fc-4.wav"); if (err == 0), disp("processed/on-2bands-fc-4.wav done"); else disp("processed/on-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-2bands-fc-4.wav"); end
[s,err] = stat("processed/on-2bands-fc-16.wav"); if (err == 0), disp("processed/on-2bands-fc-16.wav done"); else disp("processed/on-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-2bands-fc-16.wav"); end
[s,err] = stat("processed/on-2bands-fc-128.wav"); if (err == 0), disp("processed/on-2bands-fc-128.wav done"); else disp("processed/on-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-2bands-fc-128.wav"); end
[s,err] = stat("processed/on-4bands-fc-4.wav"); if (err == 0), disp("processed/on-4bands-fc-4.wav done"); else disp("processed/on-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-4bands-fc-4.wav"); end
[s,err] = stat("processed/on-4bands-fc-16.wav"); if (err == 0), disp("processed/on-4bands-fc-16.wav done"); else disp("processed/on-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-4bands-fc-16.wav"); end
[s,err] = stat("processed/on-4bands-fc-128.wav"); if (err == 0), disp("processed/on-4bands-fc-128.wav done"); else disp("processed/on-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-4bands-fc-128.wav"); end
[s,err] = stat("processed/on-6bands-fc-4.wav"); if (err == 0), disp("processed/on-6bands-fc-4.wav done"); else disp("processed/on-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-6bands-fc-4.wav"); end
[s,err] = stat("processed/on-6bands-fc-16.wav"); if (err == 0), disp("processed/on-6bands-fc-16.wav done"); else disp("processed/on-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-6bands-fc-16.wav"); end
[s,err] = stat("processed/on-6bands-fc-128.wav"); if (err == 0), disp("processed/on-6bands-fc-128.wav done"); else disp("processed/on-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-6bands-fc-128.wav"); end
[s,err] = stat("processed/on-8bands-fc-4.wav"); if (err == 0), disp("processed/on-8bands-fc-4.wav done"); else disp("processed/on-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-8bands-fc-4.wav"); end
[s,err] = stat("processed/on-8bands-fc-16.wav"); if (err == 0), disp("processed/on-8bands-fc-16.wav done"); else disp("processed/on-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-8bands-fc-16.wav"); end
[s,err] = stat("processed/on-8bands-fc-128.wav"); if (err == 0), disp("processed/on-8bands-fc-128.wav done"); else disp("processed/on-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-8bands-fc-128.wav"); end
[s,err] = stat("processed/on-12bands-fc-4.wav"); if (err == 0), disp("processed/on-12bands-fc-4.wav done"); else disp("processed/on-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-12bands-fc-4.wav"); end
[s,err] = stat("processed/on-12bands-fc-16.wav"); if (err == 0), disp("processed/on-12bands-fc-16.wav done"); else disp("processed/on-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-12bands-fc-16.wav"); end
[s,err] = stat("processed/on-12bands-fc-128.wav"); if (err == 0), disp("processed/on-12bands-fc-128.wav done"); else disp("processed/on-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-12bands-fc-128.wav"); end
[s,err] = stat("processed/on-16bands-fc-4.wav"); if (err == 0), disp("processed/on-16bands-fc-4.wav done"); else disp("processed/on-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-16bands-fc-4.wav"); end
[s,err] = stat("processed/on-16bands-fc-16.wav"); if (err == 0), disp("processed/on-16bands-fc-16.wav done"); else disp("processed/on-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-16bands-fc-16.wav"); end
[s,err] = stat("processed/on-16bands-fc-128.wav"); if (err == 0), disp("processed/on-16bands-fc-128.wav done"); else disp("processed/on-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/on.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/on-16bands-fc-128.wav"); end
[s,err] = stat("processed/in-1bands-fc-4.wav"); if (err == 0), disp("processed/in-1bands-fc-4.wav done"); else disp("processed/in-1bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-1bands-fc-4.wav"); end
[s,err] = stat("processed/in-1bands-fc-16.wav"); if (err == 0), disp("processed/in-1bands-fc-16.wav done"); else disp("processed/in-1bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-1bands-fc-16.wav"); end
[s,err] = stat("processed/in-1bands-fc-128.wav"); if (err == 0), disp("processed/in-1bands-fc-128.wav done"); else disp("processed/in-1bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,1,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-1bands-fc-128.wav"); end
[s,err] = stat("processed/in-2bands-fc-4.wav"); if (err == 0), disp("processed/in-2bands-fc-4.wav done"); else disp("processed/in-2bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-2bands-fc-4.wav"); end
[s,err] = stat("processed/in-2bands-fc-16.wav"); if (err == 0), disp("processed/in-2bands-fc-16.wav done"); else disp("processed/in-2bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-2bands-fc-16.wav"); end
[s,err] = stat("processed/in-2bands-fc-128.wav"); if (err == 0), disp("processed/in-2bands-fc-128.wav done"); else disp("processed/in-2bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,2,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-2bands-fc-128.wav"); end
[s,err] = stat("processed/in-4bands-fc-4.wav"); if (err == 0), disp("processed/in-4bands-fc-4.wav done"); else disp("processed/in-4bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-4bands-fc-4.wav"); end
[s,err] = stat("processed/in-4bands-fc-16.wav"); if (err == 0), disp("processed/in-4bands-fc-16.wav done"); else disp("processed/in-4bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-4bands-fc-16.wav"); end
[s,err] = stat("processed/in-4bands-fc-128.wav"); if (err == 0), disp("processed/in-4bands-fc-128.wav done"); else disp("processed/in-4bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,4,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-4bands-fc-128.wav"); end
[s,err] = stat("processed/in-6bands-fc-4.wav"); if (err == 0), disp("processed/in-6bands-fc-4.wav done"); else disp("processed/in-6bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-6bands-fc-4.wav"); end
[s,err] = stat("processed/in-6bands-fc-16.wav"); if (err == 0), disp("processed/in-6bands-fc-16.wav done"); else disp("processed/in-6bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-6bands-fc-16.wav"); end
[s,err] = stat("processed/in-6bands-fc-128.wav"); if (err == 0), disp("processed/in-6bands-fc-128.wav done"); else disp("processed/in-6bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,6,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-6bands-fc-128.wav"); end
[s,err] = stat("processed/in-8bands-fc-4.wav"); if (err == 0), disp("processed/in-8bands-fc-4.wav done"); else disp("processed/in-8bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-8bands-fc-4.wav"); end
[s,err] = stat("processed/in-8bands-fc-16.wav"); if (err == 0), disp("processed/in-8bands-fc-16.wav done"); else disp("processed/in-8bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-8bands-fc-16.wav"); end
[s,err] = stat("processed/in-8bands-fc-128.wav"); if (err == 0), disp("processed/in-8bands-fc-128.wav done"); else disp("processed/in-8bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,8,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-8bands-fc-128.wav"); end
[s,err] = stat("processed/in-12bands-fc-4.wav"); if (err == 0), disp("processed/in-12bands-fc-4.wav done"); else disp("processed/in-12bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-12bands-fc-4.wav"); end
[s,err] = stat("processed/in-12bands-fc-16.wav"); if (err == 0), disp("processed/in-12bands-fc-16.wav done"); else disp("processed/in-12bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-12bands-fc-16.wav"); end
[s,err] = stat("processed/in-12bands-fc-128.wav"); if (err == 0), disp("processed/in-12bands-fc-128.wav done"); else disp("processed/in-12bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,12,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-12bands-fc-128.wav"); end
[s,err] = stat("processed/in-16bands-fc-4.wav"); if (err == 0), disp("processed/in-16bands-fc-4.wav done"); else disp("processed/in-16bands-fc-4.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",4,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-16bands-fc-4.wav"); end
[s,err] = stat("processed/in-16bands-fc-16.wav"); if (err == 0), disp("processed/in-16bands-fc-16.wav done"); else disp("processed/in-16bands-fc-16.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",16,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-16bands-fc-16.wav"); end
[s,err] = stat("processed/in-16bands-fc-128.wav"); if (err == 0), disp("processed/in-16bands-fc-128.wav done"); else disp("processed/in-16bands-fc-128.wav: processing"); [x,fs] = auload("sons/voyelles_cut/in.wav"); [y,unpr,bands,env,cf,bandwidth,edges] = bandvocoder(x,fs,16,"fir","lpnoise",128,7000); y = zeroends(y,fs);  y = normalize(y,.8,"max"); wavwrite(y,fs,"processed/V/in-16bands-fc-128.wav"); end
